'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("Dataset1"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class Dataset1
    Inherits Global.System.Data.DataSet
    
    Private tableVIEWPURCHASEREGISTERSUMMARY As VIEWPURCHASEREGISTERSUMMARYDataTable
    
    Private tableInv_view_Pending_Indent As Inv_view_Pending_IndentDataTable
    
    Private tableISSUEDETAILS As ISSUEDETAILSDataTable
    
    Private tableissuesummary As issuesummaryDataTable
    
    Private tableINV_VIEW_INPUTTAX As INV_VIEW_INPUTTAXDataTable
    
    Private tableSTOCKISSUEDETAIL As STOCKISSUEDETAILDataTable
    
    Private tableSTOCKSUMMARY As STOCKSUMMARYDataTable
    
    Private tableISSUEREGISTER As ISSUEREGISTERDataTable
    
    Private tableVIEWSTOCKADJUSTMENT As VIEWSTOCKADJUSTMENTDataTable
    
    Private tableVIEWSTOCKREGISTER As VIEWSTOCKREGISTERDataTable
    
    Private tableInv_view_Pending_Pur As Inv_view_Pending_PurDataTable
    
    Private tableINVENTORYITEMMASTER As INVENTORYITEMMASTERDataTable
    
    Private tablePO_VIEW_VENDORMASTER As PO_VIEW_VENDORMASTERDataTable
    
    Private tableINV_PENDING_PURCHASE As INV_PENDING_PURCHASEDataTable
    
    Private tableVIEW_FOCREPORT As VIEW_FOCREPORTDataTable
    
    Private tableInv_ExiseRpt As Inv_ExiseRptDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("VIEWPURCHASEREGISTERSUMMARY")) Is Nothing) Then
                MyBase.Tables.Add(New VIEWPURCHASEREGISTERSUMMARYDataTable(ds.Tables("VIEWPURCHASEREGISTERSUMMARY")))
            End If
            If (Not (ds.Tables("Inv_view_Pending_Indent")) Is Nothing) Then
                MyBase.Tables.Add(New Inv_view_Pending_IndentDataTable(ds.Tables("Inv_view_Pending_Indent")))
            End If
            If (Not (ds.Tables("ISSUEDETAILS")) Is Nothing) Then
                MyBase.Tables.Add(New ISSUEDETAILSDataTable(ds.Tables("ISSUEDETAILS")))
            End If
            If (Not (ds.Tables("issuesummary")) Is Nothing) Then
                MyBase.Tables.Add(New issuesummaryDataTable(ds.Tables("issuesummary")))
            End If
            If (Not (ds.Tables("INV_VIEW_INPUTTAX")) Is Nothing) Then
                MyBase.Tables.Add(New INV_VIEW_INPUTTAXDataTable(ds.Tables("INV_VIEW_INPUTTAX")))
            End If
            If (Not (ds.Tables("STOCKISSUEDETAIL")) Is Nothing) Then
                MyBase.Tables.Add(New STOCKISSUEDETAILDataTable(ds.Tables("STOCKISSUEDETAIL")))
            End If
            If (Not (ds.Tables("STOCKSUMMARY")) Is Nothing) Then
                MyBase.Tables.Add(New STOCKSUMMARYDataTable(ds.Tables("STOCKSUMMARY")))
            End If
            If (Not (ds.Tables("ISSUEREGISTER")) Is Nothing) Then
                MyBase.Tables.Add(New ISSUEREGISTERDataTable(ds.Tables("ISSUEREGISTER")))
            End If
            If (Not (ds.Tables("VIEWSTOCKADJUSTMENT")) Is Nothing) Then
                MyBase.Tables.Add(New VIEWSTOCKADJUSTMENTDataTable(ds.Tables("VIEWSTOCKADJUSTMENT")))
            End If
            If (Not (ds.Tables("VIEWSTOCKREGISTER")) Is Nothing) Then
                MyBase.Tables.Add(New VIEWSTOCKREGISTERDataTable(ds.Tables("VIEWSTOCKREGISTER")))
            End If
            If (Not (ds.Tables("Inv_view_Pending_Pur")) Is Nothing) Then
                MyBase.Tables.Add(New Inv_view_Pending_PurDataTable(ds.Tables("Inv_view_Pending_Pur")))
            End If
            If (Not (ds.Tables("INVENTORYITEMMASTER")) Is Nothing) Then
                MyBase.Tables.Add(New INVENTORYITEMMASTERDataTable(ds.Tables("INVENTORYITEMMASTER")))
            End If
            If (Not (ds.Tables("PO_VIEW_VENDORMASTER")) Is Nothing) Then
                MyBase.Tables.Add(New PO_VIEW_VENDORMASTERDataTable(ds.Tables("PO_VIEW_VENDORMASTER")))
            End If
            If (Not (ds.Tables("INV_PENDING_PURCHASE")) Is Nothing) Then
                MyBase.Tables.Add(New INV_PENDING_PURCHASEDataTable(ds.Tables("INV_PENDING_PURCHASE")))
            End If
            If (Not (ds.Tables("VIEW_FOCREPORT")) Is Nothing) Then
                MyBase.Tables.Add(New VIEW_FOCREPORTDataTable(ds.Tables("VIEW_FOCREPORT")))
            End If
            If (Not (ds.Tables("Inv_ExiseRpt")) Is Nothing) Then
                MyBase.Tables.Add(New Inv_ExiseRptDataTable(ds.Tables("Inv_ExiseRpt")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property VIEWPURCHASEREGISTERSUMMARY() As VIEWPURCHASEREGISTERSUMMARYDataTable
        Get
            Return Me.tableVIEWPURCHASEREGISTERSUMMARY
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Inv_view_Pending_Indent() As Inv_view_Pending_IndentDataTable
        Get
            Return Me.tableInv_view_Pending_Indent
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ISSUEDETAILS() As ISSUEDETAILSDataTable
        Get
            Return Me.tableISSUEDETAILS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property issuesummary() As issuesummaryDataTable
        Get
            Return Me.tableissuesummary
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property INV_VIEW_INPUTTAX() As INV_VIEW_INPUTTAXDataTable
        Get
            Return Me.tableINV_VIEW_INPUTTAX
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property STOCKISSUEDETAIL() As STOCKISSUEDETAILDataTable
        Get
            Return Me.tableSTOCKISSUEDETAIL
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property STOCKSUMMARY() As STOCKSUMMARYDataTable
        Get
            Return Me.tableSTOCKSUMMARY
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ISSUEREGISTER() As ISSUEREGISTERDataTable
        Get
            Return Me.tableISSUEREGISTER
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property VIEWSTOCKADJUSTMENT() As VIEWSTOCKADJUSTMENTDataTable
        Get
            Return Me.tableVIEWSTOCKADJUSTMENT
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property VIEWSTOCKREGISTER() As VIEWSTOCKREGISTERDataTable
        Get
            Return Me.tableVIEWSTOCKREGISTER
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Inv_view_Pending_Pur() As Inv_view_Pending_PurDataTable
        Get
            Return Me.tableInv_view_Pending_Pur
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property INVENTORYITEMMASTER() As INVENTORYITEMMASTERDataTable
        Get
            Return Me.tableINVENTORYITEMMASTER
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PO_VIEW_VENDORMASTER() As PO_VIEW_VENDORMASTERDataTable
        Get
            Return Me.tablePO_VIEW_VENDORMASTER
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property INV_PENDING_PURCHASE() As INV_PENDING_PURCHASEDataTable
        Get
            Return Me.tableINV_PENDING_PURCHASE
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property VIEW_FOCREPORT() As VIEW_FOCREPORTDataTable
        Get
            Return Me.tableVIEW_FOCREPORT
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Inv_ExiseRpt() As Inv_ExiseRptDataTable
        Get
            Return Me.tableInv_ExiseRpt
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As Dataset1 = CType(MyBase.Clone,Dataset1)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("VIEWPURCHASEREGISTERSUMMARY")) Is Nothing) Then
                MyBase.Tables.Add(New VIEWPURCHASEREGISTERSUMMARYDataTable(ds.Tables("VIEWPURCHASEREGISTERSUMMARY")))
            End If
            If (Not (ds.Tables("Inv_view_Pending_Indent")) Is Nothing) Then
                MyBase.Tables.Add(New Inv_view_Pending_IndentDataTable(ds.Tables("Inv_view_Pending_Indent")))
            End If
            If (Not (ds.Tables("ISSUEDETAILS")) Is Nothing) Then
                MyBase.Tables.Add(New ISSUEDETAILSDataTable(ds.Tables("ISSUEDETAILS")))
            End If
            If (Not (ds.Tables("issuesummary")) Is Nothing) Then
                MyBase.Tables.Add(New issuesummaryDataTable(ds.Tables("issuesummary")))
            End If
            If (Not (ds.Tables("INV_VIEW_INPUTTAX")) Is Nothing) Then
                MyBase.Tables.Add(New INV_VIEW_INPUTTAXDataTable(ds.Tables("INV_VIEW_INPUTTAX")))
            End If
            If (Not (ds.Tables("STOCKISSUEDETAIL")) Is Nothing) Then
                MyBase.Tables.Add(New STOCKISSUEDETAILDataTable(ds.Tables("STOCKISSUEDETAIL")))
            End If
            If (Not (ds.Tables("STOCKSUMMARY")) Is Nothing) Then
                MyBase.Tables.Add(New STOCKSUMMARYDataTable(ds.Tables("STOCKSUMMARY")))
            End If
            If (Not (ds.Tables("ISSUEREGISTER")) Is Nothing) Then
                MyBase.Tables.Add(New ISSUEREGISTERDataTable(ds.Tables("ISSUEREGISTER")))
            End If
            If (Not (ds.Tables("VIEWSTOCKADJUSTMENT")) Is Nothing) Then
                MyBase.Tables.Add(New VIEWSTOCKADJUSTMENTDataTable(ds.Tables("VIEWSTOCKADJUSTMENT")))
            End If
            If (Not (ds.Tables("VIEWSTOCKREGISTER")) Is Nothing) Then
                MyBase.Tables.Add(New VIEWSTOCKREGISTERDataTable(ds.Tables("VIEWSTOCKREGISTER")))
            End If
            If (Not (ds.Tables("Inv_view_Pending_Pur")) Is Nothing) Then
                MyBase.Tables.Add(New Inv_view_Pending_PurDataTable(ds.Tables("Inv_view_Pending_Pur")))
            End If
            If (Not (ds.Tables("INVENTORYITEMMASTER")) Is Nothing) Then
                MyBase.Tables.Add(New INVENTORYITEMMASTERDataTable(ds.Tables("INVENTORYITEMMASTER")))
            End If
            If (Not (ds.Tables("PO_VIEW_VENDORMASTER")) Is Nothing) Then
                MyBase.Tables.Add(New PO_VIEW_VENDORMASTERDataTable(ds.Tables("PO_VIEW_VENDORMASTER")))
            End If
            If (Not (ds.Tables("INV_PENDING_PURCHASE")) Is Nothing) Then
                MyBase.Tables.Add(New INV_PENDING_PURCHASEDataTable(ds.Tables("INV_PENDING_PURCHASE")))
            End If
            If (Not (ds.Tables("VIEW_FOCREPORT")) Is Nothing) Then
                MyBase.Tables.Add(New VIEW_FOCREPORTDataTable(ds.Tables("VIEW_FOCREPORT")))
            End If
            If (Not (ds.Tables("Inv_ExiseRpt")) Is Nothing) Then
                MyBase.Tables.Add(New Inv_ExiseRptDataTable(ds.Tables("Inv_ExiseRpt")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableVIEWPURCHASEREGISTERSUMMARY = CType(MyBase.Tables("VIEWPURCHASEREGISTERSUMMARY"),VIEWPURCHASEREGISTERSUMMARYDataTable)
        If (initTable = true) Then
            If (Not (Me.tableVIEWPURCHASEREGISTERSUMMARY) Is Nothing) Then
                Me.tableVIEWPURCHASEREGISTERSUMMARY.InitVars
            End If
        End If
        Me.tableInv_view_Pending_Indent = CType(MyBase.Tables("Inv_view_Pending_Indent"),Inv_view_Pending_IndentDataTable)
        If (initTable = true) Then
            If (Not (Me.tableInv_view_Pending_Indent) Is Nothing) Then
                Me.tableInv_view_Pending_Indent.InitVars
            End If
        End If
        Me.tableISSUEDETAILS = CType(MyBase.Tables("ISSUEDETAILS"),ISSUEDETAILSDataTable)
        If (initTable = true) Then
            If (Not (Me.tableISSUEDETAILS) Is Nothing) Then
                Me.tableISSUEDETAILS.InitVars
            End If
        End If
        Me.tableissuesummary = CType(MyBase.Tables("issuesummary"),issuesummaryDataTable)
        If (initTable = true) Then
            If (Not (Me.tableissuesummary) Is Nothing) Then
                Me.tableissuesummary.InitVars
            End If
        End If
        Me.tableINV_VIEW_INPUTTAX = CType(MyBase.Tables("INV_VIEW_INPUTTAX"),INV_VIEW_INPUTTAXDataTable)
        If (initTable = true) Then
            If (Not (Me.tableINV_VIEW_INPUTTAX) Is Nothing) Then
                Me.tableINV_VIEW_INPUTTAX.InitVars
            End If
        End If
        Me.tableSTOCKISSUEDETAIL = CType(MyBase.Tables("STOCKISSUEDETAIL"),STOCKISSUEDETAILDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSTOCKISSUEDETAIL) Is Nothing) Then
                Me.tableSTOCKISSUEDETAIL.InitVars
            End If
        End If
        Me.tableSTOCKSUMMARY = CType(MyBase.Tables("STOCKSUMMARY"),STOCKSUMMARYDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSTOCKSUMMARY) Is Nothing) Then
                Me.tableSTOCKSUMMARY.InitVars
            End If
        End If
        Me.tableISSUEREGISTER = CType(MyBase.Tables("ISSUEREGISTER"),ISSUEREGISTERDataTable)
        If (initTable = true) Then
            If (Not (Me.tableISSUEREGISTER) Is Nothing) Then
                Me.tableISSUEREGISTER.InitVars
            End If
        End If
        Me.tableVIEWSTOCKADJUSTMENT = CType(MyBase.Tables("VIEWSTOCKADJUSTMENT"),VIEWSTOCKADJUSTMENTDataTable)
        If (initTable = true) Then
            If (Not (Me.tableVIEWSTOCKADJUSTMENT) Is Nothing) Then
                Me.tableVIEWSTOCKADJUSTMENT.InitVars
            End If
        End If
        Me.tableVIEWSTOCKREGISTER = CType(MyBase.Tables("VIEWSTOCKREGISTER"),VIEWSTOCKREGISTERDataTable)
        If (initTable = true) Then
            If (Not (Me.tableVIEWSTOCKREGISTER) Is Nothing) Then
                Me.tableVIEWSTOCKREGISTER.InitVars
            End If
        End If
        Me.tableInv_view_Pending_Pur = CType(MyBase.Tables("Inv_view_Pending_Pur"),Inv_view_Pending_PurDataTable)
        If (initTable = true) Then
            If (Not (Me.tableInv_view_Pending_Pur) Is Nothing) Then
                Me.tableInv_view_Pending_Pur.InitVars
            End If
        End If
        Me.tableINVENTORYITEMMASTER = CType(MyBase.Tables("INVENTORYITEMMASTER"),INVENTORYITEMMASTERDataTable)
        If (initTable = true) Then
            If (Not (Me.tableINVENTORYITEMMASTER) Is Nothing) Then
                Me.tableINVENTORYITEMMASTER.InitVars
            End If
        End If
        Me.tablePO_VIEW_VENDORMASTER = CType(MyBase.Tables("PO_VIEW_VENDORMASTER"),PO_VIEW_VENDORMASTERDataTable)
        If (initTable = true) Then
            If (Not (Me.tablePO_VIEW_VENDORMASTER) Is Nothing) Then
                Me.tablePO_VIEW_VENDORMASTER.InitVars
            End If
        End If
        Me.tableINV_PENDING_PURCHASE = CType(MyBase.Tables("INV_PENDING_PURCHASE"),INV_PENDING_PURCHASEDataTable)
        If (initTable = true) Then
            If (Not (Me.tableINV_PENDING_PURCHASE) Is Nothing) Then
                Me.tableINV_PENDING_PURCHASE.InitVars
            End If
        End If
        Me.tableVIEW_FOCREPORT = CType(MyBase.Tables("VIEW_FOCREPORT"),VIEW_FOCREPORTDataTable)
        If (initTable = true) Then
            If (Not (Me.tableVIEW_FOCREPORT) Is Nothing) Then
                Me.tableVIEW_FOCREPORT.InitVars
            End If
        End If
        Me.tableInv_ExiseRpt = CType(MyBase.Tables("Inv_ExiseRpt"),Inv_ExiseRptDataTable)
        If (initTable = true) Then
            If (Not (Me.tableInv_ExiseRpt) Is Nothing) Then
                Me.tableInv_ExiseRpt.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "Dataset1"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/Dataset1.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableVIEWPURCHASEREGISTERSUMMARY = New VIEWPURCHASEREGISTERSUMMARYDataTable()
        MyBase.Tables.Add(Me.tableVIEWPURCHASEREGISTERSUMMARY)
        Me.tableInv_view_Pending_Indent = New Inv_view_Pending_IndentDataTable()
        MyBase.Tables.Add(Me.tableInv_view_Pending_Indent)
        Me.tableISSUEDETAILS = New ISSUEDETAILSDataTable()
        MyBase.Tables.Add(Me.tableISSUEDETAILS)
        Me.tableissuesummary = New issuesummaryDataTable()
        MyBase.Tables.Add(Me.tableissuesummary)
        Me.tableINV_VIEW_INPUTTAX = New INV_VIEW_INPUTTAXDataTable()
        MyBase.Tables.Add(Me.tableINV_VIEW_INPUTTAX)
        Me.tableSTOCKISSUEDETAIL = New STOCKISSUEDETAILDataTable()
        MyBase.Tables.Add(Me.tableSTOCKISSUEDETAIL)
        Me.tableSTOCKSUMMARY = New STOCKSUMMARYDataTable()
        MyBase.Tables.Add(Me.tableSTOCKSUMMARY)
        Me.tableISSUEREGISTER = New ISSUEREGISTERDataTable()
        MyBase.Tables.Add(Me.tableISSUEREGISTER)
        Me.tableVIEWSTOCKADJUSTMENT = New VIEWSTOCKADJUSTMENTDataTable()
        MyBase.Tables.Add(Me.tableVIEWSTOCKADJUSTMENT)
        Me.tableVIEWSTOCKREGISTER = New VIEWSTOCKREGISTERDataTable()
        MyBase.Tables.Add(Me.tableVIEWSTOCKREGISTER)
        Me.tableInv_view_Pending_Pur = New Inv_view_Pending_PurDataTable()
        MyBase.Tables.Add(Me.tableInv_view_Pending_Pur)
        Me.tableINVENTORYITEMMASTER = New INVENTORYITEMMASTERDataTable()
        MyBase.Tables.Add(Me.tableINVENTORYITEMMASTER)
        Me.tablePO_VIEW_VENDORMASTER = New PO_VIEW_VENDORMASTERDataTable()
        MyBase.Tables.Add(Me.tablePO_VIEW_VENDORMASTER)
        Me.tableINV_PENDING_PURCHASE = New INV_PENDING_PURCHASEDataTable()
        MyBase.Tables.Add(Me.tableINV_PENDING_PURCHASE)
        Me.tableVIEW_FOCREPORT = New VIEW_FOCREPORTDataTable()
        MyBase.Tables.Add(Me.tableVIEW_FOCREPORT)
        Me.tableInv_ExiseRpt = New Inv_ExiseRptDataTable()
        MyBase.Tables.Add(Me.tableInv_ExiseRpt)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeVIEWPURCHASEREGISTERSUMMARY() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeInv_view_Pending_Indent() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeISSUEDETAILS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeissuesummary() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeINV_VIEW_INPUTTAX() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeSTOCKISSUEDETAIL() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeSTOCKSUMMARY() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeISSUEREGISTER() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeVIEWSTOCKADJUSTMENT() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeVIEWSTOCKREGISTER() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeInv_view_Pending_Pur() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeINVENTORYITEMMASTER() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializePO_VIEW_VENDORMASTER() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeINV_PENDING_PURCHASE() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeVIEW_FOCREPORT() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeInv_ExiseRpt() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As Dataset1 = New Dataset1()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub VIEWPURCHASEREGISTERSUMMARYRowChangeEventHandler(ByVal sender As Object, ByVal e As VIEWPURCHASEREGISTERSUMMARYRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub Inv_view_Pending_IndentRowChangeEventHandler(ByVal sender As Object, ByVal e As Inv_view_Pending_IndentRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ISSUEDETAILSRowChangeEventHandler(ByVal sender As Object, ByVal e As ISSUEDETAILSRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub issuesummaryRowChangeEventHandler(ByVal sender As Object, ByVal e As issuesummaryRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub INV_VIEW_INPUTTAXRowChangeEventHandler(ByVal sender As Object, ByVal e As INV_VIEW_INPUTTAXRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub STOCKISSUEDETAILRowChangeEventHandler(ByVal sender As Object, ByVal e As STOCKISSUEDETAILRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub STOCKSUMMARYRowChangeEventHandler(ByVal sender As Object, ByVal e As STOCKSUMMARYRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ISSUEREGISTERRowChangeEventHandler(ByVal sender As Object, ByVal e As ISSUEREGISTERRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub VIEWSTOCKADJUSTMENTRowChangeEventHandler(ByVal sender As Object, ByVal e As VIEWSTOCKADJUSTMENTRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub VIEWSTOCKREGISTERRowChangeEventHandler(ByVal sender As Object, ByVal e As VIEWSTOCKREGISTERRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub Inv_view_Pending_PurRowChangeEventHandler(ByVal sender As Object, ByVal e As Inv_view_Pending_PurRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub INVENTORYITEMMASTERRowChangeEventHandler(ByVal sender As Object, ByVal e As INVENTORYITEMMASTERRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub PO_VIEW_VENDORMASTERRowChangeEventHandler(ByVal sender As Object, ByVal e As PO_VIEW_VENDORMASTERRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub INV_PENDING_PURCHASERowChangeEventHandler(ByVal sender As Object, ByVal e As INV_PENDING_PURCHASERowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub VIEW_FOCREPORTRowChangeEventHandler(ByVal sender As Object, ByVal e As VIEW_FOCREPORTRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub Inv_ExiseRptRowChangeEventHandler(ByVal sender As Object, ByVal e As Inv_ExiseRptRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class VIEWPURCHASEREGISTERSUMMARYDataTable
        Inherits Global.System.Data.TypedTableBase(Of VIEWPURCHASEREGISTERSUMMARYRow)
        
        Private columnGRNDETAILS As Global.System.Data.DataColumn
        
        Private columnGRNDATE As Global.System.Data.DataColumn
        
        Private columnSUPPLIERCODE As Global.System.Data.DataColumn
        
        Private columnSUPPLIERNAME As Global.System.Data.DataColumn
        
        Private columnGLACCOUNTCODE As Global.System.Data.DataColumn
        
        Private columnGLACCOUNTNAME As Global.System.Data.DataColumn
        
        Private columnTOTALAMOUNT As Global.System.Data.DataColumn
        
        Private columnVATAMOUNT As Global.System.Data.DataColumn
        
        Private columnSURCHARGEAMT As Global.System.Data.DataColumn
        
        Private columnDISCOUNTAMOUNT As Global.System.Data.DataColumn
        
        Private columnBILLAMOUNT As Global.System.Data.DataColumn
        
        Private columnITEMCODE As Global.System.Data.DataColumn
        
        Private columnITEMNAME As Global.System.Data.DataColumn
        
        Private columnUOM As Global.System.Data.DataColumn
        
        Private columnQTY As Global.System.Data.DataColumn
        
        Private columnRATE As Global.System.Data.DataColumn
        
        Private columnDISCOUNT As Global.System.Data.DataColumn
        
        Private columnSGSTAMT As Global.System.Data.DataColumn
        
        Private columnCGSTAMT As Global.System.Data.DataColumn
        
        Private columnIGSTAMT As Global.System.Data.DataColumn
        
        Private columnPODATE As Global.System.Data.DataColumn
        
        Private columnAMOUNT As Global.System.Data.DataColumn
        
        Private columnOTHCHARGE As Global.System.Data.DataColumn
        
        Private columnadddate As Global.System.Data.DataColumn
        
        Private columnAVOUCHERNO As Global.System.Data.DataColumn
        
        Private columnAVOUCHERDATE As Global.System.Data.DataColumn
        
        Private columnADJUSTEDAMOUNT As Global.System.Data.DataColumn
        
        Private columnPOSTING As Global.System.Data.DataColumn
        
        Private columnPONO As Global.System.Data.DataColumn
        
        Private columnSupplierinvno As Global.System.Data.DataColumn
        
        Private columnOVERALLDISCOUNT As Global.System.Data.DataColumn
        
        Private columnTAXAMOUNT As Global.System.Data.DataColumn
        
        Private columnSTOREDESC As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "VIEWPURCHASEREGISTERSUMMARY"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GRNDETAILSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGRNDETAILS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GRNDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGRNDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SUPPLIERCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPPLIERCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SUPPLIERNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPPLIERNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GLACCOUNTCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGLACCOUNTCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GLACCOUNTNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGLACCOUNTNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTALAMOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTALAMOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VATAMOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVATAMOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SURCHARGEAMTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSURCHARGEAMT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DISCOUNTAMOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISCOUNTAMOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BILLAMOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBILLAMOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ITEMCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEMCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ITEMNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEMNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UOMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUOM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DISCOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISCOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SGSTAMTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSGSTAMT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CGSTAMTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCGSTAMT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IGSTAMTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIGSTAMT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PODATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPODATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AMOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAMOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OTHCHARGEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOTHCHARGE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property adddateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadddate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AVOUCHERNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAVOUCHERNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AVOUCHERDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAVOUCHERDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ADJUSTEDAMOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADJUSTEDAMOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property POSTINGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOSTING
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PONOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPONO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SupplierinvnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSupplierinvno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OVERALLDISCOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOVERALLDISCOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TAXAMOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTAXAMOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STOREDESCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTOREDESC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As VIEWPURCHASEREGISTERSUMMARYRow
            Get
                Return CType(Me.Rows(index),VIEWPURCHASEREGISTERSUMMARYRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VIEWPURCHASEREGISTERSUMMARYRowChanging As VIEWPURCHASEREGISTERSUMMARYRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VIEWPURCHASEREGISTERSUMMARYRowChanged As VIEWPURCHASEREGISTERSUMMARYRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VIEWPURCHASEREGISTERSUMMARYRowDeleting As VIEWPURCHASEREGISTERSUMMARYRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VIEWPURCHASEREGISTERSUMMARYRowDeleted As VIEWPURCHASEREGISTERSUMMARYRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddVIEWPURCHASEREGISTERSUMMARYRow(ByVal row As VIEWPURCHASEREGISTERSUMMARYRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddVIEWPURCHASEREGISTERSUMMARYRow( _
                    ByVal GRNDETAILS As String,  _
                    ByVal GRNDATE As Date,  _
                    ByVal SUPPLIERCODE As String,  _
                    ByVal SUPPLIERNAME As String,  _
                    ByVal GLACCOUNTCODE As String,  _
                    ByVal GLACCOUNTNAME As String,  _
                    ByVal TOTALAMOUNT As Decimal,  _
                    ByVal VATAMOUNT As Decimal,  _
                    ByVal SURCHARGEAMT As Decimal,  _
                    ByVal DISCOUNTAMOUNT As Decimal,  _
                    ByVal BILLAMOUNT As Decimal,  _
                    ByVal ITEMCODE As String,  _
                    ByVal ITEMNAME As String,  _
                    ByVal UOM As String,  _
                    ByVal QTY As Decimal,  _
                    ByVal RATE As Decimal,  _
                    ByVal DISCOUNT As Decimal,  _
                    ByVal SGSTAMT As Decimal,  _
                    ByVal CGSTAMT As Decimal,  _
                    ByVal IGSTAMT As Decimal,  _
                    ByVal PODATE As Date,  _
                    ByVal AMOUNT As Decimal,  _
                    ByVal OTHCHARGE As Decimal,  _
                    ByVal adddate As Date,  _
                    ByVal AVOUCHERNO As String,  _
                    ByVal AVOUCHERDATE As Date,  _
                    ByVal ADJUSTEDAMOUNT As Decimal,  _
                    ByVal POSTING As String,  _
                    ByVal PONO As String,  _
                    ByVal Supplierinvno As String,  _
                    ByVal OVERALLDISCOUNT As Decimal,  _
                    ByVal TAXAMOUNT As Decimal,  _
                    ByVal STOREDESC As String) As VIEWPURCHASEREGISTERSUMMARYRow
            Dim rowVIEWPURCHASEREGISTERSUMMARYRow As VIEWPURCHASEREGISTERSUMMARYRow = CType(Me.NewRow,VIEWPURCHASEREGISTERSUMMARYRow)
            Dim columnValuesArray() As Object = New Object() {GRNDETAILS, GRNDATE, SUPPLIERCODE, SUPPLIERNAME, GLACCOUNTCODE, GLACCOUNTNAME, TOTALAMOUNT, VATAMOUNT, SURCHARGEAMT, DISCOUNTAMOUNT, BILLAMOUNT, ITEMCODE, ITEMNAME, UOM, QTY, RATE, DISCOUNT, SGSTAMT, CGSTAMT, IGSTAMT, PODATE, AMOUNT, OTHCHARGE, adddate, AVOUCHERNO, AVOUCHERDATE, ADJUSTEDAMOUNT, POSTING, PONO, Supplierinvno, OVERALLDISCOUNT, TAXAMOUNT, STOREDESC}
            rowVIEWPURCHASEREGISTERSUMMARYRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowVIEWPURCHASEREGISTERSUMMARYRow)
            Return rowVIEWPURCHASEREGISTERSUMMARYRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As VIEWPURCHASEREGISTERSUMMARYDataTable = CType(MyBase.Clone,VIEWPURCHASEREGISTERSUMMARYDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New VIEWPURCHASEREGISTERSUMMARYDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnGRNDETAILS = MyBase.Columns("GRNDETAILS")
            Me.columnGRNDATE = MyBase.Columns("GRNDATE")
            Me.columnSUPPLIERCODE = MyBase.Columns("SUPPLIERCODE")
            Me.columnSUPPLIERNAME = MyBase.Columns("SUPPLIERNAME")
            Me.columnGLACCOUNTCODE = MyBase.Columns("GLACCOUNTCODE")
            Me.columnGLACCOUNTNAME = MyBase.Columns("GLACCOUNTNAME")
            Me.columnTOTALAMOUNT = MyBase.Columns("TOTALAMOUNT")
            Me.columnVATAMOUNT = MyBase.Columns("VATAMOUNT")
            Me.columnSURCHARGEAMT = MyBase.Columns("SURCHARGEAMT")
            Me.columnDISCOUNTAMOUNT = MyBase.Columns("DISCOUNTAMOUNT")
            Me.columnBILLAMOUNT = MyBase.Columns("BILLAMOUNT")
            Me.columnITEMCODE = MyBase.Columns("ITEMCODE")
            Me.columnITEMNAME = MyBase.Columns("ITEMNAME")
            Me.columnUOM = MyBase.Columns("UOM")
            Me.columnQTY = MyBase.Columns("QTY")
            Me.columnRATE = MyBase.Columns("RATE")
            Me.columnDISCOUNT = MyBase.Columns("DISCOUNT")
            Me.columnSGSTAMT = MyBase.Columns("SGSTAMT")
            Me.columnCGSTAMT = MyBase.Columns("CGSTAMT")
            Me.columnIGSTAMT = MyBase.Columns("IGSTAMT")
            Me.columnPODATE = MyBase.Columns("PODATE")
            Me.columnAMOUNT = MyBase.Columns("AMOUNT")
            Me.columnOTHCHARGE = MyBase.Columns("OTHCHARGE")
            Me.columnadddate = MyBase.Columns("adddate")
            Me.columnAVOUCHERNO = MyBase.Columns("AVOUCHERNO")
            Me.columnAVOUCHERDATE = MyBase.Columns("AVOUCHERDATE")
            Me.columnADJUSTEDAMOUNT = MyBase.Columns("ADJUSTEDAMOUNT")
            Me.columnPOSTING = MyBase.Columns("POSTING")
            Me.columnPONO = MyBase.Columns("PONO")
            Me.columnSupplierinvno = MyBase.Columns("Supplierinvno")
            Me.columnOVERALLDISCOUNT = MyBase.Columns("OVERALLDISCOUNT")
            Me.columnTAXAMOUNT = MyBase.Columns("TAXAMOUNT")
            Me.columnSTOREDESC = MyBase.Columns("STOREDESC")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnGRNDETAILS = New Global.System.Data.DataColumn("GRNDETAILS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGRNDETAILS)
            Me.columnGRNDATE = New Global.System.Data.DataColumn("GRNDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGRNDATE)
            Me.columnSUPPLIERCODE = New Global.System.Data.DataColumn("SUPPLIERCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPPLIERCODE)
            Me.columnSUPPLIERNAME = New Global.System.Data.DataColumn("SUPPLIERNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPPLIERNAME)
            Me.columnGLACCOUNTCODE = New Global.System.Data.DataColumn("GLACCOUNTCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGLACCOUNTCODE)
            Me.columnGLACCOUNTNAME = New Global.System.Data.DataColumn("GLACCOUNTNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGLACCOUNTNAME)
            Me.columnTOTALAMOUNT = New Global.System.Data.DataColumn("TOTALAMOUNT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTALAMOUNT)
            Me.columnVATAMOUNT = New Global.System.Data.DataColumn("VATAMOUNT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVATAMOUNT)
            Me.columnSURCHARGEAMT = New Global.System.Data.DataColumn("SURCHARGEAMT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSURCHARGEAMT)
            Me.columnDISCOUNTAMOUNT = New Global.System.Data.DataColumn("DISCOUNTAMOUNT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISCOUNTAMOUNT)
            Me.columnBILLAMOUNT = New Global.System.Data.DataColumn("BILLAMOUNT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBILLAMOUNT)
            Me.columnITEMCODE = New Global.System.Data.DataColumn("ITEMCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEMCODE)
            Me.columnITEMNAME = New Global.System.Data.DataColumn("ITEMNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEMNAME)
            Me.columnUOM = New Global.System.Data.DataColumn("UOM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUOM)
            Me.columnQTY = New Global.System.Data.DataColumn("QTY", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQTY)
            Me.columnRATE = New Global.System.Data.DataColumn("RATE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRATE)
            Me.columnDISCOUNT = New Global.System.Data.DataColumn("DISCOUNT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISCOUNT)
            Me.columnSGSTAMT = New Global.System.Data.DataColumn("SGSTAMT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSGSTAMT)
            Me.columnCGSTAMT = New Global.System.Data.DataColumn("CGSTAMT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCGSTAMT)
            Me.columnIGSTAMT = New Global.System.Data.DataColumn("IGSTAMT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIGSTAMT)
            Me.columnPODATE = New Global.System.Data.DataColumn("PODATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPODATE)
            Me.columnAMOUNT = New Global.System.Data.DataColumn("AMOUNT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAMOUNT)
            Me.columnOTHCHARGE = New Global.System.Data.DataColumn("OTHCHARGE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOTHCHARGE)
            Me.columnadddate = New Global.System.Data.DataColumn("adddate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadddate)
            Me.columnAVOUCHERNO = New Global.System.Data.DataColumn("AVOUCHERNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAVOUCHERNO)
            Me.columnAVOUCHERDATE = New Global.System.Data.DataColumn("AVOUCHERDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAVOUCHERDATE)
            Me.columnADJUSTEDAMOUNT = New Global.System.Data.DataColumn("ADJUSTEDAMOUNT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADJUSTEDAMOUNT)
            Me.columnPOSTING = New Global.System.Data.DataColumn("POSTING", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOSTING)
            Me.columnPONO = New Global.System.Data.DataColumn("PONO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPONO)
            Me.columnSupplierinvno = New Global.System.Data.DataColumn("Supplierinvno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSupplierinvno)
            Me.columnOVERALLDISCOUNT = New Global.System.Data.DataColumn("OVERALLDISCOUNT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOVERALLDISCOUNT)
            Me.columnTAXAMOUNT = New Global.System.Data.DataColumn("TAXAMOUNT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTAXAMOUNT)
            Me.columnSTOREDESC = New Global.System.Data.DataColumn("STOREDESC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTOREDESC)
            Me.columnGRNDETAILS.ReadOnly = true
            Me.columnGRNDETAILS.MaxLength = 50
            Me.columnSUPPLIERCODE.ReadOnly = true
            Me.columnSUPPLIERCODE.MaxLength = 50
            Me.columnSUPPLIERNAME.ReadOnly = true
            Me.columnSUPPLIERNAME.MaxLength = 50
            Me.columnGLACCOUNTCODE.ReadOnly = true
            Me.columnGLACCOUNTCODE.MaxLength = 50
            Me.columnGLACCOUNTNAME.ReadOnly = true
            Me.columnGLACCOUNTNAME.MaxLength = 50
            Me.columnTOTALAMOUNT.ReadOnly = true
            Me.columnVATAMOUNT.ReadOnly = true
            Me.columnSURCHARGEAMT.ReadOnly = true
            Me.columnDISCOUNTAMOUNT.ReadOnly = true
            Me.columnBILLAMOUNT.ReadOnly = true
            Me.columnITEMCODE.ReadOnly = true
            Me.columnITEMCODE.MaxLength = 50
            Me.columnITEMNAME.ReadOnly = true
            Me.columnITEMNAME.MaxLength = 50
            Me.columnUOM.ReadOnly = true
            Me.columnUOM.MaxLength = 50
            Me.columnQTY.ReadOnly = true
            Me.columnRATE.ReadOnly = true
            Me.columnDISCOUNT.ReadOnly = true
            Me.columnSGSTAMT.ReadOnly = true
            Me.columnCGSTAMT.ReadOnly = true
            Me.columnIGSTAMT.ReadOnly = true
            Me.columnAMOUNT.ReadOnly = true
            Me.columnOTHCHARGE.ReadOnly = true
            Me.columnAVOUCHERNO.ReadOnly = true
            Me.columnAVOUCHERNO.MaxLength = 1
            Me.columnAVOUCHERDATE.ReadOnly = true
            Me.columnADJUSTEDAMOUNT.ReadOnly = true
            Me.columnPOSTING.ReadOnly = true
            Me.columnPOSTING.MaxLength = 1
            Me.columnPONO.ReadOnly = true
            Me.columnPONO.MaxLength = 50
            Me.columnSupplierinvno.ReadOnly = true
            Me.columnSupplierinvno.MaxLength = 50
            Me.columnOVERALLDISCOUNT.ReadOnly = true
            Me.columnTAXAMOUNT.ReadOnly = true
            Me.columnSTOREDESC.ReadOnly = true
            Me.columnSTOREDESC.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewVIEWPURCHASEREGISTERSUMMARYRow() As VIEWPURCHASEREGISTERSUMMARYRow
            Return CType(Me.NewRow,VIEWPURCHASEREGISTERSUMMARYRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New VIEWPURCHASEREGISTERSUMMARYRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(VIEWPURCHASEREGISTERSUMMARYRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.VIEWPURCHASEREGISTERSUMMARYRowChangedEvent) Is Nothing) Then
                RaiseEvent VIEWPURCHASEREGISTERSUMMARYRowChanged(Me, New VIEWPURCHASEREGISTERSUMMARYRowChangeEvent(CType(e.Row,VIEWPURCHASEREGISTERSUMMARYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.VIEWPURCHASEREGISTERSUMMARYRowChangingEvent) Is Nothing) Then
                RaiseEvent VIEWPURCHASEREGISTERSUMMARYRowChanging(Me, New VIEWPURCHASEREGISTERSUMMARYRowChangeEvent(CType(e.Row,VIEWPURCHASEREGISTERSUMMARYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.VIEWPURCHASEREGISTERSUMMARYRowDeletedEvent) Is Nothing) Then
                RaiseEvent VIEWPURCHASEREGISTERSUMMARYRowDeleted(Me, New VIEWPURCHASEREGISTERSUMMARYRowChangeEvent(CType(e.Row,VIEWPURCHASEREGISTERSUMMARYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.VIEWPURCHASEREGISTERSUMMARYRowDeletingEvent) Is Nothing) Then
                RaiseEvent VIEWPURCHASEREGISTERSUMMARYRowDeleting(Me, New VIEWPURCHASEREGISTERSUMMARYRowChangeEvent(CType(e.Row,VIEWPURCHASEREGISTERSUMMARYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveVIEWPURCHASEREGISTERSUMMARYRow(ByVal row As VIEWPURCHASEREGISTERSUMMARYRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As Dataset1 = New Dataset1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "VIEWPURCHASEREGISTERSUMMARYDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Inv_view_Pending_IndentDataTable
        Inherits Global.System.Data.TypedTableBase(Of Inv_view_Pending_IndentRow)
        
        Private columnIndent_no As Global.System.Data.DataColumn
        
        Private columnindent_date As Global.System.Data.DataColumn
        
        Private columnstorelocationname As Global.System.Data.DataColumn
        
        Private columnitemcode As Global.System.Data.DataColumn
        
        Private columnitemname As Global.System.Data.DataColumn
        
        Private columnqty As Global.System.Data.DataColumn
        
        Private columnamount As Global.System.Data.DataColumn
        
        Private columnvoid As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Inv_view_Pending_Indent"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Indent_noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIndent_no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property indent_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnindent_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property storelocationnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnstorelocationname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property itemcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnitemcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property itemnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnitemname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property qtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnqty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property amountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnamount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property voidColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvoid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Inv_view_Pending_IndentRow
            Get
                Return CType(Me.Rows(index),Inv_view_Pending_IndentRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Inv_view_Pending_IndentRowChanging As Inv_view_Pending_IndentRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Inv_view_Pending_IndentRowChanged As Inv_view_Pending_IndentRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Inv_view_Pending_IndentRowDeleting As Inv_view_Pending_IndentRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Inv_view_Pending_IndentRowDeleted As Inv_view_Pending_IndentRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddInv_view_Pending_IndentRow(ByVal row As Inv_view_Pending_IndentRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddInv_view_Pending_IndentRow(ByVal Indent_no As String, ByVal indent_date As Date, ByVal storelocationname As String, ByVal itemcode As String, ByVal itemname As String, ByVal qty As Decimal, ByVal amount As Decimal, ByVal void As String) As Inv_view_Pending_IndentRow
            Dim rowInv_view_Pending_IndentRow As Inv_view_Pending_IndentRow = CType(Me.NewRow,Inv_view_Pending_IndentRow)
            Dim columnValuesArray() As Object = New Object() {Indent_no, indent_date, storelocationname, itemcode, itemname, qty, amount, void}
            rowInv_view_Pending_IndentRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowInv_view_Pending_IndentRow)
            Return rowInv_view_Pending_IndentRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByIndent_no(ByVal Indent_no As String) As Inv_view_Pending_IndentRow
            Return CType(Me.Rows.Find(New Object() {Indent_no}),Inv_view_Pending_IndentRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Inv_view_Pending_IndentDataTable = CType(MyBase.Clone,Inv_view_Pending_IndentDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Inv_view_Pending_IndentDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnIndent_no = MyBase.Columns("Indent_no")
            Me.columnindent_date = MyBase.Columns("indent_date")
            Me.columnstorelocationname = MyBase.Columns("storelocationname")
            Me.columnitemcode = MyBase.Columns("itemcode")
            Me.columnitemname = MyBase.Columns("itemname")
            Me.columnqty = MyBase.Columns("qty")
            Me.columnamount = MyBase.Columns("amount")
            Me.columnvoid = MyBase.Columns("void")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnIndent_no = New Global.System.Data.DataColumn("Indent_no", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIndent_no)
            Me.columnindent_date = New Global.System.Data.DataColumn("indent_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnindent_date)
            Me.columnstorelocationname = New Global.System.Data.DataColumn("storelocationname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstorelocationname)
            Me.columnitemcode = New Global.System.Data.DataColumn("itemcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnitemcode)
            Me.columnitemname = New Global.System.Data.DataColumn("itemname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnitemname)
            Me.columnqty = New Global.System.Data.DataColumn("qty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnqty)
            Me.columnamount = New Global.System.Data.DataColumn("amount", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnamount)
            Me.columnvoid = New Global.System.Data.DataColumn("void", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvoid)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Dataset1Key1", New Global.System.Data.DataColumn() {Me.columnIndent_no}, true))
            Me.columnIndent_no.AllowDBNull = false
            Me.columnIndent_no.Unique = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewInv_view_Pending_IndentRow() As Inv_view_Pending_IndentRow
            Return CType(Me.NewRow,Inv_view_Pending_IndentRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Inv_view_Pending_IndentRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Inv_view_Pending_IndentRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Inv_view_Pending_IndentRowChangedEvent) Is Nothing) Then
                RaiseEvent Inv_view_Pending_IndentRowChanged(Me, New Inv_view_Pending_IndentRowChangeEvent(CType(e.Row,Inv_view_Pending_IndentRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Inv_view_Pending_IndentRowChangingEvent) Is Nothing) Then
                RaiseEvent Inv_view_Pending_IndentRowChanging(Me, New Inv_view_Pending_IndentRowChangeEvent(CType(e.Row,Inv_view_Pending_IndentRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Inv_view_Pending_IndentRowDeletedEvent) Is Nothing) Then
                RaiseEvent Inv_view_Pending_IndentRowDeleted(Me, New Inv_view_Pending_IndentRowChangeEvent(CType(e.Row,Inv_view_Pending_IndentRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Inv_view_Pending_IndentRowDeletingEvent) Is Nothing) Then
                RaiseEvent Inv_view_Pending_IndentRowDeleting(Me, New Inv_view_Pending_IndentRowChangeEvent(CType(e.Row,Inv_view_Pending_IndentRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveInv_view_Pending_IndentRow(ByVal row As Inv_view_Pending_IndentRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As Dataset1 = New Dataset1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Inv_view_Pending_IndentDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ISSUEDETAILSDataTable
        Inherits Global.System.Data.TypedTableBase(Of ISSUEDETAILSRow)
        
        Private columnITEMCODE As Global.System.Data.DataColumn
        
        Private columnITEMNAME As Global.System.Data.DataColumn
        
        Private columnLOCATIONNAME As Global.System.Data.DataColumn
        
        Private columnUOM As Global.System.Data.DataColumn
        
        Private columnQTY As Global.System.Data.DataColumn
        
        Private columnRATE As Global.System.Data.DataColumn
        
        Private columnAMOUNT As Global.System.Data.DataColumn
        
        Private columnVOID As Global.System.Data.DataColumn
        
        Private columnGROUPDESC As Global.System.Data.DataColumn
        
        Private columnDOCDETAILS As Global.System.Data.DataColumn
        
        Private columnDOCDATE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ISSUEDETAILS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ITEMCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEMCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ITEMNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEMNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LOCATIONNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOCATIONNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UOMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUOM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AMOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAMOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VOIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVOID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GROUPDESCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGROUPDESC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DOCDETAILSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOCDETAILS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DOCDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOCDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ISSUEDETAILSRow
            Get
                Return CType(Me.Rows(index),ISSUEDETAILSRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ISSUEDETAILSRowChanging As ISSUEDETAILSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ISSUEDETAILSRowChanged As ISSUEDETAILSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ISSUEDETAILSRowDeleting As ISSUEDETAILSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ISSUEDETAILSRowDeleted As ISSUEDETAILSRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddISSUEDETAILSRow(ByVal row As ISSUEDETAILSRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddISSUEDETAILSRow(ByVal ITEMCODE As String, ByVal ITEMNAME As String, ByVal LOCATIONNAME As String, ByVal UOM As String, ByVal QTY As Decimal, ByVal RATE As Decimal, ByVal AMOUNT As Decimal, ByVal VOID As String, ByVal GROUPDESC As String, ByVal DOCDETAILS As String, ByVal DOCDATE As Date) As ISSUEDETAILSRow
            Dim rowISSUEDETAILSRow As ISSUEDETAILSRow = CType(Me.NewRow,ISSUEDETAILSRow)
            Dim columnValuesArray() As Object = New Object() {ITEMCODE, ITEMNAME, LOCATIONNAME, UOM, QTY, RATE, AMOUNT, VOID, GROUPDESC, DOCDETAILS, DOCDATE}
            rowISSUEDETAILSRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowISSUEDETAILSRow)
            Return rowISSUEDETAILSRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ISSUEDETAILSDataTable = CType(MyBase.Clone,ISSUEDETAILSDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ISSUEDETAILSDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnITEMCODE = MyBase.Columns("ITEMCODE")
            Me.columnITEMNAME = MyBase.Columns("ITEMNAME")
            Me.columnLOCATIONNAME = MyBase.Columns("LOCATIONNAME")
            Me.columnUOM = MyBase.Columns("UOM")
            Me.columnQTY = MyBase.Columns("QTY")
            Me.columnRATE = MyBase.Columns("RATE")
            Me.columnAMOUNT = MyBase.Columns("AMOUNT")
            Me.columnVOID = MyBase.Columns("VOID")
            Me.columnGROUPDESC = MyBase.Columns("GROUPDESC")
            Me.columnDOCDETAILS = MyBase.Columns("DOCDETAILS")
            Me.columnDOCDATE = MyBase.Columns("DOCDATE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnITEMCODE = New Global.System.Data.DataColumn("ITEMCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEMCODE)
            Me.columnITEMNAME = New Global.System.Data.DataColumn("ITEMNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEMNAME)
            Me.columnLOCATIONNAME = New Global.System.Data.DataColumn("LOCATIONNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOCATIONNAME)
            Me.columnUOM = New Global.System.Data.DataColumn("UOM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUOM)
            Me.columnQTY = New Global.System.Data.DataColumn("QTY", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQTY)
            Me.columnRATE = New Global.System.Data.DataColumn("RATE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRATE)
            Me.columnAMOUNT = New Global.System.Data.DataColumn("AMOUNT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAMOUNT)
            Me.columnVOID = New Global.System.Data.DataColumn("VOID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVOID)
            Me.columnGROUPDESC = New Global.System.Data.DataColumn("GROUPDESC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGROUPDESC)
            Me.columnDOCDETAILS = New Global.System.Data.DataColumn("DOCDETAILS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOCDETAILS)
            Me.columnDOCDATE = New Global.System.Data.DataColumn("DOCDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOCDATE)
            Me.columnITEMCODE.ReadOnly = true
            Me.columnITEMNAME.ReadOnly = true
            Me.columnLOCATIONNAME.ReadOnly = true
            Me.columnUOM.ReadOnly = true
            Me.columnQTY.ReadOnly = true
            Me.columnRATE.ReadOnly = true
            Me.columnAMOUNT.ReadOnly = true
            Me.columnVOID.ReadOnly = true
            Me.columnGROUPDESC.ReadOnly = true
            Me.columnDOCDETAILS.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewISSUEDETAILSRow() As ISSUEDETAILSRow
            Return CType(Me.NewRow,ISSUEDETAILSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ISSUEDETAILSRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ISSUEDETAILSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ISSUEDETAILSRowChangedEvent) Is Nothing) Then
                RaiseEvent ISSUEDETAILSRowChanged(Me, New ISSUEDETAILSRowChangeEvent(CType(e.Row,ISSUEDETAILSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ISSUEDETAILSRowChangingEvent) Is Nothing) Then
                RaiseEvent ISSUEDETAILSRowChanging(Me, New ISSUEDETAILSRowChangeEvent(CType(e.Row,ISSUEDETAILSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ISSUEDETAILSRowDeletedEvent) Is Nothing) Then
                RaiseEvent ISSUEDETAILSRowDeleted(Me, New ISSUEDETAILSRowChangeEvent(CType(e.Row,ISSUEDETAILSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ISSUEDETAILSRowDeletingEvent) Is Nothing) Then
                RaiseEvent ISSUEDETAILSRowDeleting(Me, New ISSUEDETAILSRowChangeEvent(CType(e.Row,ISSUEDETAILSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveISSUEDETAILSRow(ByVal row As ISSUEDETAILSRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As Dataset1 = New Dataset1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ISSUEDETAILSDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class issuesummaryDataTable
        Inherits Global.System.Data.TypedTableBase(Of issuesummaryRow)
        
        Private columnAutoid As Global.System.Data.DataColumn
        
        Private columnItemcode As Global.System.Data.DataColumn
        
        Private columnItemdesc As Global.System.Data.DataColumn
        
        Private columnUom As Global.System.Data.DataColumn
        
        Private columnIssueqty As Global.System.Data.DataColumn
        
        Private columnIssuerate As Global.System.Data.DataColumn
        
        Private columnIssueamount As Global.System.Data.DataColumn
        
        Private columnGROUPNAME As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "issuesummary"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AutoidColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAutoid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ItemcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ItemdescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemdesc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UomColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IssueqtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIssueqty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IssuerateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIssuerate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IssueamountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIssueamount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GROUPNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGROUPNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As issuesummaryRow
            Get
                Return CType(Me.Rows(index),issuesummaryRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event issuesummaryRowChanging As issuesummaryRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event issuesummaryRowChanged As issuesummaryRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event issuesummaryRowDeleting As issuesummaryRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event issuesummaryRowDeleted As issuesummaryRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddissuesummaryRow(ByVal row As issuesummaryRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddissuesummaryRow(ByVal Itemcode As String, ByVal Itemdesc As String, ByVal Uom As String, ByVal Issueqty As Decimal, ByVal Issuerate As Decimal, ByVal Issueamount As Decimal, ByVal GROUPNAME As String) As issuesummaryRow
            Dim rowissuesummaryRow As issuesummaryRow = CType(Me.NewRow,issuesummaryRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Itemcode, Itemdesc, Uom, Issueqty, Issuerate, Issueamount, GROUPNAME}
            rowissuesummaryRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowissuesummaryRow)
            Return rowissuesummaryRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As issuesummaryDataTable = CType(MyBase.Clone,issuesummaryDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New issuesummaryDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnAutoid = MyBase.Columns("Autoid")
            Me.columnItemcode = MyBase.Columns("Itemcode")
            Me.columnItemdesc = MyBase.Columns("Itemdesc")
            Me.columnUom = MyBase.Columns("Uom")
            Me.columnIssueqty = MyBase.Columns("Issueqty")
            Me.columnIssuerate = MyBase.Columns("Issuerate")
            Me.columnIssueamount = MyBase.Columns("Issueamount")
            Me.columnGROUPNAME = MyBase.Columns("GROUPNAME")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnAutoid = New Global.System.Data.DataColumn("Autoid", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAutoid)
            Me.columnItemcode = New Global.System.Data.DataColumn("Itemcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemcode)
            Me.columnItemdesc = New Global.System.Data.DataColumn("Itemdesc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemdesc)
            Me.columnUom = New Global.System.Data.DataColumn("Uom", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUom)
            Me.columnIssueqty = New Global.System.Data.DataColumn("Issueqty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIssueqty)
            Me.columnIssuerate = New Global.System.Data.DataColumn("Issuerate", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIssuerate)
            Me.columnIssueamount = New Global.System.Data.DataColumn("Issueamount", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIssueamount)
            Me.columnGROUPNAME = New Global.System.Data.DataColumn("GROUPNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGROUPNAME)
            Me.columnAutoid.AutoIncrement = true
            Me.columnAutoid.AllowDBNull = false
            Me.columnAutoid.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewissuesummaryRow() As issuesummaryRow
            Return CType(Me.NewRow,issuesummaryRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New issuesummaryRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(issuesummaryRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.issuesummaryRowChangedEvent) Is Nothing) Then
                RaiseEvent issuesummaryRowChanged(Me, New issuesummaryRowChangeEvent(CType(e.Row,issuesummaryRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.issuesummaryRowChangingEvent) Is Nothing) Then
                RaiseEvent issuesummaryRowChanging(Me, New issuesummaryRowChangeEvent(CType(e.Row,issuesummaryRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.issuesummaryRowDeletedEvent) Is Nothing) Then
                RaiseEvent issuesummaryRowDeleted(Me, New issuesummaryRowChangeEvent(CType(e.Row,issuesummaryRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.issuesummaryRowDeletingEvent) Is Nothing) Then
                RaiseEvent issuesummaryRowDeleting(Me, New issuesummaryRowChangeEvent(CType(e.Row,issuesummaryRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveissuesummaryRow(ByVal row As issuesummaryRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As Dataset1 = New Dataset1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "issuesummaryDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class INV_VIEW_INPUTTAXDataTable
        Inherits Global.System.Data.TypedTableBase(Of INV_VIEW_INPUTTAXRow)
        
        Private columnGRNDETAILS As Global.System.Data.DataColumn
        
        Private columnGRNDATE As Global.System.Data.DataColumn
        
        Private columnBILLDETAILS As Global.System.Data.DataColumn
        
        Private columnBILLDATE As Global.System.Data.DataColumn
        
        Private columnCRCODE As Global.System.Data.DataColumn
        
        Private columnCRNAME As Global.System.Data.DataColumn
        
        Private columnDRCODE As Global.System.Data.DataColumn
        
        Private columnDRNAME As Global.System.Data.DataColumn
        
        Private columnITEMCODE As Global.System.Data.DataColumn
        
        Private columnITEMNAME As Global.System.Data.DataColumn
        
        Private columnBILLAMOUNT As Global.System.Data.DataColumn
        
        Private columnTPER As Global.System.Data.DataColumn
        
        Private columnTAMT As Global.System.Data.DataColumn
        
        Private columnTOTALAMOUNT As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "INV_VIEW_INPUTTAX"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GRNDETAILSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGRNDETAILS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GRNDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGRNDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BILLDETAILSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBILLDETAILS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BILLDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBILLDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CRCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCRCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CRNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCRNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DRCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDRCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DRNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDRNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ITEMCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEMCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ITEMNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEMNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BILLAMOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBILLAMOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TPERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTPER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TAMTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTAMT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTALAMOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTALAMOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As INV_VIEW_INPUTTAXRow
            Get
                Return CType(Me.Rows(index),INV_VIEW_INPUTTAXRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event INV_VIEW_INPUTTAXRowChanging As INV_VIEW_INPUTTAXRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event INV_VIEW_INPUTTAXRowChanged As INV_VIEW_INPUTTAXRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event INV_VIEW_INPUTTAXRowDeleting As INV_VIEW_INPUTTAXRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event INV_VIEW_INPUTTAXRowDeleted As INV_VIEW_INPUTTAXRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddINV_VIEW_INPUTTAXRow(ByVal row As INV_VIEW_INPUTTAXRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddINV_VIEW_INPUTTAXRow(ByVal GRNDETAILS As String, ByVal GRNDATE As Date, ByVal BILLDETAILS As String, ByVal BILLDATE As Date, ByVal CRCODE As String, ByVal CRNAME As String, ByVal DRCODE As String, ByVal DRNAME As String, ByVal ITEMCODE As String, ByVal ITEMNAME As String, ByVal BILLAMOUNT As Decimal, ByVal TPER As Decimal, ByVal TAMT As Decimal, ByVal TOTALAMOUNT As Decimal) As INV_VIEW_INPUTTAXRow
            Dim rowINV_VIEW_INPUTTAXRow As INV_VIEW_INPUTTAXRow = CType(Me.NewRow,INV_VIEW_INPUTTAXRow)
            Dim columnValuesArray() As Object = New Object() {GRNDETAILS, GRNDATE, BILLDETAILS, BILLDATE, CRCODE, CRNAME, DRCODE, DRNAME, ITEMCODE, ITEMNAME, BILLAMOUNT, TPER, TAMT, TOTALAMOUNT}
            rowINV_VIEW_INPUTTAXRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowINV_VIEW_INPUTTAXRow)
            Return rowINV_VIEW_INPUTTAXRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As INV_VIEW_INPUTTAXDataTable = CType(MyBase.Clone,INV_VIEW_INPUTTAXDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New INV_VIEW_INPUTTAXDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnGRNDETAILS = MyBase.Columns("GRNDETAILS")
            Me.columnGRNDATE = MyBase.Columns("GRNDATE")
            Me.columnBILLDETAILS = MyBase.Columns("BILLDETAILS")
            Me.columnBILLDATE = MyBase.Columns("BILLDATE")
            Me.columnCRCODE = MyBase.Columns("CRCODE")
            Me.columnCRNAME = MyBase.Columns("CRNAME")
            Me.columnDRCODE = MyBase.Columns("DRCODE")
            Me.columnDRNAME = MyBase.Columns("DRNAME")
            Me.columnITEMCODE = MyBase.Columns("ITEMCODE")
            Me.columnITEMNAME = MyBase.Columns("ITEMNAME")
            Me.columnBILLAMOUNT = MyBase.Columns("BILLAMOUNT")
            Me.columnTPER = MyBase.Columns("TPER")
            Me.columnTAMT = MyBase.Columns("TAMT")
            Me.columnTOTALAMOUNT = MyBase.Columns("TOTALAMOUNT")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnGRNDETAILS = New Global.System.Data.DataColumn("GRNDETAILS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGRNDETAILS)
            Me.columnGRNDATE = New Global.System.Data.DataColumn("GRNDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGRNDATE)
            Me.columnBILLDETAILS = New Global.System.Data.DataColumn("BILLDETAILS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBILLDETAILS)
            Me.columnBILLDATE = New Global.System.Data.DataColumn("BILLDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBILLDATE)
            Me.columnCRCODE = New Global.System.Data.DataColumn("CRCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCRCODE)
            Me.columnCRNAME = New Global.System.Data.DataColumn("CRNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCRNAME)
            Me.columnDRCODE = New Global.System.Data.DataColumn("DRCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDRCODE)
            Me.columnDRNAME = New Global.System.Data.DataColumn("DRNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDRNAME)
            Me.columnITEMCODE = New Global.System.Data.DataColumn("ITEMCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEMCODE)
            Me.columnITEMNAME = New Global.System.Data.DataColumn("ITEMNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEMNAME)
            Me.columnBILLAMOUNT = New Global.System.Data.DataColumn("BILLAMOUNT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBILLAMOUNT)
            Me.columnTPER = New Global.System.Data.DataColumn("TPER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTPER)
            Me.columnTAMT = New Global.System.Data.DataColumn("TAMT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTAMT)
            Me.columnTOTALAMOUNT = New Global.System.Data.DataColumn("TOTALAMOUNT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTALAMOUNT)
            Me.columnGRNDETAILS.ReadOnly = true
            Me.columnGRNDATE.ReadOnly = true
            Me.columnBILLDETAILS.ReadOnly = true
            Me.columnBILLDATE.ReadOnly = true
            Me.columnCRCODE.ReadOnly = true
            Me.columnCRNAME.ReadOnly = true
            Me.columnDRCODE.ReadOnly = true
            Me.columnDRNAME.ReadOnly = true
            Me.columnITEMCODE.ReadOnly = true
            Me.columnITEMNAME.ReadOnly = true
            Me.columnBILLAMOUNT.ReadOnly = true
            Me.columnTPER.ReadOnly = true
            Me.columnTAMT.ReadOnly = true
            Me.columnTOTALAMOUNT.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewINV_VIEW_INPUTTAXRow() As INV_VIEW_INPUTTAXRow
            Return CType(Me.NewRow,INV_VIEW_INPUTTAXRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New INV_VIEW_INPUTTAXRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(INV_VIEW_INPUTTAXRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.INV_VIEW_INPUTTAXRowChangedEvent) Is Nothing) Then
                RaiseEvent INV_VIEW_INPUTTAXRowChanged(Me, New INV_VIEW_INPUTTAXRowChangeEvent(CType(e.Row,INV_VIEW_INPUTTAXRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.INV_VIEW_INPUTTAXRowChangingEvent) Is Nothing) Then
                RaiseEvent INV_VIEW_INPUTTAXRowChanging(Me, New INV_VIEW_INPUTTAXRowChangeEvent(CType(e.Row,INV_VIEW_INPUTTAXRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.INV_VIEW_INPUTTAXRowDeletedEvent) Is Nothing) Then
                RaiseEvent INV_VIEW_INPUTTAXRowDeleted(Me, New INV_VIEW_INPUTTAXRowChangeEvent(CType(e.Row,INV_VIEW_INPUTTAXRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.INV_VIEW_INPUTTAXRowDeletingEvent) Is Nothing) Then
                RaiseEvent INV_VIEW_INPUTTAXRowDeleting(Me, New INV_VIEW_INPUTTAXRowChangeEvent(CType(e.Row,INV_VIEW_INPUTTAXRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveINV_VIEW_INPUTTAXRow(ByVal row As INV_VIEW_INPUTTAXRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As Dataset1 = New Dataset1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "INV_VIEW_INPUTTAXDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class STOCKISSUEDETAILDataTable
        Inherits Global.System.Data.TypedTableBase(Of STOCKISSUEDETAILRow)
        
        Private columnAutoid As Global.System.Data.DataColumn
        
        Private columnDocno As Global.System.Data.DataColumn
        
        Private columnDocdetails As Global.System.Data.DataColumn
        
        Private columnDocdate As Global.System.Data.DataColumn
        
        Private columnIndentNo As Global.System.Data.DataColumn
        
        Private columnIndentDate As Global.System.Data.DataColumn
        
        Private columnStorelocationcode As Global.System.Data.DataColumn
        
        Private columnStorelocationname As Global.System.Data.DataColumn
        
        Private columnOpstorelocationcode As Global.System.Data.DataColumn
        
        Private columnOpstorelocationname As Global.System.Data.DataColumn
        
        Private columnItemcode As Global.System.Data.DataColumn
        
        Private columnItemname As Global.System.Data.DataColumn
        
        Private columnUom As Global.System.Data.DataColumn
        
        Private columnQty As Global.System.Data.DataColumn
        
        Private columnRate As Global.System.Data.DataColumn
        
        Private columnAmount As Global.System.Data.DataColumn
        
        Private columnDblamt As Global.System.Data.DataColumn
        
        Private columnDblconv As Global.System.Data.DataColumn
        
        Private columnHighratio As Global.System.Data.DataColumn
        
        Private columnGroupcode As Global.System.Data.DataColumn
        
        Private columnSubgroupcode As Global.System.Data.DataColumn
        
        Private columnVoid As Global.System.Data.DataColumn
        
        Private columnAvgqty As Global.System.Data.DataColumn
        
        Private columnAvgrate As Global.System.Data.DataColumn
        
        Private columnAdduser As Global.System.Data.DataColumn
        
        Private columnAdddatetime As Global.System.Data.DataColumn
        
        Private columnUpdateuser As Global.System.Data.DataColumn
        
        Private columnUpdatetime As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "STOCKISSUEDETAIL"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AutoidColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAutoid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DocnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDocno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DocdetailsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDocdetails
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DocdateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDocdate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IndentNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIndentNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IndentDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIndentDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property StorelocationcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStorelocationcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property StorelocationnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStorelocationname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OpstorelocationcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOpstorelocationcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OpstorelocationnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOpstorelocationname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ItemcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ItemnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UomColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DblamtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDblamt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DblconvColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDblconv
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HighratioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHighratio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GroupcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGroupcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SubgroupcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubgroupcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VoidColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVoid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AvgqtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAvgqty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AvgrateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAvgrate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AdduserColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAdduser
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AdddatetimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAdddatetime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UpdateuserColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUpdateuser
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UpdatetimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUpdatetime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As STOCKISSUEDETAILRow
            Get
                Return CType(Me.Rows(index),STOCKISSUEDETAILRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event STOCKISSUEDETAILRowChanging As STOCKISSUEDETAILRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event STOCKISSUEDETAILRowChanged As STOCKISSUEDETAILRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event STOCKISSUEDETAILRowDeleting As STOCKISSUEDETAILRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event STOCKISSUEDETAILRowDeleted As STOCKISSUEDETAILRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddSTOCKISSUEDETAILRow(ByVal row As STOCKISSUEDETAILRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddSTOCKISSUEDETAILRow( _
                    ByVal Docno As String,  _
                    ByVal Docdetails As String,  _
                    ByVal Docdate As Date,  _
                    ByVal IndentNo As String,  _
                    ByVal IndentDate As Date,  _
                    ByVal Storelocationcode As String,  _
                    ByVal Storelocationname As String,  _
                    ByVal Opstorelocationcode As String,  _
                    ByVal Opstorelocationname As String,  _
                    ByVal Itemcode As String,  _
                    ByVal Itemname As String,  _
                    ByVal Uom As String,  _
                    ByVal Qty As Decimal,  _
                    ByVal Rate As Decimal,  _
                    ByVal Amount As Decimal,  _
                    ByVal Dblamt As Decimal,  _
                    ByVal Dblconv As String,  _
                    ByVal Highratio As Decimal,  _
                    ByVal Groupcode As String,  _
                    ByVal Subgroupcode As String,  _
                    ByVal Void As String,  _
                    ByVal Avgqty As Decimal,  _
                    ByVal Avgrate As Decimal,  _
                    ByVal Adduser As String,  _
                    ByVal Adddatetime As Date,  _
                    ByVal Updateuser As String,  _
                    ByVal Updatetime As Date) As STOCKISSUEDETAILRow
            Dim rowSTOCKISSUEDETAILRow As STOCKISSUEDETAILRow = CType(Me.NewRow,STOCKISSUEDETAILRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Docno, Docdetails, Docdate, IndentNo, IndentDate, Storelocationcode, Storelocationname, Opstorelocationcode, Opstorelocationname, Itemcode, Itemname, Uom, Qty, Rate, Amount, Dblamt, Dblconv, Highratio, Groupcode, Subgroupcode, Void, Avgqty, Avgrate, Adduser, Adddatetime, Updateuser, Updatetime}
            rowSTOCKISSUEDETAILRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSTOCKISSUEDETAILRow)
            Return rowSTOCKISSUEDETAILRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As STOCKISSUEDETAILDataTable = CType(MyBase.Clone,STOCKISSUEDETAILDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New STOCKISSUEDETAILDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnAutoid = MyBase.Columns("Autoid")
            Me.columnDocno = MyBase.Columns("Docno")
            Me.columnDocdetails = MyBase.Columns("Docdetails")
            Me.columnDocdate = MyBase.Columns("Docdate")
            Me.columnIndentNo = MyBase.Columns("IndentNo")
            Me.columnIndentDate = MyBase.Columns("IndentDate")
            Me.columnStorelocationcode = MyBase.Columns("Storelocationcode")
            Me.columnStorelocationname = MyBase.Columns("Storelocationname")
            Me.columnOpstorelocationcode = MyBase.Columns("Opstorelocationcode")
            Me.columnOpstorelocationname = MyBase.Columns("Opstorelocationname")
            Me.columnItemcode = MyBase.Columns("Itemcode")
            Me.columnItemname = MyBase.Columns("Itemname")
            Me.columnUom = MyBase.Columns("Uom")
            Me.columnQty = MyBase.Columns("Qty")
            Me.columnRate = MyBase.Columns("Rate")
            Me.columnAmount = MyBase.Columns("Amount")
            Me.columnDblamt = MyBase.Columns("Dblamt")
            Me.columnDblconv = MyBase.Columns("Dblconv")
            Me.columnHighratio = MyBase.Columns("Highratio")
            Me.columnGroupcode = MyBase.Columns("Groupcode")
            Me.columnSubgroupcode = MyBase.Columns("Subgroupcode")
            Me.columnVoid = MyBase.Columns("Void")
            Me.columnAvgqty = MyBase.Columns("Avgqty")
            Me.columnAvgrate = MyBase.Columns("Avgrate")
            Me.columnAdduser = MyBase.Columns("Adduser")
            Me.columnAdddatetime = MyBase.Columns("Adddatetime")
            Me.columnUpdateuser = MyBase.Columns("Updateuser")
            Me.columnUpdatetime = MyBase.Columns("Updatetime")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnAutoid = New Global.System.Data.DataColumn("Autoid", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAutoid)
            Me.columnDocno = New Global.System.Data.DataColumn("Docno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDocno)
            Me.columnDocdetails = New Global.System.Data.DataColumn("Docdetails", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDocdetails)
            Me.columnDocdate = New Global.System.Data.DataColumn("Docdate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDocdate)
            Me.columnIndentNo = New Global.System.Data.DataColumn("IndentNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIndentNo)
            Me.columnIndentDate = New Global.System.Data.DataColumn("IndentDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIndentDate)
            Me.columnStorelocationcode = New Global.System.Data.DataColumn("Storelocationcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStorelocationcode)
            Me.columnStorelocationname = New Global.System.Data.DataColumn("Storelocationname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStorelocationname)
            Me.columnOpstorelocationcode = New Global.System.Data.DataColumn("Opstorelocationcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOpstorelocationcode)
            Me.columnOpstorelocationname = New Global.System.Data.DataColumn("Opstorelocationname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOpstorelocationname)
            Me.columnItemcode = New Global.System.Data.DataColumn("Itemcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemcode)
            Me.columnItemname = New Global.System.Data.DataColumn("Itemname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemname)
            Me.columnUom = New Global.System.Data.DataColumn("Uom", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUom)
            Me.columnQty = New Global.System.Data.DataColumn("Qty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQty)
            Me.columnRate = New Global.System.Data.DataColumn("Rate", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRate)
            Me.columnAmount = New Global.System.Data.DataColumn("Amount", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAmount)
            Me.columnDblamt = New Global.System.Data.DataColumn("Dblamt", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDblamt)
            Me.columnDblconv = New Global.System.Data.DataColumn("Dblconv", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDblconv)
            Me.columnHighratio = New Global.System.Data.DataColumn("Highratio", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHighratio)
            Me.columnGroupcode = New Global.System.Data.DataColumn("Groupcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGroupcode)
            Me.columnSubgroupcode = New Global.System.Data.DataColumn("Subgroupcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubgroupcode)
            Me.columnVoid = New Global.System.Data.DataColumn("Void", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVoid)
            Me.columnAvgqty = New Global.System.Data.DataColumn("Avgqty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAvgqty)
            Me.columnAvgrate = New Global.System.Data.DataColumn("Avgrate", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAvgrate)
            Me.columnAdduser = New Global.System.Data.DataColumn("Adduser", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAdduser)
            Me.columnAdddatetime = New Global.System.Data.DataColumn("Adddatetime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAdddatetime)
            Me.columnUpdateuser = New Global.System.Data.DataColumn("Updateuser", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUpdateuser)
            Me.columnUpdatetime = New Global.System.Data.DataColumn("Updatetime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUpdatetime)
            Me.columnAutoid.AutoIncrement = true
            Me.columnAutoid.AllowDBNull = false
            Me.columnAutoid.ReadOnly = true
            Me.columnDocno.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewSTOCKISSUEDETAILRow() As STOCKISSUEDETAILRow
            Return CType(Me.NewRow,STOCKISSUEDETAILRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New STOCKISSUEDETAILRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(STOCKISSUEDETAILRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.STOCKISSUEDETAILRowChangedEvent) Is Nothing) Then
                RaiseEvent STOCKISSUEDETAILRowChanged(Me, New STOCKISSUEDETAILRowChangeEvent(CType(e.Row,STOCKISSUEDETAILRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.STOCKISSUEDETAILRowChangingEvent) Is Nothing) Then
                RaiseEvent STOCKISSUEDETAILRowChanging(Me, New STOCKISSUEDETAILRowChangeEvent(CType(e.Row,STOCKISSUEDETAILRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.STOCKISSUEDETAILRowDeletedEvent) Is Nothing) Then
                RaiseEvent STOCKISSUEDETAILRowDeleted(Me, New STOCKISSUEDETAILRowChangeEvent(CType(e.Row,STOCKISSUEDETAILRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.STOCKISSUEDETAILRowDeletingEvent) Is Nothing) Then
                RaiseEvent STOCKISSUEDETAILRowDeleting(Me, New STOCKISSUEDETAILRowChangeEvent(CType(e.Row,STOCKISSUEDETAILRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveSTOCKISSUEDETAILRow(ByVal row As STOCKISSUEDETAILRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As Dataset1 = New Dataset1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "STOCKISSUEDETAILDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class STOCKSUMMARYDataTable
        Inherits Global.System.Data.TypedTableBase(Of STOCKSUMMARYRow)
        
        Private columnAutoid As Global.System.Data.DataColumn
        
        Private columnItemcode As Global.System.Data.DataColumn
        
        Private columnItemname As Global.System.Data.DataColumn
        
        Private columnUom As Global.System.Data.DataColumn
        
        Private columnValuation As Global.System.Data.DataColumn
        
        Private columnOpqty As Global.System.Data.DataColumn
        
        Private columnOprate As Global.System.Data.DataColumn
        
        Private columnOpval As Global.System.Data.DataColumn
        
        Private columnRcvqty As Global.System.Data.DataColumn
        
        Private columnRcvrate As Global.System.Data.DataColumn
        
        Private columnRcvval As Global.System.Data.DataColumn
        
        Private columnIssqty As Global.System.Data.DataColumn
        
        Private columnIssrate As Global.System.Data.DataColumn
        
        Private columnIssval As Global.System.Data.DataColumn
        
        Private columnClsqty As Global.System.Data.DataColumn
        
        Private columnClsrate As Global.System.Data.DataColumn
        
        Private columnClsval As Global.System.Data.DataColumn
        
        Private columnSTORECODE As Global.System.Data.DataColumn
        
        Private columnGROUPCODE As Global.System.Data.DataColumn
        
        Private columnGROUPNAME As Global.System.Data.DataColumn
        
        Private columnSUBGROUPCODE As Global.System.Data.DataColumn
        
        Private columnSUBGROUPNAME As Global.System.Data.DataColumn
        
        Private columnpegsqty As Global.System.Data.DataColumn
        
        Private columnpegs As Global.System.Data.DataColumn
        
        Private columnRCVQTY1 As Global.System.Data.DataColumn
        
        Private columnRCVRATE1 As Global.System.Data.DataColumn
        
        Private columnRCVVAL1 As Global.System.Data.DataColumn
        
        Private columnRCVQTY2 As Global.System.Data.DataColumn
        
        Private columnRCVRATE2 As Global.System.Data.DataColumn
        
        Private columnRCVVAL2 As Global.System.Data.DataColumn
        
        Private columnRCVQTY3 As Global.System.Data.DataColumn
        
        Private columnRCVRATE3 As Global.System.Data.DataColumn
        
        Private columnRCVVAL3 As Global.System.Data.DataColumn
        
        Private columnISSQTY1 As Global.System.Data.DataColumn
        
        Private columnISSRATE1 As Global.System.Data.DataColumn
        
        Private columnISSVAL1 As Global.System.Data.DataColumn
        
        Private columnISSQTY2 As Global.System.Data.DataColumn
        
        Private columnISSRATE2 As Global.System.Data.DataColumn
        
        Private columnISSVAL2 As Global.System.Data.DataColumn
        
        Private columnISSQTY3 As Global.System.Data.DataColumn
        
        Private columnISSRATE3 As Global.System.Data.DataColumn
        
        Private columnISSVAL3 As Global.System.Data.DataColumn
        
        Private columnDISPQTY As Global.System.Data.DataColumn
        
        Private columnDISPUOM As Global.System.Data.DataColumn
        
        Private columnopdispqty As Global.System.Data.DataColumn
        
        Private columnISDISPQTY As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "STOCKSUMMARY"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AutoidColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAutoid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ItemcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ItemnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UomColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ValuationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnValuation
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OpqtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOpqty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OprateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOprate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OpvalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOpval
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RcvqtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRcvqty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RcvrateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRcvrate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RcvvalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRcvval
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IssqtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIssqty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IssrateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIssrate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IssvalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIssval
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ClsqtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClsqty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ClsrateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClsrate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ClsvalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClsval
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STORECODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTORECODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GROUPCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGROUPCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GROUPNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGROUPNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SUBGROUPCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUBGROUPCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SUBGROUPNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUBGROUPNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property pegsqtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpegsqty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property pegsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpegs
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RCVQTY1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRCVQTY1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RCVRATE1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRCVRATE1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RCVVAL1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRCVVAL1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RCVQTY2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRCVQTY2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RCVRATE2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRCVRATE2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RCVVAL2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRCVVAL2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RCVQTY3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRCVQTY3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RCVRATE3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRCVRATE3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RCVVAL3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRCVVAL3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ISSQTY1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnISSQTY1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ISSRATE1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnISSRATE1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ISSVAL1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnISSVAL1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ISSQTY2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnISSQTY2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ISSRATE2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnISSRATE2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ISSVAL2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnISSVAL2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ISSQTY3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnISSQTY3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ISSRATE3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnISSRATE3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ISSVAL3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnISSVAL3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DISPQTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISPQTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DISPUOMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISPUOM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property opdispqtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnopdispqty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ISDISPQTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnISDISPQTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As STOCKSUMMARYRow
            Get
                Return CType(Me.Rows(index),STOCKSUMMARYRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event STOCKSUMMARYRowChanging As STOCKSUMMARYRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event STOCKSUMMARYRowChanged As STOCKSUMMARYRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event STOCKSUMMARYRowDeleting As STOCKSUMMARYRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event STOCKSUMMARYRowDeleted As STOCKSUMMARYRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddSTOCKSUMMARYRow(ByVal row As STOCKSUMMARYRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddSTOCKSUMMARYRow( _
                    ByVal Itemcode As String,  _
                    ByVal Itemname As String,  _
                    ByVal Uom As String,  _
                    ByVal Valuation As String,  _
                    ByVal Opqty As Decimal,  _
                    ByVal Oprate As Decimal,  _
                    ByVal Opval As Decimal,  _
                    ByVal Rcvqty As Decimal,  _
                    ByVal Rcvrate As Decimal,  _
                    ByVal Rcvval As Decimal,  _
                    ByVal Issqty As Decimal,  _
                    ByVal Issrate As Decimal,  _
                    ByVal Issval As Decimal,  _
                    ByVal Clsqty As Decimal,  _
                    ByVal Clsrate As Decimal,  _
                    ByVal Clsval As Decimal,  _
                    ByVal STORECODE As String,  _
                    ByVal GROUPCODE As String,  _
                    ByVal GROUPNAME As String,  _
                    ByVal SUBGROUPCODE As String,  _
                    ByVal SUBGROUPNAME As String,  _
                    ByVal pegsqty As Decimal,  _
                    ByVal pegs As Decimal,  _
                    ByVal RCVQTY1 As Decimal,  _
                    ByVal RCVRATE1 As Decimal,  _
                    ByVal RCVVAL1 As Decimal,  _
                    ByVal RCVQTY2 As Decimal,  _
                    ByVal RCVRATE2 As Decimal,  _
                    ByVal RCVVAL2 As Decimal,  _
                    ByVal RCVQTY3 As Decimal,  _
                    ByVal RCVRATE3 As Decimal,  _
                    ByVal RCVVAL3 As Decimal,  _
                    ByVal ISSQTY1 As Decimal,  _
                    ByVal ISSRATE1 As Decimal,  _
                    ByVal ISSVAL1 As Decimal,  _
                    ByVal ISSQTY2 As Decimal,  _
                    ByVal ISSRATE2 As Decimal,  _
                    ByVal ISSVAL2 As Decimal,  _
                    ByVal ISSQTY3 As Decimal,  _
                    ByVal ISSRATE3 As Decimal,  _
                    ByVal ISSVAL3 As Decimal,  _
                    ByVal DISPQTY As Decimal,  _
                    ByVal DISPUOM As String,  _
                    ByVal opdispqty As Decimal,  _
                    ByVal ISDISPQTY As Decimal) As STOCKSUMMARYRow
            Dim rowSTOCKSUMMARYRow As STOCKSUMMARYRow = CType(Me.NewRow,STOCKSUMMARYRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Itemcode, Itemname, Uom, Valuation, Opqty, Oprate, Opval, Rcvqty, Rcvrate, Rcvval, Issqty, Issrate, Issval, Clsqty, Clsrate, Clsval, STORECODE, GROUPCODE, GROUPNAME, SUBGROUPCODE, SUBGROUPNAME, pegsqty, pegs, RCVQTY1, RCVRATE1, RCVVAL1, RCVQTY2, RCVRATE2, RCVVAL2, RCVQTY3, RCVRATE3, RCVVAL3, ISSQTY1, ISSRATE1, ISSVAL1, ISSQTY2, ISSRATE2, ISSVAL2, ISSQTY3, ISSRATE3, ISSVAL3, DISPQTY, DISPUOM, opdispqty, ISDISPQTY}
            rowSTOCKSUMMARYRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSTOCKSUMMARYRow)
            Return rowSTOCKSUMMARYRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As STOCKSUMMARYDataTable = CType(MyBase.Clone,STOCKSUMMARYDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New STOCKSUMMARYDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnAutoid = MyBase.Columns("Autoid")
            Me.columnItemcode = MyBase.Columns("Itemcode")
            Me.columnItemname = MyBase.Columns("Itemname")
            Me.columnUom = MyBase.Columns("Uom")
            Me.columnValuation = MyBase.Columns("Valuation")
            Me.columnOpqty = MyBase.Columns("Opqty")
            Me.columnOprate = MyBase.Columns("Oprate")
            Me.columnOpval = MyBase.Columns("Opval")
            Me.columnRcvqty = MyBase.Columns("Rcvqty")
            Me.columnRcvrate = MyBase.Columns("Rcvrate")
            Me.columnRcvval = MyBase.Columns("Rcvval")
            Me.columnIssqty = MyBase.Columns("Issqty")
            Me.columnIssrate = MyBase.Columns("Issrate")
            Me.columnIssval = MyBase.Columns("Issval")
            Me.columnClsqty = MyBase.Columns("Clsqty")
            Me.columnClsrate = MyBase.Columns("Clsrate")
            Me.columnClsval = MyBase.Columns("Clsval")
            Me.columnSTORECODE = MyBase.Columns("STORECODE")
            Me.columnGROUPCODE = MyBase.Columns("GROUPCODE")
            Me.columnGROUPNAME = MyBase.Columns("GROUPNAME")
            Me.columnSUBGROUPCODE = MyBase.Columns("SUBGROUPCODE")
            Me.columnSUBGROUPNAME = MyBase.Columns("SUBGROUPNAME")
            Me.columnpegsqty = MyBase.Columns("pegsqty")
            Me.columnpegs = MyBase.Columns("pegs")
            Me.columnRCVQTY1 = MyBase.Columns("RCVQTY1")
            Me.columnRCVRATE1 = MyBase.Columns("RCVRATE1")
            Me.columnRCVVAL1 = MyBase.Columns("RCVVAL1")
            Me.columnRCVQTY2 = MyBase.Columns("RCVQTY2")
            Me.columnRCVRATE2 = MyBase.Columns("RCVRATE2")
            Me.columnRCVVAL2 = MyBase.Columns("RCVVAL2")
            Me.columnRCVQTY3 = MyBase.Columns("RCVQTY3")
            Me.columnRCVRATE3 = MyBase.Columns("RCVRATE3")
            Me.columnRCVVAL3 = MyBase.Columns("RCVVAL3")
            Me.columnISSQTY1 = MyBase.Columns("ISSQTY1")
            Me.columnISSRATE1 = MyBase.Columns("ISSRATE1")
            Me.columnISSVAL1 = MyBase.Columns("ISSVAL1")
            Me.columnISSQTY2 = MyBase.Columns("ISSQTY2")
            Me.columnISSRATE2 = MyBase.Columns("ISSRATE2")
            Me.columnISSVAL2 = MyBase.Columns("ISSVAL2")
            Me.columnISSQTY3 = MyBase.Columns("ISSQTY3")
            Me.columnISSRATE3 = MyBase.Columns("ISSRATE3")
            Me.columnISSVAL3 = MyBase.Columns("ISSVAL3")
            Me.columnDISPQTY = MyBase.Columns("DISPQTY")
            Me.columnDISPUOM = MyBase.Columns("DISPUOM")
            Me.columnopdispqty = MyBase.Columns("opdispqty")
            Me.columnISDISPQTY = MyBase.Columns("ISDISPQTY")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnAutoid = New Global.System.Data.DataColumn("Autoid", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAutoid)
            Me.columnItemcode = New Global.System.Data.DataColumn("Itemcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemcode)
            Me.columnItemname = New Global.System.Data.DataColumn("Itemname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemname)
            Me.columnUom = New Global.System.Data.DataColumn("Uom", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUom)
            Me.columnValuation = New Global.System.Data.DataColumn("Valuation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnValuation)
            Me.columnOpqty = New Global.System.Data.DataColumn("Opqty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOpqty)
            Me.columnOprate = New Global.System.Data.DataColumn("Oprate", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOprate)
            Me.columnOpval = New Global.System.Data.DataColumn("Opval", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOpval)
            Me.columnRcvqty = New Global.System.Data.DataColumn("Rcvqty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRcvqty)
            Me.columnRcvrate = New Global.System.Data.DataColumn("Rcvrate", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRcvrate)
            Me.columnRcvval = New Global.System.Data.DataColumn("Rcvval", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRcvval)
            Me.columnIssqty = New Global.System.Data.DataColumn("Issqty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIssqty)
            Me.columnIssrate = New Global.System.Data.DataColumn("Issrate", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIssrate)
            Me.columnIssval = New Global.System.Data.DataColumn("Issval", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIssval)
            Me.columnClsqty = New Global.System.Data.DataColumn("Clsqty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClsqty)
            Me.columnClsrate = New Global.System.Data.DataColumn("Clsrate", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClsrate)
            Me.columnClsval = New Global.System.Data.DataColumn("Clsval", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClsval)
            Me.columnSTORECODE = New Global.System.Data.DataColumn("STORECODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTORECODE)
            Me.columnGROUPCODE = New Global.System.Data.DataColumn("GROUPCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGROUPCODE)
            Me.columnGROUPNAME = New Global.System.Data.DataColumn("GROUPNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGROUPNAME)
            Me.columnSUBGROUPCODE = New Global.System.Data.DataColumn("SUBGROUPCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUBGROUPCODE)
            Me.columnSUBGROUPNAME = New Global.System.Data.DataColumn("SUBGROUPNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUBGROUPNAME)
            Me.columnpegsqty = New Global.System.Data.DataColumn("pegsqty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpegsqty)
            Me.columnpegs = New Global.System.Data.DataColumn("pegs", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpegs)
            Me.columnRCVQTY1 = New Global.System.Data.DataColumn("RCVQTY1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRCVQTY1)
            Me.columnRCVRATE1 = New Global.System.Data.DataColumn("RCVRATE1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRCVRATE1)
            Me.columnRCVVAL1 = New Global.System.Data.DataColumn("RCVVAL1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRCVVAL1)
            Me.columnRCVQTY2 = New Global.System.Data.DataColumn("RCVQTY2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRCVQTY2)
            Me.columnRCVRATE2 = New Global.System.Data.DataColumn("RCVRATE2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRCVRATE2)
            Me.columnRCVVAL2 = New Global.System.Data.DataColumn("RCVVAL2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRCVVAL2)
            Me.columnRCVQTY3 = New Global.System.Data.DataColumn("RCVQTY3", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRCVQTY3)
            Me.columnRCVRATE3 = New Global.System.Data.DataColumn("RCVRATE3", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRCVRATE3)
            Me.columnRCVVAL3 = New Global.System.Data.DataColumn("RCVVAL3", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRCVVAL3)
            Me.columnISSQTY1 = New Global.System.Data.DataColumn("ISSQTY1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnISSQTY1)
            Me.columnISSRATE1 = New Global.System.Data.DataColumn("ISSRATE1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnISSRATE1)
            Me.columnISSVAL1 = New Global.System.Data.DataColumn("ISSVAL1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnISSVAL1)
            Me.columnISSQTY2 = New Global.System.Data.DataColumn("ISSQTY2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnISSQTY2)
            Me.columnISSRATE2 = New Global.System.Data.DataColumn("ISSRATE2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnISSRATE2)
            Me.columnISSVAL2 = New Global.System.Data.DataColumn("ISSVAL2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnISSVAL2)
            Me.columnISSQTY3 = New Global.System.Data.DataColumn("ISSQTY3", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnISSQTY3)
            Me.columnISSRATE3 = New Global.System.Data.DataColumn("ISSRATE3", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnISSRATE3)
            Me.columnISSVAL3 = New Global.System.Data.DataColumn("ISSVAL3", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnISSVAL3)
            Me.columnDISPQTY = New Global.System.Data.DataColumn("DISPQTY", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISPQTY)
            Me.columnDISPUOM = New Global.System.Data.DataColumn("DISPUOM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISPUOM)
            Me.columnopdispqty = New Global.System.Data.DataColumn("opdispqty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnopdispqty)
            Me.columnISDISPQTY = New Global.System.Data.DataColumn("ISDISPQTY", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnISDISPQTY)
            Me.columnAutoid.AutoIncrement = true
            Me.columnAutoid.AllowDBNull = false
            Me.columnAutoid.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewSTOCKSUMMARYRow() As STOCKSUMMARYRow
            Return CType(Me.NewRow,STOCKSUMMARYRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New STOCKSUMMARYRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(STOCKSUMMARYRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.STOCKSUMMARYRowChangedEvent) Is Nothing) Then
                RaiseEvent STOCKSUMMARYRowChanged(Me, New STOCKSUMMARYRowChangeEvent(CType(e.Row,STOCKSUMMARYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.STOCKSUMMARYRowChangingEvent) Is Nothing) Then
                RaiseEvent STOCKSUMMARYRowChanging(Me, New STOCKSUMMARYRowChangeEvent(CType(e.Row,STOCKSUMMARYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.STOCKSUMMARYRowDeletedEvent) Is Nothing) Then
                RaiseEvent STOCKSUMMARYRowDeleted(Me, New STOCKSUMMARYRowChangeEvent(CType(e.Row,STOCKSUMMARYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.STOCKSUMMARYRowDeletingEvent) Is Nothing) Then
                RaiseEvent STOCKSUMMARYRowDeleting(Me, New STOCKSUMMARYRowChangeEvent(CType(e.Row,STOCKSUMMARYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveSTOCKSUMMARYRow(ByVal row As STOCKSUMMARYRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As Dataset1 = New Dataset1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "STOCKSUMMARYDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ISSUEREGISTERDataTable
        Inherits Global.System.Data.TypedTableBase(Of ISSUEREGISTERRow)
        
        Private columnINDENTNO As Global.System.Data.DataColumn
        
        Private columnLOCATIONNAME As Global.System.Data.DataColumn
        
        Private columnDOCDETAILS As Global.System.Data.DataColumn
        
        Private columnDOCDATE As Global.System.Data.DataColumn
        
        Private columnGROUPDESC As Global.System.Data.DataColumn
        
        Private columnUOM As Global.System.Data.DataColumn
        
        Private columnQTY As Global.System.Data.DataColumn
        
        Private columnRATE As Global.System.Data.DataColumn
        
        Private columnAMOUNT As Global.System.Data.DataColumn
        
        Private columnITEMCODE As Global.System.Data.DataColumn
        
        Private columnITEMNAME As Global.System.Data.DataColumn
        
        Private columnDBLAMT As Global.System.Data.DataColumn
        
        Private columnCONVVALUE As Global.System.Data.DataColumn
        
        Private columnCONV As Global.System.Data.DataColumn
        
        Private columnFROMSTORENAME As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ISSUEREGISTER"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INDENTNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINDENTNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LOCATIONNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOCATIONNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DOCDETAILSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOCDETAILS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DOCDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOCDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GROUPDESCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGROUPDESC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UOMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUOM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AMOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAMOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ITEMCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEMCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ITEMNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEMNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DBLAMTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDBLAMT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CONVVALUEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONVVALUE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CONVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FROMSTORENAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFROMSTORENAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ISSUEREGISTERRow
            Get
                Return CType(Me.Rows(index),ISSUEREGISTERRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ISSUEREGISTERRowChanging As ISSUEREGISTERRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ISSUEREGISTERRowChanged As ISSUEREGISTERRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ISSUEREGISTERRowDeleting As ISSUEREGISTERRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ISSUEREGISTERRowDeleted As ISSUEREGISTERRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddISSUEREGISTERRow(ByVal row As ISSUEREGISTERRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddISSUEREGISTERRow(ByVal INDENTNO As String, ByVal LOCATIONNAME As String, ByVal DOCDETAILS As String, ByVal DOCDATE As Date, ByVal GROUPDESC As String, ByVal UOM As String, ByVal QTY As Decimal, ByVal RATE As Decimal, ByVal AMOUNT As Decimal, ByVal ITEMCODE As String, ByVal ITEMNAME As String, ByVal DBLAMT As Decimal, ByVal CONVVALUE As Decimal, ByVal CONV As String, ByVal FROMSTORENAME As String) As ISSUEREGISTERRow
            Dim rowISSUEREGISTERRow As ISSUEREGISTERRow = CType(Me.NewRow,ISSUEREGISTERRow)
            Dim columnValuesArray() As Object = New Object() {INDENTNO, LOCATIONNAME, DOCDETAILS, DOCDATE, GROUPDESC, UOM, QTY, RATE, AMOUNT, ITEMCODE, ITEMNAME, DBLAMT, CONVVALUE, CONV, FROMSTORENAME}
            rowISSUEREGISTERRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowISSUEREGISTERRow)
            Return rowISSUEREGISTERRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ISSUEREGISTERDataTable = CType(MyBase.Clone,ISSUEREGISTERDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ISSUEREGISTERDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnINDENTNO = MyBase.Columns("INDENTNO")
            Me.columnLOCATIONNAME = MyBase.Columns("LOCATIONNAME")
            Me.columnDOCDETAILS = MyBase.Columns("DOCDETAILS")
            Me.columnDOCDATE = MyBase.Columns("DOCDATE")
            Me.columnGROUPDESC = MyBase.Columns("GROUPDESC")
            Me.columnUOM = MyBase.Columns("UOM")
            Me.columnQTY = MyBase.Columns("QTY")
            Me.columnRATE = MyBase.Columns("RATE")
            Me.columnAMOUNT = MyBase.Columns("AMOUNT")
            Me.columnITEMCODE = MyBase.Columns("ITEMCODE")
            Me.columnITEMNAME = MyBase.Columns("ITEMNAME")
            Me.columnDBLAMT = MyBase.Columns("DBLAMT")
            Me.columnCONVVALUE = MyBase.Columns("CONVVALUE")
            Me.columnCONV = MyBase.Columns("CONV")
            Me.columnFROMSTORENAME = MyBase.Columns("FROMSTORENAME")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnINDENTNO = New Global.System.Data.DataColumn("INDENTNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINDENTNO)
            Me.columnLOCATIONNAME = New Global.System.Data.DataColumn("LOCATIONNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOCATIONNAME)
            Me.columnDOCDETAILS = New Global.System.Data.DataColumn("DOCDETAILS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOCDETAILS)
            Me.columnDOCDATE = New Global.System.Data.DataColumn("DOCDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOCDATE)
            Me.columnGROUPDESC = New Global.System.Data.DataColumn("GROUPDESC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGROUPDESC)
            Me.columnUOM = New Global.System.Data.DataColumn("UOM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUOM)
            Me.columnQTY = New Global.System.Data.DataColumn("QTY", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQTY)
            Me.columnRATE = New Global.System.Data.DataColumn("RATE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRATE)
            Me.columnAMOUNT = New Global.System.Data.DataColumn("AMOUNT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAMOUNT)
            Me.columnITEMCODE = New Global.System.Data.DataColumn("ITEMCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEMCODE)
            Me.columnITEMNAME = New Global.System.Data.DataColumn("ITEMNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEMNAME)
            Me.columnDBLAMT = New Global.System.Data.DataColumn("DBLAMT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDBLAMT)
            Me.columnCONVVALUE = New Global.System.Data.DataColumn("CONVVALUE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONVVALUE)
            Me.columnCONV = New Global.System.Data.DataColumn("CONV", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONV)
            Me.columnFROMSTORENAME = New Global.System.Data.DataColumn("FROMSTORENAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFROMSTORENAME)
            Me.columnLOCATIONNAME.ReadOnly = true
            Me.columnDOCDETAILS.ReadOnly = true
            Me.columnGROUPDESC.ReadOnly = true
            Me.columnUOM.ReadOnly = true
            Me.columnQTY.ReadOnly = true
            Me.columnRATE.ReadOnly = true
            Me.columnAMOUNT.ReadOnly = true
            Me.columnITEMCODE.ReadOnly = true
            Me.columnITEMNAME.ReadOnly = true
            Me.columnDBLAMT.ReadOnly = true
            Me.columnCONVVALUE.ReadOnly = true
            Me.columnCONV.ReadOnly = true
            Me.columnFROMSTORENAME.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewISSUEREGISTERRow() As ISSUEREGISTERRow
            Return CType(Me.NewRow,ISSUEREGISTERRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ISSUEREGISTERRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ISSUEREGISTERRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ISSUEREGISTERRowChangedEvent) Is Nothing) Then
                RaiseEvent ISSUEREGISTERRowChanged(Me, New ISSUEREGISTERRowChangeEvent(CType(e.Row,ISSUEREGISTERRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ISSUEREGISTERRowChangingEvent) Is Nothing) Then
                RaiseEvent ISSUEREGISTERRowChanging(Me, New ISSUEREGISTERRowChangeEvent(CType(e.Row,ISSUEREGISTERRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ISSUEREGISTERRowDeletedEvent) Is Nothing) Then
                RaiseEvent ISSUEREGISTERRowDeleted(Me, New ISSUEREGISTERRowChangeEvent(CType(e.Row,ISSUEREGISTERRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ISSUEREGISTERRowDeletingEvent) Is Nothing) Then
                RaiseEvent ISSUEREGISTERRowDeleting(Me, New ISSUEREGISTERRowChangeEvent(CType(e.Row,ISSUEREGISTERRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveISSUEREGISTERRow(ByVal row As ISSUEREGISTERRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As Dataset1 = New Dataset1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ISSUEREGISTERDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class VIEWSTOCKADJUSTMENTDataTable
        Inherits Global.System.Data.TypedTableBase(Of VIEWSTOCKADJUSTMENTRow)
        
        Private columnSTORELOCATIONDESC As Global.System.Data.DataColumn
        
        Private columnDOCDETAILS As Global.System.Data.DataColumn
        
        Private columnDOCDATE As Global.System.Data.DataColumn
        
        Private columnITEMCODE As Global.System.Data.DataColumn
        
        Private columnITEMNAME As Global.System.Data.DataColumn
        
        Private columnUOM As Global.System.Data.DataColumn
        
        Private columnSTOCKINHAND As Global.System.Data.DataColumn
        
        Private columnPHYSICALSTOCK As Global.System.Data.DataColumn
        
        Private columnADJUSTEDSTOCK As Global.System.Data.DataColumn
        
        Private columnRATE As Global.System.Data.DataColumn
        
        Private columnAMOUNT As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "VIEWSTOCKADJUSTMENT"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STORELOCATIONDESCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTORELOCATIONDESC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DOCDETAILSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOCDETAILS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DOCDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOCDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ITEMCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEMCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ITEMNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEMNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UOMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUOM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STOCKINHANDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTOCKINHAND
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PHYSICALSTOCKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPHYSICALSTOCK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ADJUSTEDSTOCKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADJUSTEDSTOCK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AMOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAMOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As VIEWSTOCKADJUSTMENTRow
            Get
                Return CType(Me.Rows(index),VIEWSTOCKADJUSTMENTRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VIEWSTOCKADJUSTMENTRowChanging As VIEWSTOCKADJUSTMENTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VIEWSTOCKADJUSTMENTRowChanged As VIEWSTOCKADJUSTMENTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VIEWSTOCKADJUSTMENTRowDeleting As VIEWSTOCKADJUSTMENTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VIEWSTOCKADJUSTMENTRowDeleted As VIEWSTOCKADJUSTMENTRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddVIEWSTOCKADJUSTMENTRow(ByVal row As VIEWSTOCKADJUSTMENTRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddVIEWSTOCKADJUSTMENTRow(ByVal STORELOCATIONDESC As String, ByVal DOCDETAILS As String, ByVal DOCDATE As Date, ByVal ITEMCODE As String, ByVal ITEMNAME As String, ByVal UOM As String, ByVal STOCKINHAND As Decimal, ByVal PHYSICALSTOCK As Decimal, ByVal ADJUSTEDSTOCK As Decimal, ByVal RATE As Decimal, ByVal AMOUNT As Decimal) As VIEWSTOCKADJUSTMENTRow
            Dim rowVIEWSTOCKADJUSTMENTRow As VIEWSTOCKADJUSTMENTRow = CType(Me.NewRow,VIEWSTOCKADJUSTMENTRow)
            Dim columnValuesArray() As Object = New Object() {STORELOCATIONDESC, DOCDETAILS, DOCDATE, ITEMCODE, ITEMNAME, UOM, STOCKINHAND, PHYSICALSTOCK, ADJUSTEDSTOCK, RATE, AMOUNT}
            rowVIEWSTOCKADJUSTMENTRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowVIEWSTOCKADJUSTMENTRow)
            Return rowVIEWSTOCKADJUSTMENTRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As VIEWSTOCKADJUSTMENTDataTable = CType(MyBase.Clone,VIEWSTOCKADJUSTMENTDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New VIEWSTOCKADJUSTMENTDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnSTORELOCATIONDESC = MyBase.Columns("STORELOCATIONDESC")
            Me.columnDOCDETAILS = MyBase.Columns("DOCDETAILS")
            Me.columnDOCDATE = MyBase.Columns("DOCDATE")
            Me.columnITEMCODE = MyBase.Columns("ITEMCODE")
            Me.columnITEMNAME = MyBase.Columns("ITEMNAME")
            Me.columnUOM = MyBase.Columns("UOM")
            Me.columnSTOCKINHAND = MyBase.Columns("STOCKINHAND")
            Me.columnPHYSICALSTOCK = MyBase.Columns("PHYSICALSTOCK")
            Me.columnADJUSTEDSTOCK = MyBase.Columns("ADJUSTEDSTOCK")
            Me.columnRATE = MyBase.Columns("RATE")
            Me.columnAMOUNT = MyBase.Columns("AMOUNT")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnSTORELOCATIONDESC = New Global.System.Data.DataColumn("STORELOCATIONDESC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTORELOCATIONDESC)
            Me.columnDOCDETAILS = New Global.System.Data.DataColumn("DOCDETAILS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOCDETAILS)
            Me.columnDOCDATE = New Global.System.Data.DataColumn("DOCDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOCDATE)
            Me.columnITEMCODE = New Global.System.Data.DataColumn("ITEMCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEMCODE)
            Me.columnITEMNAME = New Global.System.Data.DataColumn("ITEMNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEMNAME)
            Me.columnUOM = New Global.System.Data.DataColumn("UOM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUOM)
            Me.columnSTOCKINHAND = New Global.System.Data.DataColumn("STOCKINHAND", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTOCKINHAND)
            Me.columnPHYSICALSTOCK = New Global.System.Data.DataColumn("PHYSICALSTOCK", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPHYSICALSTOCK)
            Me.columnADJUSTEDSTOCK = New Global.System.Data.DataColumn("ADJUSTEDSTOCK", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADJUSTEDSTOCK)
            Me.columnRATE = New Global.System.Data.DataColumn("RATE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRATE)
            Me.columnAMOUNT = New Global.System.Data.DataColumn("AMOUNT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAMOUNT)
            Me.columnSTORELOCATIONDESC.AllowDBNull = false
            Me.columnDOCDETAILS.AllowDBNull = false
            Me.columnITEMCODE.AllowDBNull = false
            Me.columnITEMNAME.AllowDBNull = false
            Me.columnUOM.AllowDBNull = false
            Me.columnSTOCKINHAND.AllowDBNull = false
            Me.columnPHYSICALSTOCK.AllowDBNull = false
            Me.columnADJUSTEDSTOCK.AllowDBNull = false
            Me.columnRATE.AllowDBNull = false
            Me.columnAMOUNT.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewVIEWSTOCKADJUSTMENTRow() As VIEWSTOCKADJUSTMENTRow
            Return CType(Me.NewRow,VIEWSTOCKADJUSTMENTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New VIEWSTOCKADJUSTMENTRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(VIEWSTOCKADJUSTMENTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.VIEWSTOCKADJUSTMENTRowChangedEvent) Is Nothing) Then
                RaiseEvent VIEWSTOCKADJUSTMENTRowChanged(Me, New VIEWSTOCKADJUSTMENTRowChangeEvent(CType(e.Row,VIEWSTOCKADJUSTMENTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.VIEWSTOCKADJUSTMENTRowChangingEvent) Is Nothing) Then
                RaiseEvent VIEWSTOCKADJUSTMENTRowChanging(Me, New VIEWSTOCKADJUSTMENTRowChangeEvent(CType(e.Row,VIEWSTOCKADJUSTMENTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.VIEWSTOCKADJUSTMENTRowDeletedEvent) Is Nothing) Then
                RaiseEvent VIEWSTOCKADJUSTMENTRowDeleted(Me, New VIEWSTOCKADJUSTMENTRowChangeEvent(CType(e.Row,VIEWSTOCKADJUSTMENTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.VIEWSTOCKADJUSTMENTRowDeletingEvent) Is Nothing) Then
                RaiseEvent VIEWSTOCKADJUSTMENTRowDeleting(Me, New VIEWSTOCKADJUSTMENTRowChangeEvent(CType(e.Row,VIEWSTOCKADJUSTMENTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveVIEWSTOCKADJUSTMENTRow(ByVal row As VIEWSTOCKADJUSTMENTRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As Dataset1 = New Dataset1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "VIEWSTOCKADJUSTMENTDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class VIEWSTOCKREGISTERDataTable
        Inherits Global.System.Data.TypedTableBase(Of VIEWSTOCKREGISTERRow)
        
        Private columnFROMSTOREDESC As Global.System.Data.DataColumn
        
        Private columnTOSTOREDESC As Global.System.Data.DataColumn
        
        Private columnDOCTYPE As Global.System.Data.DataColumn
        
        Private columnCHALLENNO As Global.System.Data.DataColumn
        
        Private columnCHALLENDATE As Global.System.Data.DataColumn
        
        Private columnDOCDETAILS As Global.System.Data.DataColumn
        
        Private columnDOCDATE As Global.System.Data.DataColumn
        
        Private columnITEMCODE As Global.System.Data.DataColumn
        
        Private columnITEMNAME As Global.System.Data.DataColumn
        
        Private columnUOM As Global.System.Data.DataColumn
        
        Private columnQTY As Global.System.Data.DataColumn
        
        Private columnRATE As Global.System.Data.DataColumn
        
        Private columnAMOUNT As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "VIEWSTOCKREGISTER"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FROMSTOREDESCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFROMSTOREDESC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOSTOREDESCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOSTOREDESC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DOCTYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOCTYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CHALLENNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCHALLENNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CHALLENDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCHALLENDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DOCDETAILSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOCDETAILS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DOCDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOCDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ITEMCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEMCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ITEMNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEMNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UOMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUOM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AMOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAMOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As VIEWSTOCKREGISTERRow
            Get
                Return CType(Me.Rows(index),VIEWSTOCKREGISTERRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VIEWSTOCKREGISTERRowChanging As VIEWSTOCKREGISTERRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VIEWSTOCKREGISTERRowChanged As VIEWSTOCKREGISTERRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VIEWSTOCKREGISTERRowDeleting As VIEWSTOCKREGISTERRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VIEWSTOCKREGISTERRowDeleted As VIEWSTOCKREGISTERRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddVIEWSTOCKREGISTERRow(ByVal row As VIEWSTOCKREGISTERRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddVIEWSTOCKREGISTERRow(ByVal FROMSTOREDESC As String, ByVal TOSTOREDESC As String, ByVal DOCTYPE As String, ByVal CHALLENNO As String, ByVal CHALLENDATE As Date, ByVal DOCDETAILS As String, ByVal DOCDATE As Date, ByVal ITEMCODE As String, ByVal ITEMNAME As String, ByVal UOM As String, ByVal QTY As Decimal, ByVal RATE As Decimal, ByVal AMOUNT As Decimal) As VIEWSTOCKREGISTERRow
            Dim rowVIEWSTOCKREGISTERRow As VIEWSTOCKREGISTERRow = CType(Me.NewRow,VIEWSTOCKREGISTERRow)
            Dim columnValuesArray() As Object = New Object() {FROMSTOREDESC, TOSTOREDESC, DOCTYPE, CHALLENNO, CHALLENDATE, DOCDETAILS, DOCDATE, ITEMCODE, ITEMNAME, UOM, QTY, RATE, AMOUNT}
            rowVIEWSTOCKREGISTERRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowVIEWSTOCKREGISTERRow)
            Return rowVIEWSTOCKREGISTERRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As VIEWSTOCKREGISTERDataTable = CType(MyBase.Clone,VIEWSTOCKREGISTERDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New VIEWSTOCKREGISTERDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnFROMSTOREDESC = MyBase.Columns("FROMSTOREDESC")
            Me.columnTOSTOREDESC = MyBase.Columns("TOSTOREDESC")
            Me.columnDOCTYPE = MyBase.Columns("DOCTYPE")
            Me.columnCHALLENNO = MyBase.Columns("CHALLENNO")
            Me.columnCHALLENDATE = MyBase.Columns("CHALLENDATE")
            Me.columnDOCDETAILS = MyBase.Columns("DOCDETAILS")
            Me.columnDOCDATE = MyBase.Columns("DOCDATE")
            Me.columnITEMCODE = MyBase.Columns("ITEMCODE")
            Me.columnITEMNAME = MyBase.Columns("ITEMNAME")
            Me.columnUOM = MyBase.Columns("UOM")
            Me.columnQTY = MyBase.Columns("QTY")
            Me.columnRATE = MyBase.Columns("RATE")
            Me.columnAMOUNT = MyBase.Columns("AMOUNT")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnFROMSTOREDESC = New Global.System.Data.DataColumn("FROMSTOREDESC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFROMSTOREDESC)
            Me.columnTOSTOREDESC = New Global.System.Data.DataColumn("TOSTOREDESC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOSTOREDESC)
            Me.columnDOCTYPE = New Global.System.Data.DataColumn("DOCTYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOCTYPE)
            Me.columnCHALLENNO = New Global.System.Data.DataColumn("CHALLENNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCHALLENNO)
            Me.columnCHALLENDATE = New Global.System.Data.DataColumn("CHALLENDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCHALLENDATE)
            Me.columnDOCDETAILS = New Global.System.Data.DataColumn("DOCDETAILS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOCDETAILS)
            Me.columnDOCDATE = New Global.System.Data.DataColumn("DOCDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOCDATE)
            Me.columnITEMCODE = New Global.System.Data.DataColumn("ITEMCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEMCODE)
            Me.columnITEMNAME = New Global.System.Data.DataColumn("ITEMNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEMNAME)
            Me.columnUOM = New Global.System.Data.DataColumn("UOM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUOM)
            Me.columnQTY = New Global.System.Data.DataColumn("QTY", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQTY)
            Me.columnRATE = New Global.System.Data.DataColumn("RATE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRATE)
            Me.columnAMOUNT = New Global.System.Data.DataColumn("AMOUNT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAMOUNT)
            Me.columnFROMSTOREDESC.AllowDBNull = false
            Me.columnTOSTOREDESC.AllowDBNull = false
            Me.columnDOCTYPE.AllowDBNull = false
            Me.columnCHALLENNO.AllowDBNull = false
            Me.columnDOCDETAILS.AllowDBNull = false
            Me.columnITEMCODE.AllowDBNull = false
            Me.columnITEMNAME.AllowDBNull = false
            Me.columnUOM.AllowDBNull = false
            Me.columnQTY.AllowDBNull = false
            Me.columnRATE.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewVIEWSTOCKREGISTERRow() As VIEWSTOCKREGISTERRow
            Return CType(Me.NewRow,VIEWSTOCKREGISTERRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New VIEWSTOCKREGISTERRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(VIEWSTOCKREGISTERRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.VIEWSTOCKREGISTERRowChangedEvent) Is Nothing) Then
                RaiseEvent VIEWSTOCKREGISTERRowChanged(Me, New VIEWSTOCKREGISTERRowChangeEvent(CType(e.Row,VIEWSTOCKREGISTERRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.VIEWSTOCKREGISTERRowChangingEvent) Is Nothing) Then
                RaiseEvent VIEWSTOCKREGISTERRowChanging(Me, New VIEWSTOCKREGISTERRowChangeEvent(CType(e.Row,VIEWSTOCKREGISTERRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.VIEWSTOCKREGISTERRowDeletedEvent) Is Nothing) Then
                RaiseEvent VIEWSTOCKREGISTERRowDeleted(Me, New VIEWSTOCKREGISTERRowChangeEvent(CType(e.Row,VIEWSTOCKREGISTERRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.VIEWSTOCKREGISTERRowDeletingEvent) Is Nothing) Then
                RaiseEvent VIEWSTOCKREGISTERRowDeleting(Me, New VIEWSTOCKREGISTERRowChangeEvent(CType(e.Row,VIEWSTOCKREGISTERRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveVIEWSTOCKREGISTERRow(ByVal row As VIEWSTOCKREGISTERRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As Dataset1 = New Dataset1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "VIEWSTOCKREGISTERDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Inv_view_Pending_PurDataTable
        Inherits Global.System.Data.TypedTableBase(Of Inv_view_Pending_PurRow)
        
        Private columnpono As Global.System.Data.DataColumn
        
        Private columnpodate As Global.System.Data.DataColumn
        
        Private columnpodepartment As Global.System.Data.DataColumn
        
        Private columnpovendorcode As Global.System.Data.DataColumn
        
        Private columnitemcode As Global.System.Data.DataColumn
        
        Private columnquantity As Global.System.Data.DataColumn
        
        Private columnrate As Global.System.Data.DataColumn
        
        Private columnamount As Global.System.Data.DataColumn
        
        Private columnvatamt As Global.System.Data.DataColumn
        
        Private columndiscamt As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Inv_view_Pending_Pur"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ponoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpono
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property podateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpodate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property podepartmentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpodepartment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property povendorcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpovendorcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property itemcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnitemcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property quantityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnquantity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property rateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property amountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnamount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property vatamtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvatamt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property discamtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndiscamt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Inv_view_Pending_PurRow
            Get
                Return CType(Me.Rows(index),Inv_view_Pending_PurRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Inv_view_Pending_PurRowChanging As Inv_view_Pending_PurRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Inv_view_Pending_PurRowChanged As Inv_view_Pending_PurRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Inv_view_Pending_PurRowDeleting As Inv_view_Pending_PurRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Inv_view_Pending_PurRowDeleted As Inv_view_Pending_PurRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddInv_view_Pending_PurRow(ByVal row As Inv_view_Pending_PurRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddInv_view_Pending_PurRow(ByVal pono As String, ByVal podate As Date, ByVal podepartment As String, ByVal povendorcode As String, ByVal itemcode As String, ByVal quantity As Decimal, ByVal rate As Decimal, ByVal amount As Decimal, ByVal vatamt As Decimal, ByVal discamt As Decimal) As Inv_view_Pending_PurRow
            Dim rowInv_view_Pending_PurRow As Inv_view_Pending_PurRow = CType(Me.NewRow,Inv_view_Pending_PurRow)
            Dim columnValuesArray() As Object = New Object() {pono, podate, podepartment, povendorcode, itemcode, quantity, rate, amount, vatamt, discamt}
            rowInv_view_Pending_PurRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowInv_view_Pending_PurRow)
            Return rowInv_view_Pending_PurRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Inv_view_Pending_PurDataTable = CType(MyBase.Clone,Inv_view_Pending_PurDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Inv_view_Pending_PurDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnpono = MyBase.Columns("pono")
            Me.columnpodate = MyBase.Columns("podate")
            Me.columnpodepartment = MyBase.Columns("podepartment")
            Me.columnpovendorcode = MyBase.Columns("povendorcode")
            Me.columnitemcode = MyBase.Columns("itemcode")
            Me.columnquantity = MyBase.Columns("quantity")
            Me.columnrate = MyBase.Columns("rate")
            Me.columnamount = MyBase.Columns("amount")
            Me.columnvatamt = MyBase.Columns("vatamt")
            Me.columndiscamt = MyBase.Columns("discamt")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnpono = New Global.System.Data.DataColumn("pono", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpono)
            Me.columnpodate = New Global.System.Data.DataColumn("podate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpodate)
            Me.columnpodepartment = New Global.System.Data.DataColumn("podepartment", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpodepartment)
            Me.columnpovendorcode = New Global.System.Data.DataColumn("povendorcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpovendorcode)
            Me.columnitemcode = New Global.System.Data.DataColumn("itemcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnitemcode)
            Me.columnquantity = New Global.System.Data.DataColumn("quantity", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnquantity)
            Me.columnrate = New Global.System.Data.DataColumn("rate", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrate)
            Me.columnamount = New Global.System.Data.DataColumn("amount", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnamount)
            Me.columnvatamt = New Global.System.Data.DataColumn("vatamt", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvatamt)
            Me.columndiscamt = New Global.System.Data.DataColumn("discamt", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscamt)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewInv_view_Pending_PurRow() As Inv_view_Pending_PurRow
            Return CType(Me.NewRow,Inv_view_Pending_PurRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Inv_view_Pending_PurRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Inv_view_Pending_PurRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Inv_view_Pending_PurRowChangedEvent) Is Nothing) Then
                RaiseEvent Inv_view_Pending_PurRowChanged(Me, New Inv_view_Pending_PurRowChangeEvent(CType(e.Row,Inv_view_Pending_PurRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Inv_view_Pending_PurRowChangingEvent) Is Nothing) Then
                RaiseEvent Inv_view_Pending_PurRowChanging(Me, New Inv_view_Pending_PurRowChangeEvent(CType(e.Row,Inv_view_Pending_PurRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Inv_view_Pending_PurRowDeletedEvent) Is Nothing) Then
                RaiseEvent Inv_view_Pending_PurRowDeleted(Me, New Inv_view_Pending_PurRowChangeEvent(CType(e.Row,Inv_view_Pending_PurRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Inv_view_Pending_PurRowDeletingEvent) Is Nothing) Then
                RaiseEvent Inv_view_Pending_PurRowDeleting(Me, New Inv_view_Pending_PurRowChangeEvent(CType(e.Row,Inv_view_Pending_PurRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveInv_view_Pending_PurRow(ByVal row As Inv_view_Pending_PurRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As Dataset1 = New Dataset1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Inv_view_Pending_PurDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class INVENTORYITEMMASTERDataTable
        Inherits Global.System.Data.TypedTableBase(Of INVENTORYITEMMASTERRow)
        
        Private columnitemcode As Global.System.Data.DataColumn
        
        Private columnitemname As Global.System.Data.DataColumn
        
        Private columnalias As Global.System.Data.DataColumn
        
        Private columngroupcode As Global.System.Data.DataColumn
        
        Private columngroupname As Global.System.Data.DataColumn
        
        Private columnsubgroupcode As Global.System.Data.DataColumn
        
        Private columnsubgroupname As Global.System.Data.DataColumn
        
        Private columnsubsubgroupcode As Global.System.Data.DataColumn
        
        Private columnsubsubgroupname As Global.System.Data.DataColumn
        
        Private columnreorderlevel As Global.System.Data.DataColumn
        
        Private columnminqty As Global.System.Data.DataColumn
        
        Private columnmaxqty As Global.System.Data.DataColumn
        
        Private columnvaluation As Global.System.Data.DataColumn
        
        Private columnpurchaserate As Global.System.Data.DataColumn
        
        Private columnsalerate As Global.System.Data.DataColumn
        
        Private columnstockuom As Global.System.Data.DataColumn
        
        Private columnreceiveuom As Global.System.Data.DataColumn
        
        Private columnsaleuom As Global.System.Data.DataColumn
        
        Private columnleadtime As Global.System.Data.DataColumn
        
        Private columndoubleuom As Global.System.Data.DataColumn
        
        Private columnopstock As Global.System.Data.DataColumn
        
        Private columnopvalue As Global.System.Data.DataColumn
        
        Private columnconvvalue As Global.System.Data.DataColumn
        
        Private columnFreeze As Global.System.Data.DataColumn
        
        Private columnTypeCode As Global.System.Data.DataColumn
        
        Private columnAdduser As Global.System.Data.DataColumn
        
        Private columnAdddate As Global.System.Data.DataColumn
        
        Private columnSTORECODE As Global.System.Data.DataColumn
        
        Private columnclosingqty As Global.System.Data.DataColumn
        
        Private columnclosingval As Global.System.Data.DataColumn
        
        Private columnrcptqty As Global.System.Data.DataColumn
        
        Private columnrcptval As Global.System.Data.DataColumn
        
        Private columnissueqty As Global.System.Data.DataColumn
        
        Private columnissueval As Global.System.Data.DataColumn
        
        Private columnabc As Global.System.Data.DataColumn
        
        Private columnfsm As Global.System.Data.DataColumn
        
        Private columnprefix As Global.System.Data.DataColumn
        
        Private columnwefdate As Global.System.Data.DataColumn
        
        Private columnstkoption As Global.System.Data.DataColumn
        
        Private columnbinlocation As Global.System.Data.DataColumn
        
        Private columncategory As Global.System.Data.DataColumn
        
        Private columnselectopt As Global.System.Data.DataColumn
        
        Private columnSTARTDATE As Global.System.Data.DataColumn
        
        Private columnPEGS As Global.System.Data.DataColumn
        
        Private columnml As Global.System.Data.DataColumn
        
        Private columnPEGSRATE As Global.System.Data.DataColumn
        
        Private columnOPT As Global.System.Data.DataColumn
        
        Private columnaprdrqty As Global.System.Data.DataColumn
        
        Private columnaprdrval As Global.System.Data.DataColumn
        
        Private columnaprcrqty As Global.System.Data.DataColumn
        
        Private columnaprcrval As Global.System.Data.DataColumn
        
        Private columnmaydrqty As Global.System.Data.DataColumn
        
        Private columnmaydrval As Global.System.Data.DataColumn
        
        Private columnmaycrqty As Global.System.Data.DataColumn
        
        Private columnmaycrval As Global.System.Data.DataColumn
        
        Private columnjundrqty As Global.System.Data.DataColumn
        
        Private columnjundrval As Global.System.Data.DataColumn
        
        Private columnjuncrqty As Global.System.Data.DataColumn
        
        Private columnjuncrval As Global.System.Data.DataColumn
        
        Private columnjuldrqty As Global.System.Data.DataColumn
        
        Private columnjuldrval As Global.System.Data.DataColumn
        
        Private columnjulcrqty As Global.System.Data.DataColumn
        
        Private columnjulcrval As Global.System.Data.DataColumn
        
        Private columnaugdrqty As Global.System.Data.DataColumn
        
        Private columnaugdrval As Global.System.Data.DataColumn
        
        Private columnaugcrqty As Global.System.Data.DataColumn
        
        Private columnaugcrval As Global.System.Data.DataColumn
        
        Private columnsepdrqty As Global.System.Data.DataColumn
        
        Private columnsepdrval As Global.System.Data.DataColumn
        
        Private columnsepcrqty As Global.System.Data.DataColumn
        
        Private columnsepcrval As Global.System.Data.DataColumn
        
        Private columnoctdrqty As Global.System.Data.DataColumn
        
        Private columnoctdrval As Global.System.Data.DataColumn
        
        Private columnoctcrqty As Global.System.Data.DataColumn
        
        Private columnoctcrval As Global.System.Data.DataColumn
        
        Private columnnovcrqty As Global.System.Data.DataColumn
        
        Private columnnovcrval As Global.System.Data.DataColumn
        
        Private columnnovdrqty As Global.System.Data.DataColumn
        
        Private columnnovdrval As Global.System.Data.DataColumn
        
        Private columndecdrqty As Global.System.Data.DataColumn
        
        Private columndecdrval As Global.System.Data.DataColumn
        
        Private columndeccrqty As Global.System.Data.DataColumn
        
        Private columndeccrval As Global.System.Data.DataColumn
        
        Private columnjandrqty As Global.System.Data.DataColumn
        
        Private columnjandrval As Global.System.Data.DataColumn
        
        Private columnjancrqty As Global.System.Data.DataColumn
        
        Private columnjancrval As Global.System.Data.DataColumn
        
        Private columnfebdrqty As Global.System.Data.DataColumn
        
        Private columnfebdrval As Global.System.Data.DataColumn
        
        Private columnfebcrqty As Global.System.Data.DataColumn
        
        Private columnfebcrval As Global.System.Data.DataColumn
        
        Private columnmardrqty As Global.System.Data.DataColumn
        
        Private columnmardrval As Global.System.Data.DataColumn
        
        Private columnmarcrqty As Global.System.Data.DataColumn
        
        Private columnmarcrval As Global.System.Data.DataColumn
        
        Private columnclstock As Global.System.Data.DataColumn
        
        Private columnclvalue As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "INVENTORYITEMMASTER"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property itemcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnitemcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property itemnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnitemname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property aliasColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnalias
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property groupcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columngroupcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property groupnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columngroupname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property subgroupcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsubgroupcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property subgroupnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsubgroupname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property subsubgroupcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsubsubgroupcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property subsubgroupnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsubsubgroupname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property reorderlevelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnreorderlevel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property minqtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnminqty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property maxqtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmaxqty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property valuationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvaluation
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property purchaserateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpurchaserate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property salerateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsalerate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property stockuomColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnstockuom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property receiveuomColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnreceiveuom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property saleuomColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsaleuom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property leadtimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnleadtime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property doubleuomColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndoubleuom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property opstockColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnopstock
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property opvalueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnopvalue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property convvalueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnconvvalue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FreezeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFreeze
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TypeCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTypeCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AdduserColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAdduser
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AdddateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAdddate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STORECODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTORECODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property closingqtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnclosingqty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property closingvalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnclosingval
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property rcptqtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrcptqty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property rcptvalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrcptval
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property issueqtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnissueqty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property issuevalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnissueval
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property abcColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnabc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property fsmColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfsm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property prefixColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprefix
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property wefdateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnwefdate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property stkoptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnstkoption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property binlocationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbinlocation
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property categoryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncategory
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property selectoptColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnselectopt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STARTDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTARTDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PEGSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPEGS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property mlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnml
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PEGSRATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPEGSRATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OPTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOPT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property aprdrqtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnaprdrqty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property aprdrvalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnaprdrval
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property aprcrqtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnaprcrqty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property aprcrvalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnaprcrval
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property maydrqtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmaydrqty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property maydrvalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmaydrval
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property maycrqtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmaycrqty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property maycrvalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmaycrval
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property jundrqtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnjundrqty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property jundrvalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnjundrval
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property juncrqtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnjuncrqty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property juncrvalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnjuncrval
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property juldrqtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnjuldrqty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property juldrvalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnjuldrval
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property julcrqtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnjulcrqty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property julcrvalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnjulcrval
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property augdrqtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnaugdrqty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property augdrvalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnaugdrval
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property augcrqtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnaugcrqty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property augcrvalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnaugcrval
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property sepdrqtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsepdrqty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property sepdrvalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsepdrval
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property sepcrqtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsepcrqty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property sepcrvalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsepcrval
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property octdrqtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnoctdrqty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property octdrvalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnoctdrval
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property octcrqtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnoctcrqty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property octcrvalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnoctcrval
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property novcrqtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnovcrqty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property novcrvalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnovcrval
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property novdrqtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnovdrqty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property novdrvalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnovdrval
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property decdrqtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndecdrqty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property decdrvalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndecdrval
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property deccrqtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndeccrqty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property deccrvalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndeccrval
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property jandrqtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnjandrqty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property jandrvalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnjandrval
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property jancrqtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnjancrqty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property jancrvalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnjancrval
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property febdrqtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfebdrqty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property febdrvalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfebdrval
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property febcrqtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfebcrqty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property febcrvalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfebcrval
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property mardrqtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmardrqty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property mardrvalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmardrval
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property marcrqtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmarcrqty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property marcrvalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmarcrval
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property clstockColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnclstock
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property clvalueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnclvalue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As INVENTORYITEMMASTERRow
            Get
                Return CType(Me.Rows(index),INVENTORYITEMMASTERRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event INVENTORYITEMMASTERRowChanging As INVENTORYITEMMASTERRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event INVENTORYITEMMASTERRowChanged As INVENTORYITEMMASTERRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event INVENTORYITEMMASTERRowDeleting As INVENTORYITEMMASTERRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event INVENTORYITEMMASTERRowDeleted As INVENTORYITEMMASTERRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddINVENTORYITEMMASTERRow(ByVal row As INVENTORYITEMMASTERRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddINVENTORYITEMMASTERRow( _
                    ByVal itemcode As String,  _
                    ByVal itemname As String,  _
                    ByVal _alias As String,  _
                    ByVal groupcode As String,  _
                    ByVal groupname As String,  _
                    ByVal subgroupcode As String,  _
                    ByVal subgroupname As String,  _
                    ByVal subsubgroupcode As String,  _
                    ByVal subsubgroupname As String,  _
                    ByVal reorderlevel As Double,  _
                    ByVal minqty As Double,  _
                    ByVal maxqty As Double,  _
                    ByVal valuation As String,  _
                    ByVal purchaserate As Double,  _
                    ByVal salerate As Double,  _
                    ByVal stockuom As String,  _
                    ByVal receiveuom As String,  _
                    ByVal saleuom As String,  _
                    ByVal leadtime As Decimal,  _
                    ByVal doubleuom As String,  _
                    ByVal opstock As Double,  _
                    ByVal opvalue As Double,  _
                    ByVal convvalue As Double,  _
                    ByVal Freeze As String,  _
                    ByVal TypeCode As String,  _
                    ByVal Adduser As String,  _
                    ByVal Adddate As Date,  _
                    ByVal STORECODE As String,  _
                    ByVal closingqty As Decimal,  _
                    ByVal closingval As Decimal,  _
                    ByVal rcptqty As Decimal,  _
                    ByVal rcptval As Decimal,  _
                    ByVal issueqty As Decimal,  _
                    ByVal issueval As Decimal,  _
                    ByVal abc As String,  _
                    ByVal fsm As String,  _
                    ByVal prefix As String,  _
                    ByVal wefdate As Date,  _
                    ByVal stkoption As String,  _
                    ByVal binlocation As String,  _
                    ByVal category As String,  _
                    ByVal selectopt As String,  _
                    ByVal STARTDATE As Date,  _
                    ByVal PEGS As Decimal,  _
                    ByVal ml As Decimal,  _
                    ByVal PEGSRATE As Decimal,  _
                    ByVal OPT As String,  _
                    ByVal aprdrqty As Decimal,  _
                    ByVal aprdrval As Decimal,  _
                    ByVal aprcrqty As Decimal,  _
                    ByVal aprcrval As Decimal,  _
                    ByVal maydrqty As Decimal,  _
                    ByVal maydrval As Decimal,  _
                    ByVal maycrqty As Decimal,  _
                    ByVal maycrval As Decimal,  _
                    ByVal jundrqty As Decimal,  _
                    ByVal jundrval As Decimal,  _
                    ByVal juncrqty As Decimal,  _
                    ByVal juncrval As Decimal,  _
                    ByVal juldrqty As Decimal,  _
                    ByVal juldrval As Decimal,  _
                    ByVal julcrqty As Decimal,  _
                    ByVal julcrval As Decimal,  _
                    ByVal augdrqty As Decimal,  _
                    ByVal augdrval As Decimal,  _
                    ByVal augcrqty As Decimal,  _
                    ByVal augcrval As Decimal,  _
                    ByVal sepdrqty As Decimal,  _
                    ByVal sepdrval As Decimal,  _
                    ByVal sepcrqty As Decimal,  _
                    ByVal sepcrval As Decimal,  _
                    ByVal octdrqty As Decimal,  _
                    ByVal octdrval As Decimal,  _
                    ByVal octcrqty As Decimal,  _
                    ByVal octcrval As Decimal,  _
                    ByVal novcrqty As Decimal,  _
                    ByVal novcrval As Decimal,  _
                    ByVal novdrqty As Decimal,  _
                    ByVal novdrval As Decimal,  _
                    ByVal decdrqty As Decimal,  _
                    ByVal decdrval As Decimal,  _
                    ByVal deccrqty As Decimal,  _
                    ByVal deccrval As Decimal,  _
                    ByVal jandrqty As Decimal,  _
                    ByVal jandrval As Decimal,  _
                    ByVal jancrqty As Decimal,  _
                    ByVal jancrval As Decimal,  _
                    ByVal febdrqty As Decimal,  _
                    ByVal febdrval As Decimal,  _
                    ByVal febcrqty As Decimal,  _
                    ByVal febcrval As Decimal,  _
                    ByVal mardrqty As Decimal,  _
                    ByVal mardrval As Decimal,  _
                    ByVal marcrqty As Decimal,  _
                    ByVal marcrval As Decimal,  _
                    ByVal clstock As Decimal,  _
                    ByVal clvalue As Decimal) As INVENTORYITEMMASTERRow
            Dim rowINVENTORYITEMMASTERRow As INVENTORYITEMMASTERRow = CType(Me.NewRow,INVENTORYITEMMASTERRow)
            Dim columnValuesArray() As Object = New Object() {itemcode, itemname, _alias, groupcode, groupname, subgroupcode, subgroupname, subsubgroupcode, subsubgroupname, reorderlevel, minqty, maxqty, valuation, purchaserate, salerate, stockuom, receiveuom, saleuom, leadtime, doubleuom, opstock, opvalue, convvalue, Freeze, TypeCode, Adduser, Adddate, STORECODE, closingqty, closingval, rcptqty, rcptval, issueqty, issueval, abc, fsm, prefix, wefdate, stkoption, binlocation, category, selectopt, STARTDATE, PEGS, ml, PEGSRATE, OPT, aprdrqty, aprdrval, aprcrqty, aprcrval, maydrqty, maydrval, maycrqty, maycrval, jundrqty, jundrval, juncrqty, juncrval, juldrqty, juldrval, julcrqty, julcrval, augdrqty, augdrval, augcrqty, augcrval, sepdrqty, sepdrval, sepcrqty, sepcrval, octdrqty, octdrval, octcrqty, octcrval, novcrqty, novcrval, novdrqty, novdrval, decdrqty, decdrval, deccrqty, deccrval, jandrqty, jandrval, jancrqty, jancrval, febdrqty, febdrval, febcrqty, febcrval, mardrqty, mardrval, marcrqty, marcrval, clstock, clvalue}
            rowINVENTORYITEMMASTERRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowINVENTORYITEMMASTERRow)
            Return rowINVENTORYITEMMASTERRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As INVENTORYITEMMASTERDataTable = CType(MyBase.Clone,INVENTORYITEMMASTERDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New INVENTORYITEMMASTERDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnitemcode = MyBase.Columns("itemcode")
            Me.columnitemname = MyBase.Columns("itemname")
            Me.columnalias = MyBase.Columns("alias")
            Me.columngroupcode = MyBase.Columns("groupcode")
            Me.columngroupname = MyBase.Columns("groupname")
            Me.columnsubgroupcode = MyBase.Columns("subgroupcode")
            Me.columnsubgroupname = MyBase.Columns("subgroupname")
            Me.columnsubsubgroupcode = MyBase.Columns("subsubgroupcode")
            Me.columnsubsubgroupname = MyBase.Columns("subsubgroupname")
            Me.columnreorderlevel = MyBase.Columns("reorderlevel")
            Me.columnminqty = MyBase.Columns("minqty")
            Me.columnmaxqty = MyBase.Columns("maxqty")
            Me.columnvaluation = MyBase.Columns("valuation")
            Me.columnpurchaserate = MyBase.Columns("purchaserate")
            Me.columnsalerate = MyBase.Columns("salerate")
            Me.columnstockuom = MyBase.Columns("stockuom")
            Me.columnreceiveuom = MyBase.Columns("receiveuom")
            Me.columnsaleuom = MyBase.Columns("saleuom")
            Me.columnleadtime = MyBase.Columns("leadtime")
            Me.columndoubleuom = MyBase.Columns("doubleuom")
            Me.columnopstock = MyBase.Columns("opstock")
            Me.columnopvalue = MyBase.Columns("opvalue")
            Me.columnconvvalue = MyBase.Columns("convvalue")
            Me.columnFreeze = MyBase.Columns("Freeze")
            Me.columnTypeCode = MyBase.Columns("TypeCode")
            Me.columnAdduser = MyBase.Columns("Adduser")
            Me.columnAdddate = MyBase.Columns("Adddate")
            Me.columnSTORECODE = MyBase.Columns("STORECODE")
            Me.columnclosingqty = MyBase.Columns("closingqty")
            Me.columnclosingval = MyBase.Columns("closingval")
            Me.columnrcptqty = MyBase.Columns("rcptqty")
            Me.columnrcptval = MyBase.Columns("rcptval")
            Me.columnissueqty = MyBase.Columns("issueqty")
            Me.columnissueval = MyBase.Columns("issueval")
            Me.columnabc = MyBase.Columns("abc")
            Me.columnfsm = MyBase.Columns("fsm")
            Me.columnprefix = MyBase.Columns("prefix")
            Me.columnwefdate = MyBase.Columns("wefdate")
            Me.columnstkoption = MyBase.Columns("stkoption")
            Me.columnbinlocation = MyBase.Columns("binlocation")
            Me.columncategory = MyBase.Columns("category")
            Me.columnselectopt = MyBase.Columns("selectopt")
            Me.columnSTARTDATE = MyBase.Columns("STARTDATE")
            Me.columnPEGS = MyBase.Columns("PEGS")
            Me.columnml = MyBase.Columns("ml")
            Me.columnPEGSRATE = MyBase.Columns("PEGSRATE")
            Me.columnOPT = MyBase.Columns("OPT")
            Me.columnaprdrqty = MyBase.Columns("aprdrqty")
            Me.columnaprdrval = MyBase.Columns("aprdrval")
            Me.columnaprcrqty = MyBase.Columns("aprcrqty")
            Me.columnaprcrval = MyBase.Columns("aprcrval")
            Me.columnmaydrqty = MyBase.Columns("maydrqty")
            Me.columnmaydrval = MyBase.Columns("maydrval")
            Me.columnmaycrqty = MyBase.Columns("maycrqty")
            Me.columnmaycrval = MyBase.Columns("maycrval")
            Me.columnjundrqty = MyBase.Columns("jundrqty")
            Me.columnjundrval = MyBase.Columns("jundrval")
            Me.columnjuncrqty = MyBase.Columns("juncrqty")
            Me.columnjuncrval = MyBase.Columns("juncrval")
            Me.columnjuldrqty = MyBase.Columns("juldrqty")
            Me.columnjuldrval = MyBase.Columns("juldrval")
            Me.columnjulcrqty = MyBase.Columns("julcrqty")
            Me.columnjulcrval = MyBase.Columns("julcrval")
            Me.columnaugdrqty = MyBase.Columns("augdrqty")
            Me.columnaugdrval = MyBase.Columns("augdrval")
            Me.columnaugcrqty = MyBase.Columns("augcrqty")
            Me.columnaugcrval = MyBase.Columns("augcrval")
            Me.columnsepdrqty = MyBase.Columns("sepdrqty")
            Me.columnsepdrval = MyBase.Columns("sepdrval")
            Me.columnsepcrqty = MyBase.Columns("sepcrqty")
            Me.columnsepcrval = MyBase.Columns("sepcrval")
            Me.columnoctdrqty = MyBase.Columns("octdrqty")
            Me.columnoctdrval = MyBase.Columns("octdrval")
            Me.columnoctcrqty = MyBase.Columns("octcrqty")
            Me.columnoctcrval = MyBase.Columns("octcrval")
            Me.columnnovcrqty = MyBase.Columns("novcrqty")
            Me.columnnovcrval = MyBase.Columns("novcrval")
            Me.columnnovdrqty = MyBase.Columns("novdrqty")
            Me.columnnovdrval = MyBase.Columns("novdrval")
            Me.columndecdrqty = MyBase.Columns("decdrqty")
            Me.columndecdrval = MyBase.Columns("decdrval")
            Me.columndeccrqty = MyBase.Columns("deccrqty")
            Me.columndeccrval = MyBase.Columns("deccrval")
            Me.columnjandrqty = MyBase.Columns("jandrqty")
            Me.columnjandrval = MyBase.Columns("jandrval")
            Me.columnjancrqty = MyBase.Columns("jancrqty")
            Me.columnjancrval = MyBase.Columns("jancrval")
            Me.columnfebdrqty = MyBase.Columns("febdrqty")
            Me.columnfebdrval = MyBase.Columns("febdrval")
            Me.columnfebcrqty = MyBase.Columns("febcrqty")
            Me.columnfebcrval = MyBase.Columns("febcrval")
            Me.columnmardrqty = MyBase.Columns("mardrqty")
            Me.columnmardrval = MyBase.Columns("mardrval")
            Me.columnmarcrqty = MyBase.Columns("marcrqty")
            Me.columnmarcrval = MyBase.Columns("marcrval")
            Me.columnclstock = MyBase.Columns("clstock")
            Me.columnclvalue = MyBase.Columns("clvalue")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnitemcode = New Global.System.Data.DataColumn("itemcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnitemcode)
            Me.columnitemname = New Global.System.Data.DataColumn("itemname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnitemname)
            Me.columnalias = New Global.System.Data.DataColumn("alias", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me.columnalias.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "aliasColumn")
            Me.columnalias.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnalias")
            Me.columnalias.ExtendedProperties.Add("Generator_UserColumnName", "alias")
            MyBase.Columns.Add(Me.columnalias)
            Me.columngroupcode = New Global.System.Data.DataColumn("groupcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columngroupcode)
            Me.columngroupname = New Global.System.Data.DataColumn("groupname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columngroupname)
            Me.columnsubgroupcode = New Global.System.Data.DataColumn("subgroupcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsubgroupcode)
            Me.columnsubgroupname = New Global.System.Data.DataColumn("subgroupname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsubgroupname)
            Me.columnsubsubgroupcode = New Global.System.Data.DataColumn("subsubgroupcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsubsubgroupcode)
            Me.columnsubsubgroupname = New Global.System.Data.DataColumn("subsubgroupname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsubsubgroupname)
            Me.columnreorderlevel = New Global.System.Data.DataColumn("reorderlevel", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnreorderlevel)
            Me.columnminqty = New Global.System.Data.DataColumn("minqty", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnminqty)
            Me.columnmaxqty = New Global.System.Data.DataColumn("maxqty", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmaxqty)
            Me.columnvaluation = New Global.System.Data.DataColumn("valuation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvaluation)
            Me.columnpurchaserate = New Global.System.Data.DataColumn("purchaserate", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpurchaserate)
            Me.columnsalerate = New Global.System.Data.DataColumn("salerate", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsalerate)
            Me.columnstockuom = New Global.System.Data.DataColumn("stockuom", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstockuom)
            Me.columnreceiveuom = New Global.System.Data.DataColumn("receiveuom", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnreceiveuom)
            Me.columnsaleuom = New Global.System.Data.DataColumn("saleuom", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsaleuom)
            Me.columnleadtime = New Global.System.Data.DataColumn("leadtime", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnleadtime)
            Me.columndoubleuom = New Global.System.Data.DataColumn("doubleuom", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndoubleuom)
            Me.columnopstock = New Global.System.Data.DataColumn("opstock", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnopstock)
            Me.columnopvalue = New Global.System.Data.DataColumn("opvalue", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnopvalue)
            Me.columnconvvalue = New Global.System.Data.DataColumn("convvalue", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnconvvalue)
            Me.columnFreeze = New Global.System.Data.DataColumn("Freeze", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFreeze)
            Me.columnTypeCode = New Global.System.Data.DataColumn("TypeCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTypeCode)
            Me.columnAdduser = New Global.System.Data.DataColumn("Adduser", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAdduser)
            Me.columnAdddate = New Global.System.Data.DataColumn("Adddate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAdddate)
            Me.columnSTORECODE = New Global.System.Data.DataColumn("STORECODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTORECODE)
            Me.columnclosingqty = New Global.System.Data.DataColumn("closingqty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnclosingqty)
            Me.columnclosingval = New Global.System.Data.DataColumn("closingval", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnclosingval)
            Me.columnrcptqty = New Global.System.Data.DataColumn("rcptqty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrcptqty)
            Me.columnrcptval = New Global.System.Data.DataColumn("rcptval", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrcptval)
            Me.columnissueqty = New Global.System.Data.DataColumn("issueqty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnissueqty)
            Me.columnissueval = New Global.System.Data.DataColumn("issueval", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnissueval)
            Me.columnabc = New Global.System.Data.DataColumn("abc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnabc)
            Me.columnfsm = New Global.System.Data.DataColumn("fsm", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfsm)
            Me.columnprefix = New Global.System.Data.DataColumn("prefix", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprefix)
            Me.columnwefdate = New Global.System.Data.DataColumn("wefdate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwefdate)
            Me.columnstkoption = New Global.System.Data.DataColumn("stkoption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstkoption)
            Me.columnbinlocation = New Global.System.Data.DataColumn("binlocation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbinlocation)
            Me.columncategory = New Global.System.Data.DataColumn("category", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncategory)
            Me.columnselectopt = New Global.System.Data.DataColumn("selectopt", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnselectopt)
            Me.columnSTARTDATE = New Global.System.Data.DataColumn("STARTDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTARTDATE)
            Me.columnPEGS = New Global.System.Data.DataColumn("PEGS", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPEGS)
            Me.columnml = New Global.System.Data.DataColumn("ml", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnml)
            Me.columnPEGSRATE = New Global.System.Data.DataColumn("PEGSRATE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPEGSRATE)
            Me.columnOPT = New Global.System.Data.DataColumn("OPT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOPT)
            Me.columnaprdrqty = New Global.System.Data.DataColumn("aprdrqty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaprdrqty)
            Me.columnaprdrval = New Global.System.Data.DataColumn("aprdrval", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaprdrval)
            Me.columnaprcrqty = New Global.System.Data.DataColumn("aprcrqty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaprcrqty)
            Me.columnaprcrval = New Global.System.Data.DataColumn("aprcrval", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaprcrval)
            Me.columnmaydrqty = New Global.System.Data.DataColumn("maydrqty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmaydrqty)
            Me.columnmaydrval = New Global.System.Data.DataColumn("maydrval", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmaydrval)
            Me.columnmaycrqty = New Global.System.Data.DataColumn("maycrqty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmaycrqty)
            Me.columnmaycrval = New Global.System.Data.DataColumn("maycrval", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmaycrval)
            Me.columnjundrqty = New Global.System.Data.DataColumn("jundrqty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnjundrqty)
            Me.columnjundrval = New Global.System.Data.DataColumn("jundrval", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnjundrval)
            Me.columnjuncrqty = New Global.System.Data.DataColumn("juncrqty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnjuncrqty)
            Me.columnjuncrval = New Global.System.Data.DataColumn("juncrval", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnjuncrval)
            Me.columnjuldrqty = New Global.System.Data.DataColumn("juldrqty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnjuldrqty)
            Me.columnjuldrval = New Global.System.Data.DataColumn("juldrval", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnjuldrval)
            Me.columnjulcrqty = New Global.System.Data.DataColumn("julcrqty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnjulcrqty)
            Me.columnjulcrval = New Global.System.Data.DataColumn("julcrval", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnjulcrval)
            Me.columnaugdrqty = New Global.System.Data.DataColumn("augdrqty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaugdrqty)
            Me.columnaugdrval = New Global.System.Data.DataColumn("augdrval", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaugdrval)
            Me.columnaugcrqty = New Global.System.Data.DataColumn("augcrqty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaugcrqty)
            Me.columnaugcrval = New Global.System.Data.DataColumn("augcrval", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaugcrval)
            Me.columnsepdrqty = New Global.System.Data.DataColumn("sepdrqty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsepdrqty)
            Me.columnsepdrval = New Global.System.Data.DataColumn("sepdrval", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsepdrval)
            Me.columnsepcrqty = New Global.System.Data.DataColumn("sepcrqty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsepcrqty)
            Me.columnsepcrval = New Global.System.Data.DataColumn("sepcrval", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsepcrval)
            Me.columnoctdrqty = New Global.System.Data.DataColumn("octdrqty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnoctdrqty)
            Me.columnoctdrval = New Global.System.Data.DataColumn("octdrval", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnoctdrval)
            Me.columnoctcrqty = New Global.System.Data.DataColumn("octcrqty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnoctcrqty)
            Me.columnoctcrval = New Global.System.Data.DataColumn("octcrval", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnoctcrval)
            Me.columnnovcrqty = New Global.System.Data.DataColumn("novcrqty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnovcrqty)
            Me.columnnovcrval = New Global.System.Data.DataColumn("novcrval", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnovcrval)
            Me.columnnovdrqty = New Global.System.Data.DataColumn("novdrqty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnovdrqty)
            Me.columnnovdrval = New Global.System.Data.DataColumn("novdrval", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnovdrval)
            Me.columndecdrqty = New Global.System.Data.DataColumn("decdrqty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndecdrqty)
            Me.columndecdrval = New Global.System.Data.DataColumn("decdrval", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndecdrval)
            Me.columndeccrqty = New Global.System.Data.DataColumn("deccrqty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndeccrqty)
            Me.columndeccrval = New Global.System.Data.DataColumn("deccrval", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndeccrval)
            Me.columnjandrqty = New Global.System.Data.DataColumn("jandrqty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnjandrqty)
            Me.columnjandrval = New Global.System.Data.DataColumn("jandrval", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnjandrval)
            Me.columnjancrqty = New Global.System.Data.DataColumn("jancrqty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnjancrqty)
            Me.columnjancrval = New Global.System.Data.DataColumn("jancrval", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnjancrval)
            Me.columnfebdrqty = New Global.System.Data.DataColumn("febdrqty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfebdrqty)
            Me.columnfebdrval = New Global.System.Data.DataColumn("febdrval", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfebdrval)
            Me.columnfebcrqty = New Global.System.Data.DataColumn("febcrqty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfebcrqty)
            Me.columnfebcrval = New Global.System.Data.DataColumn("febcrval", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfebcrval)
            Me.columnmardrqty = New Global.System.Data.DataColumn("mardrqty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmardrqty)
            Me.columnmardrval = New Global.System.Data.DataColumn("mardrval", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmardrval)
            Me.columnmarcrqty = New Global.System.Data.DataColumn("marcrqty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmarcrqty)
            Me.columnmarcrval = New Global.System.Data.DataColumn("marcrval", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmarcrval)
            Me.columnclstock = New Global.System.Data.DataColumn("clstock", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnclstock)
            Me.columnclvalue = New Global.System.Data.DataColumn("clvalue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnclvalue)
            Me.columnitemcode.AllowDBNull = false
            Me.columnitemname.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewINVENTORYITEMMASTERRow() As INVENTORYITEMMASTERRow
            Return CType(Me.NewRow,INVENTORYITEMMASTERRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New INVENTORYITEMMASTERRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(INVENTORYITEMMASTERRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.INVENTORYITEMMASTERRowChangedEvent) Is Nothing) Then
                RaiseEvent INVENTORYITEMMASTERRowChanged(Me, New INVENTORYITEMMASTERRowChangeEvent(CType(e.Row,INVENTORYITEMMASTERRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.INVENTORYITEMMASTERRowChangingEvent) Is Nothing) Then
                RaiseEvent INVENTORYITEMMASTERRowChanging(Me, New INVENTORYITEMMASTERRowChangeEvent(CType(e.Row,INVENTORYITEMMASTERRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.INVENTORYITEMMASTERRowDeletedEvent) Is Nothing) Then
                RaiseEvent INVENTORYITEMMASTERRowDeleted(Me, New INVENTORYITEMMASTERRowChangeEvent(CType(e.Row,INVENTORYITEMMASTERRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.INVENTORYITEMMASTERRowDeletingEvent) Is Nothing) Then
                RaiseEvent INVENTORYITEMMASTERRowDeleting(Me, New INVENTORYITEMMASTERRowChangeEvent(CType(e.Row,INVENTORYITEMMASTERRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveINVENTORYITEMMASTERRow(ByVal row As INVENTORYITEMMASTERRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As Dataset1 = New Dataset1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "INVENTORYITEMMASTERDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PO_VIEW_VENDORMASTERDataTable
        Inherits Global.System.Data.TypedTableBase(Of PO_VIEW_VENDORMASTERRow)
        
        Private columnvendorcode As Global.System.Data.DataColumn
        
        Private columnvendorname As Global.System.Data.DataColumn
        
        Private columnaddress As Global.System.Data.DataColumn
        
        Private columncity As Global.System.Data.DataColumn
        
        Private columnstate As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "PO_VIEW_VENDORMASTER"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property vendorcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvendorcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property vendornameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvendorname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property addressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnaddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property cityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property stateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnstate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PO_VIEW_VENDORMASTERRow
            Get
                Return CType(Me.Rows(index),PO_VIEW_VENDORMASTERRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PO_VIEW_VENDORMASTERRowChanging As PO_VIEW_VENDORMASTERRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PO_VIEW_VENDORMASTERRowChanged As PO_VIEW_VENDORMASTERRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PO_VIEW_VENDORMASTERRowDeleting As PO_VIEW_VENDORMASTERRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PO_VIEW_VENDORMASTERRowDeleted As PO_VIEW_VENDORMASTERRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddPO_VIEW_VENDORMASTERRow(ByVal row As PO_VIEW_VENDORMASTERRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddPO_VIEW_VENDORMASTERRow(ByVal vendorcode As String, ByVal vendorname As String, ByVal address As String, ByVal city As String, ByVal state As String) As PO_VIEW_VENDORMASTERRow
            Dim rowPO_VIEW_VENDORMASTERRow As PO_VIEW_VENDORMASTERRow = CType(Me.NewRow,PO_VIEW_VENDORMASTERRow)
            Dim columnValuesArray() As Object = New Object() {vendorcode, vendorname, address, city, state}
            rowPO_VIEW_VENDORMASTERRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPO_VIEW_VENDORMASTERRow)
            Return rowPO_VIEW_VENDORMASTERRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PO_VIEW_VENDORMASTERDataTable = CType(MyBase.Clone,PO_VIEW_VENDORMASTERDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PO_VIEW_VENDORMASTERDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnvendorcode = MyBase.Columns("vendorcode")
            Me.columnvendorname = MyBase.Columns("vendorname")
            Me.columnaddress = MyBase.Columns("address")
            Me.columncity = MyBase.Columns("city")
            Me.columnstate = MyBase.Columns("state")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnvendorcode = New Global.System.Data.DataColumn("vendorcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvendorcode)
            Me.columnvendorname = New Global.System.Data.DataColumn("vendorname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvendorname)
            Me.columnaddress = New Global.System.Data.DataColumn("address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaddress)
            Me.columncity = New Global.System.Data.DataColumn("city", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncity)
            Me.columnstate = New Global.System.Data.DataColumn("state", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstate)
            Me.columnvendorcode.AllowDBNull = false
            Me.columnvendorname.AllowDBNull = false
            Me.columnaddress.AllowDBNull = false
            Me.columncity.AllowDBNull = false
            Me.columnstate.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewPO_VIEW_VENDORMASTERRow() As PO_VIEW_VENDORMASTERRow
            Return CType(Me.NewRow,PO_VIEW_VENDORMASTERRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PO_VIEW_VENDORMASTERRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PO_VIEW_VENDORMASTERRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PO_VIEW_VENDORMASTERRowChangedEvent) Is Nothing) Then
                RaiseEvent PO_VIEW_VENDORMASTERRowChanged(Me, New PO_VIEW_VENDORMASTERRowChangeEvent(CType(e.Row,PO_VIEW_VENDORMASTERRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PO_VIEW_VENDORMASTERRowChangingEvent) Is Nothing) Then
                RaiseEvent PO_VIEW_VENDORMASTERRowChanging(Me, New PO_VIEW_VENDORMASTERRowChangeEvent(CType(e.Row,PO_VIEW_VENDORMASTERRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PO_VIEW_VENDORMASTERRowDeletedEvent) Is Nothing) Then
                RaiseEvent PO_VIEW_VENDORMASTERRowDeleted(Me, New PO_VIEW_VENDORMASTERRowChangeEvent(CType(e.Row,PO_VIEW_VENDORMASTERRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PO_VIEW_VENDORMASTERRowDeletingEvent) Is Nothing) Then
                RaiseEvent PO_VIEW_VENDORMASTERRowDeleting(Me, New PO_VIEW_VENDORMASTERRowChangeEvent(CType(e.Row,PO_VIEW_VENDORMASTERRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovePO_VIEW_VENDORMASTERRow(ByVal row As PO_VIEW_VENDORMASTERRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As Dataset1 = New Dataset1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PO_VIEW_VENDORMASTERDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class INV_PENDING_PURCHASEDataTable
        Inherits Global.System.Data.TypedTableBase(Of INV_PENDING_PURCHASERow)
        
        Private columnpono As Global.System.Data.DataColumn
        
        Private columnpodate As Global.System.Data.DataColumn
        
        Private columnpodepartment As Global.System.Data.DataColumn
        
        Private columnpovendorcode As Global.System.Data.DataColumn
        
        Private columnitemcode As Global.System.Data.DataColumn
        
        Private columnITEMNAME As Global.System.Data.DataColumn
        
        Private columnquantity As Global.System.Data.DataColumn
        
        Private columnrate As Global.System.Data.DataColumn
        
        Private columnamount As Global.System.Data.DataColumn
        
        Private columnvatamt As Global.System.Data.DataColumn
        
        Private columndiscamt As Global.System.Data.DataColumn
        
        Private columnVENDORNAME As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "INV_PENDING_PURCHASE"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ponoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpono
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property podateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpodate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property podepartmentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpodepartment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property povendorcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpovendorcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property itemcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnitemcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ITEMNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEMNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property quantityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnquantity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property rateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property amountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnamount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property vatamtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvatamt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property discamtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndiscamt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VENDORNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVENDORNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As INV_PENDING_PURCHASERow
            Get
                Return CType(Me.Rows(index),INV_PENDING_PURCHASERow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event INV_PENDING_PURCHASERowChanging As INV_PENDING_PURCHASERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event INV_PENDING_PURCHASERowChanged As INV_PENDING_PURCHASERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event INV_PENDING_PURCHASERowDeleting As INV_PENDING_PURCHASERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event INV_PENDING_PURCHASERowDeleted As INV_PENDING_PURCHASERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddINV_PENDING_PURCHASERow(ByVal row As INV_PENDING_PURCHASERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddINV_PENDING_PURCHASERow(ByVal pono As String, ByVal podate As Date, ByVal podepartment As String, ByVal povendorcode As String, ByVal itemcode As String, ByVal ITEMNAME As String, ByVal quantity As Decimal, ByVal rate As Decimal, ByVal amount As Decimal, ByVal vatamt As Decimal, ByVal discamt As Decimal, ByVal VENDORNAME As String) As INV_PENDING_PURCHASERow
            Dim rowINV_PENDING_PURCHASERow As INV_PENDING_PURCHASERow = CType(Me.NewRow,INV_PENDING_PURCHASERow)
            Dim columnValuesArray() As Object = New Object() {pono, podate, podepartment, povendorcode, itemcode, ITEMNAME, quantity, rate, amount, vatamt, discamt, VENDORNAME}
            rowINV_PENDING_PURCHASERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowINV_PENDING_PURCHASERow)
            Return rowINV_PENDING_PURCHASERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As INV_PENDING_PURCHASEDataTable = CType(MyBase.Clone,INV_PENDING_PURCHASEDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New INV_PENDING_PURCHASEDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnpono = MyBase.Columns("pono")
            Me.columnpodate = MyBase.Columns("podate")
            Me.columnpodepartment = MyBase.Columns("podepartment")
            Me.columnpovendorcode = MyBase.Columns("povendorcode")
            Me.columnitemcode = MyBase.Columns("itemcode")
            Me.columnITEMNAME = MyBase.Columns("ITEMNAME")
            Me.columnquantity = MyBase.Columns("quantity")
            Me.columnrate = MyBase.Columns("rate")
            Me.columnamount = MyBase.Columns("amount")
            Me.columnvatamt = MyBase.Columns("vatamt")
            Me.columndiscamt = MyBase.Columns("discamt")
            Me.columnVENDORNAME = MyBase.Columns("VENDORNAME")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnpono = New Global.System.Data.DataColumn("pono", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpono)
            Me.columnpodate = New Global.System.Data.DataColumn("podate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpodate)
            Me.columnpodepartment = New Global.System.Data.DataColumn("podepartment", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpodepartment)
            Me.columnpovendorcode = New Global.System.Data.DataColumn("povendorcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpovendorcode)
            Me.columnitemcode = New Global.System.Data.DataColumn("itemcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnitemcode)
            Me.columnITEMNAME = New Global.System.Data.DataColumn("ITEMNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEMNAME)
            Me.columnquantity = New Global.System.Data.DataColumn("quantity", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnquantity)
            Me.columnrate = New Global.System.Data.DataColumn("rate", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrate)
            Me.columnamount = New Global.System.Data.DataColumn("amount", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnamount)
            Me.columnvatamt = New Global.System.Data.DataColumn("vatamt", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvatamt)
            Me.columndiscamt = New Global.System.Data.DataColumn("discamt", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscamt)
            Me.columnVENDORNAME = New Global.System.Data.DataColumn("VENDORNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVENDORNAME)
            Me.columnITEMNAME.AllowDBNull = false
            Me.columnVENDORNAME.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewINV_PENDING_PURCHASERow() As INV_PENDING_PURCHASERow
            Return CType(Me.NewRow,INV_PENDING_PURCHASERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New INV_PENDING_PURCHASERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(INV_PENDING_PURCHASERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.INV_PENDING_PURCHASERowChangedEvent) Is Nothing) Then
                RaiseEvent INV_PENDING_PURCHASERowChanged(Me, New INV_PENDING_PURCHASERowChangeEvent(CType(e.Row,INV_PENDING_PURCHASERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.INV_PENDING_PURCHASERowChangingEvent) Is Nothing) Then
                RaiseEvent INV_PENDING_PURCHASERowChanging(Me, New INV_PENDING_PURCHASERowChangeEvent(CType(e.Row,INV_PENDING_PURCHASERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.INV_PENDING_PURCHASERowDeletedEvent) Is Nothing) Then
                RaiseEvent INV_PENDING_PURCHASERowDeleted(Me, New INV_PENDING_PURCHASERowChangeEvent(CType(e.Row,INV_PENDING_PURCHASERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.INV_PENDING_PURCHASERowDeletingEvent) Is Nothing) Then
                RaiseEvent INV_PENDING_PURCHASERowDeleting(Me, New INV_PENDING_PURCHASERowChangeEvent(CType(e.Row,INV_PENDING_PURCHASERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveINV_PENDING_PURCHASERow(ByVal row As INV_PENDING_PURCHASERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As Dataset1 = New Dataset1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "INV_PENDING_PURCHASEDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class VIEW_FOCREPORTDataTable
        Inherits Global.System.Data.TypedTableBase(Of VIEW_FOCREPORTRow)
        
        Private columnCOMPANYCODE As Global.System.Data.DataColumn
        
        Private columnCOMPANYNAME As Global.System.Data.DataColumn
        
        Private columnGRNDETAILS As Global.System.Data.DataColumn
        
        Private columnGRNDATE As Global.System.Data.DataColumn
        
        Private columnITEMCODE As Global.System.Data.DataColumn
        
        Private columnITEMNAME As Global.System.Data.DataColumn
        
        Private columnQTY As Global.System.Data.DataColumn
        
        Private columnRATE As Global.System.Data.DataColumn
        
        Private columnVALUE As Global.System.Data.DataColumn
        
        Private columnFOCFLAG As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "VIEW_FOCREPORT"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COMPANYCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMPANYCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COMPANYNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMPANYNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GRNDETAILSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGRNDETAILS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GRNDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGRNDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ITEMCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEMCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ITEMNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEMNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VALUEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVALUE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FOCFLAGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFOCFLAG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As VIEW_FOCREPORTRow
            Get
                Return CType(Me.Rows(index),VIEW_FOCREPORTRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VIEW_FOCREPORTRowChanging As VIEW_FOCREPORTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VIEW_FOCREPORTRowChanged As VIEW_FOCREPORTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VIEW_FOCREPORTRowDeleting As VIEW_FOCREPORTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VIEW_FOCREPORTRowDeleted As VIEW_FOCREPORTRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddVIEW_FOCREPORTRow(ByVal row As VIEW_FOCREPORTRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddVIEW_FOCREPORTRow(ByVal COMPANYCODE As String, ByVal COMPANYNAME As String, ByVal GRNDETAILS As String, ByVal GRNDATE As Date, ByVal ITEMCODE As String, ByVal ITEMNAME As String, ByVal QTY As Decimal, ByVal RATE As Decimal, ByVal VALUE As Decimal, ByVal FOCFLAG As String) As VIEW_FOCREPORTRow
            Dim rowVIEW_FOCREPORTRow As VIEW_FOCREPORTRow = CType(Me.NewRow,VIEW_FOCREPORTRow)
            Dim columnValuesArray() As Object = New Object() {COMPANYCODE, COMPANYNAME, GRNDETAILS, GRNDATE, ITEMCODE, ITEMNAME, QTY, RATE, VALUE, FOCFLAG}
            rowVIEW_FOCREPORTRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowVIEW_FOCREPORTRow)
            Return rowVIEW_FOCREPORTRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As VIEW_FOCREPORTDataTable = CType(MyBase.Clone,VIEW_FOCREPORTDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New VIEW_FOCREPORTDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCOMPANYCODE = MyBase.Columns("COMPANYCODE")
            Me.columnCOMPANYNAME = MyBase.Columns("COMPANYNAME")
            Me.columnGRNDETAILS = MyBase.Columns("GRNDETAILS")
            Me.columnGRNDATE = MyBase.Columns("GRNDATE")
            Me.columnITEMCODE = MyBase.Columns("ITEMCODE")
            Me.columnITEMNAME = MyBase.Columns("ITEMNAME")
            Me.columnQTY = MyBase.Columns("QTY")
            Me.columnRATE = MyBase.Columns("RATE")
            Me.columnVALUE = MyBase.Columns("VALUE")
            Me.columnFOCFLAG = MyBase.Columns("FOCFLAG")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCOMPANYCODE = New Global.System.Data.DataColumn("COMPANYCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMPANYCODE)
            Me.columnCOMPANYNAME = New Global.System.Data.DataColumn("COMPANYNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMPANYNAME)
            Me.columnGRNDETAILS = New Global.System.Data.DataColumn("GRNDETAILS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGRNDETAILS)
            Me.columnGRNDATE = New Global.System.Data.DataColumn("GRNDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGRNDATE)
            Me.columnITEMCODE = New Global.System.Data.DataColumn("ITEMCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEMCODE)
            Me.columnITEMNAME = New Global.System.Data.DataColumn("ITEMNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEMNAME)
            Me.columnQTY = New Global.System.Data.DataColumn("QTY", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQTY)
            Me.columnRATE = New Global.System.Data.DataColumn("RATE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRATE)
            Me.columnVALUE = New Global.System.Data.DataColumn("VALUE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVALUE)
            Me.columnFOCFLAG = New Global.System.Data.DataColumn("FOCFLAG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFOCFLAG)
            Me.columnFOCFLAG.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewVIEW_FOCREPORTRow() As VIEW_FOCREPORTRow
            Return CType(Me.NewRow,VIEW_FOCREPORTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New VIEW_FOCREPORTRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(VIEW_FOCREPORTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.VIEW_FOCREPORTRowChangedEvent) Is Nothing) Then
                RaiseEvent VIEW_FOCREPORTRowChanged(Me, New VIEW_FOCREPORTRowChangeEvent(CType(e.Row,VIEW_FOCREPORTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.VIEW_FOCREPORTRowChangingEvent) Is Nothing) Then
                RaiseEvent VIEW_FOCREPORTRowChanging(Me, New VIEW_FOCREPORTRowChangeEvent(CType(e.Row,VIEW_FOCREPORTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.VIEW_FOCREPORTRowDeletedEvent) Is Nothing) Then
                RaiseEvent VIEW_FOCREPORTRowDeleted(Me, New VIEW_FOCREPORTRowChangeEvent(CType(e.Row,VIEW_FOCREPORTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.VIEW_FOCREPORTRowDeletingEvent) Is Nothing) Then
                RaiseEvent VIEW_FOCREPORTRowDeleting(Me, New VIEW_FOCREPORTRowChangeEvent(CType(e.Row,VIEW_FOCREPORTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveVIEW_FOCREPORTRow(ByVal row As VIEW_FOCREPORTRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As Dataset1 = New Dataset1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "VIEW_FOCREPORTDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Inv_ExiseRptDataTable
        Inherits Global.System.Data.TypedTableBase(Of Inv_ExiseRptRow)
        
        Private columnGROUPNAME As Global.System.Data.DataColumn
        
        Private columnSUBGROUPNAME As Global.System.Data.DataColumn
        
        Private columnOPqty As Global.System.Data.DataColumn
        
        Private columnrecQty As Global.System.Data.DataColumn
        
        Private columnTotal As Global.System.Data.DataColumn
        
        Private columnSales As Global.System.Data.DataColumn
        
        Private columnISSUE As Global.System.Data.DataColumn
        
        Private columnClosing As Global.System.Data.DataColumn
        
        Private columnpriority As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Inv_ExiseRpt"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GROUPNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGROUPNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SUBGROUPNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUBGROUPNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OPqtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOPqty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property recQtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrecQty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SalesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSales
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ISSUEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnISSUE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ClosingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClosing
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property priorityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpriority
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Inv_ExiseRptRow
            Get
                Return CType(Me.Rows(index),Inv_ExiseRptRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Inv_ExiseRptRowChanging As Inv_ExiseRptRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Inv_ExiseRptRowChanged As Inv_ExiseRptRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Inv_ExiseRptRowDeleting As Inv_ExiseRptRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Inv_ExiseRptRowDeleted As Inv_ExiseRptRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddInv_ExiseRptRow(ByVal row As Inv_ExiseRptRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddInv_ExiseRptRow(ByVal GROUPNAME As String, ByVal SUBGROUPNAME As String, ByVal OPqty As Decimal, ByVal recQty As Decimal, ByVal Total As Decimal, ByVal Sales As Decimal, ByVal ISSUE As Decimal, ByVal Closing As Decimal, ByVal priority As Integer) As Inv_ExiseRptRow
            Dim rowInv_ExiseRptRow As Inv_ExiseRptRow = CType(Me.NewRow,Inv_ExiseRptRow)
            Dim columnValuesArray() As Object = New Object() {GROUPNAME, SUBGROUPNAME, OPqty, recQty, Total, Sales, ISSUE, Closing, priority}
            rowInv_ExiseRptRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowInv_ExiseRptRow)
            Return rowInv_ExiseRptRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Inv_ExiseRptDataTable = CType(MyBase.Clone,Inv_ExiseRptDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Inv_ExiseRptDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnGROUPNAME = MyBase.Columns("GROUPNAME")
            Me.columnSUBGROUPNAME = MyBase.Columns("SUBGROUPNAME")
            Me.columnOPqty = MyBase.Columns("OPqty")
            Me.columnrecQty = MyBase.Columns("recQty")
            Me.columnTotal = MyBase.Columns("Total")
            Me.columnSales = MyBase.Columns("Sales")
            Me.columnISSUE = MyBase.Columns("ISSUE")
            Me.columnClosing = MyBase.Columns("Closing")
            Me.columnpriority = MyBase.Columns("priority")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnGROUPNAME = New Global.System.Data.DataColumn("GROUPNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGROUPNAME)
            Me.columnSUBGROUPNAME = New Global.System.Data.DataColumn("SUBGROUPNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUBGROUPNAME)
            Me.columnOPqty = New Global.System.Data.DataColumn("OPqty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOPqty)
            Me.columnrecQty = New Global.System.Data.DataColumn("recQty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrecQty)
            Me.columnTotal = New Global.System.Data.DataColumn("Total", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal)
            Me.columnSales = New Global.System.Data.DataColumn("Sales", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSales)
            Me.columnISSUE = New Global.System.Data.DataColumn("ISSUE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnISSUE)
            Me.columnClosing = New Global.System.Data.DataColumn("Closing", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClosing)
            Me.columnpriority = New Global.System.Data.DataColumn("priority", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpriority)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewInv_ExiseRptRow() As Inv_ExiseRptRow
            Return CType(Me.NewRow,Inv_ExiseRptRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Inv_ExiseRptRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Inv_ExiseRptRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Inv_ExiseRptRowChangedEvent) Is Nothing) Then
                RaiseEvent Inv_ExiseRptRowChanged(Me, New Inv_ExiseRptRowChangeEvent(CType(e.Row,Inv_ExiseRptRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Inv_ExiseRptRowChangingEvent) Is Nothing) Then
                RaiseEvent Inv_ExiseRptRowChanging(Me, New Inv_ExiseRptRowChangeEvent(CType(e.Row,Inv_ExiseRptRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Inv_ExiseRptRowDeletedEvent) Is Nothing) Then
                RaiseEvent Inv_ExiseRptRowDeleted(Me, New Inv_ExiseRptRowChangeEvent(CType(e.Row,Inv_ExiseRptRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Inv_ExiseRptRowDeletingEvent) Is Nothing) Then
                RaiseEvent Inv_ExiseRptRowDeleting(Me, New Inv_ExiseRptRowChangeEvent(CType(e.Row,Inv_ExiseRptRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveInv_ExiseRptRow(ByVal row As Inv_ExiseRptRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As Dataset1 = New Dataset1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Inv_ExiseRptDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class VIEWPURCHASEREGISTERSUMMARYRow
        Inherits Global.System.Data.DataRow
        
        Private tableVIEWPURCHASEREGISTERSUMMARY As VIEWPURCHASEREGISTERSUMMARYDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVIEWPURCHASEREGISTERSUMMARY = CType(Me.Table,VIEWPURCHASEREGISTERSUMMARYDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GRNDETAILS() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.GRNDETAILSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GRNDETAILS' in table 'VIEWPURCHASEREGISTERSUMMARY' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.GRNDETAILSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GRNDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.GRNDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GRNDATE' in table 'VIEWPURCHASEREGISTERSUMMARY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.GRNDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SUPPLIERCODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.SUPPLIERCODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUPPLIERCODE' in table 'VIEWPURCHASEREGISTERSUMMARY' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.SUPPLIERCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SUPPLIERNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.SUPPLIERNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUPPLIERNAME' in table 'VIEWPURCHASEREGISTERSUMMARY' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.SUPPLIERNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GLACCOUNTCODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.GLACCOUNTCODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GLACCOUNTCODE' in table 'VIEWPURCHASEREGISTERSUMMARY' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.GLACCOUNTCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GLACCOUNTNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.GLACCOUNTNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GLACCOUNTNAME' in table 'VIEWPURCHASEREGISTERSUMMARY' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.GLACCOUNTNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TOTALAMOUNT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.TOTALAMOUNTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOTALAMOUNT' in table 'VIEWPURCHASEREGISTERSUMMARY' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.TOTALAMOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VATAMOUNT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.VATAMOUNTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VATAMOUNT' in table 'VIEWPURCHASEREGISTERSUMMARY' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.VATAMOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SURCHARGEAMT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.SURCHARGEAMTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SURCHARGEAMT' in table 'VIEWPURCHASEREGISTERSUMMARY' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.SURCHARGEAMTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DISCOUNTAMOUNT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.DISCOUNTAMOUNTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DISCOUNTAMOUNT' in table 'VIEWPURCHASEREGISTERSUMMARY' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.DISCOUNTAMOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BILLAMOUNT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.BILLAMOUNTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BILLAMOUNT' in table 'VIEWPURCHASEREGISTERSUMMARY' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.BILLAMOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ITEMCODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.ITEMCODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ITEMCODE' in table 'VIEWPURCHASEREGISTERSUMMARY' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.ITEMCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ITEMNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.ITEMNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ITEMNAME' in table 'VIEWPURCHASEREGISTERSUMMARY' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.ITEMNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UOM() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.UOMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UOM' in table 'VIEWPURCHASEREGISTERSUMMARY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.UOMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QTY() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.QTYColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QTY' in table 'VIEWPURCHASEREGISTERSUMMARY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.QTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RATE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.RATEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RATE' in table 'VIEWPURCHASEREGISTERSUMMARY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.RATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DISCOUNT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.DISCOUNTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DISCOUNT' in table 'VIEWPURCHASEREGISTERSUMMARY' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.DISCOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SGSTAMT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.SGSTAMTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SGSTAMT' in table 'VIEWPURCHASEREGISTERSUMMARY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.SGSTAMTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CGSTAMT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.CGSTAMTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CGSTAMT' in table 'VIEWPURCHASEREGISTERSUMMARY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.CGSTAMTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IGSTAMT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.IGSTAMTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IGSTAMT' in table 'VIEWPURCHASEREGISTERSUMMARY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.IGSTAMTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PODATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.PODATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PODATE' in table 'VIEWPURCHASEREGISTERSUMMARY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.PODATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AMOUNT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.AMOUNTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AMOUNT' in table 'VIEWPURCHASEREGISTERSUMMARY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.AMOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OTHCHARGE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.OTHCHARGEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OTHCHARGE' in table 'VIEWPURCHASEREGISTERSUMMARY' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.OTHCHARGEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property adddate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.adddateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'adddate' in table 'VIEWPURCHASEREGISTERSUMMARY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.adddateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AVOUCHERNO() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.AVOUCHERNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AVOUCHERNO' in table 'VIEWPURCHASEREGISTERSUMMARY' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.AVOUCHERNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AVOUCHERDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.AVOUCHERDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AVOUCHERDATE' in table 'VIEWPURCHASEREGISTERSUMMARY' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.AVOUCHERDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ADJUSTEDAMOUNT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.ADJUSTEDAMOUNTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADJUSTEDAMOUNT' in table 'VIEWPURCHASEREGISTERSUMMARY' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.ADJUSTEDAMOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property POSTING() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.POSTINGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POSTING' in table 'VIEWPURCHASEREGISTERSUMMARY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.POSTINGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PONO() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.PONOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PONO' in table 'VIEWPURCHASEREGISTERSUMMARY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.PONOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Supplierinvno() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.SupplierinvnoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Supplierinvno' in table 'VIEWPURCHASEREGISTERSUMMARY' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.SupplierinvnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OVERALLDISCOUNT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.OVERALLDISCOUNTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OVERALLDISCOUNT' in table 'VIEWPURCHASEREGISTERSUMMARY' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.OVERALLDISCOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TAXAMOUNT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.TAXAMOUNTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TAXAMOUNT' in table 'VIEWPURCHASEREGISTERSUMMARY' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.TAXAMOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STOREDESC() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.STOREDESCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STOREDESC' in table 'VIEWPURCHASEREGISTERSUMMARY' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.STOREDESCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGRNDETAILSNull() As Boolean
            Return Me.IsNull(Me.tableVIEWPURCHASEREGISTERSUMMARY.GRNDETAILSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGRNDETAILSNull()
            Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.GRNDETAILSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGRNDATENull() As Boolean
            Return Me.IsNull(Me.tableVIEWPURCHASEREGISTERSUMMARY.GRNDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGRNDATENull()
            Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.GRNDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSUPPLIERCODENull() As Boolean
            Return Me.IsNull(Me.tableVIEWPURCHASEREGISTERSUMMARY.SUPPLIERCODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSUPPLIERCODENull()
            Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.SUPPLIERCODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSUPPLIERNAMENull() As Boolean
            Return Me.IsNull(Me.tableVIEWPURCHASEREGISTERSUMMARY.SUPPLIERNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSUPPLIERNAMENull()
            Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.SUPPLIERNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGLACCOUNTCODENull() As Boolean
            Return Me.IsNull(Me.tableVIEWPURCHASEREGISTERSUMMARY.GLACCOUNTCODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGLACCOUNTCODENull()
            Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.GLACCOUNTCODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGLACCOUNTNAMENull() As Boolean
            Return Me.IsNull(Me.tableVIEWPURCHASEREGISTERSUMMARY.GLACCOUNTNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGLACCOUNTNAMENull()
            Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.GLACCOUNTNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTOTALAMOUNTNull() As Boolean
            Return Me.IsNull(Me.tableVIEWPURCHASEREGISTERSUMMARY.TOTALAMOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTOTALAMOUNTNull()
            Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.TOTALAMOUNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVATAMOUNTNull() As Boolean
            Return Me.IsNull(Me.tableVIEWPURCHASEREGISTERSUMMARY.VATAMOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVATAMOUNTNull()
            Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.VATAMOUNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSURCHARGEAMTNull() As Boolean
            Return Me.IsNull(Me.tableVIEWPURCHASEREGISTERSUMMARY.SURCHARGEAMTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSURCHARGEAMTNull()
            Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.SURCHARGEAMTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDISCOUNTAMOUNTNull() As Boolean
            Return Me.IsNull(Me.tableVIEWPURCHASEREGISTERSUMMARY.DISCOUNTAMOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDISCOUNTAMOUNTNull()
            Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.DISCOUNTAMOUNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBILLAMOUNTNull() As Boolean
            Return Me.IsNull(Me.tableVIEWPURCHASEREGISTERSUMMARY.BILLAMOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBILLAMOUNTNull()
            Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.BILLAMOUNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsITEMCODENull() As Boolean
            Return Me.IsNull(Me.tableVIEWPURCHASEREGISTERSUMMARY.ITEMCODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetITEMCODENull()
            Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.ITEMCODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsITEMNAMENull() As Boolean
            Return Me.IsNull(Me.tableVIEWPURCHASEREGISTERSUMMARY.ITEMNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetITEMNAMENull()
            Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.ITEMNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUOMNull() As Boolean
            Return Me.IsNull(Me.tableVIEWPURCHASEREGISTERSUMMARY.UOMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUOMNull()
            Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.UOMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQTYNull() As Boolean
            Return Me.IsNull(Me.tableVIEWPURCHASEREGISTERSUMMARY.QTYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQTYNull()
            Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.QTYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRATENull() As Boolean
            Return Me.IsNull(Me.tableVIEWPURCHASEREGISTERSUMMARY.RATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRATENull()
            Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.RATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDISCOUNTNull() As Boolean
            Return Me.IsNull(Me.tableVIEWPURCHASEREGISTERSUMMARY.DISCOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDISCOUNTNull()
            Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.DISCOUNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSGSTAMTNull() As Boolean
            Return Me.IsNull(Me.tableVIEWPURCHASEREGISTERSUMMARY.SGSTAMTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSGSTAMTNull()
            Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.SGSTAMTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCGSTAMTNull() As Boolean
            Return Me.IsNull(Me.tableVIEWPURCHASEREGISTERSUMMARY.CGSTAMTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCGSTAMTNull()
            Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.CGSTAMTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIGSTAMTNull() As Boolean
            Return Me.IsNull(Me.tableVIEWPURCHASEREGISTERSUMMARY.IGSTAMTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIGSTAMTNull()
            Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.IGSTAMTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPODATENull() As Boolean
            Return Me.IsNull(Me.tableVIEWPURCHASEREGISTERSUMMARY.PODATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPODATENull()
            Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.PODATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAMOUNTNull() As Boolean
            Return Me.IsNull(Me.tableVIEWPURCHASEREGISTERSUMMARY.AMOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAMOUNTNull()
            Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.AMOUNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOTHCHARGENull() As Boolean
            Return Me.IsNull(Me.tableVIEWPURCHASEREGISTERSUMMARY.OTHCHARGEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOTHCHARGENull()
            Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.OTHCHARGEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsadddateNull() As Boolean
            Return Me.IsNull(Me.tableVIEWPURCHASEREGISTERSUMMARY.adddateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetadddateNull()
            Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.adddateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAVOUCHERNONull() As Boolean
            Return Me.IsNull(Me.tableVIEWPURCHASEREGISTERSUMMARY.AVOUCHERNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAVOUCHERNONull()
            Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.AVOUCHERNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAVOUCHERDATENull() As Boolean
            Return Me.IsNull(Me.tableVIEWPURCHASEREGISTERSUMMARY.AVOUCHERDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAVOUCHERDATENull()
            Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.AVOUCHERDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsADJUSTEDAMOUNTNull() As Boolean
            Return Me.IsNull(Me.tableVIEWPURCHASEREGISTERSUMMARY.ADJUSTEDAMOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetADJUSTEDAMOUNTNull()
            Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.ADJUSTEDAMOUNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPOSTINGNull() As Boolean
            Return Me.IsNull(Me.tableVIEWPURCHASEREGISTERSUMMARY.POSTINGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPOSTINGNull()
            Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.POSTINGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPONONull() As Boolean
            Return Me.IsNull(Me.tableVIEWPURCHASEREGISTERSUMMARY.PONOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPONONull()
            Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.PONOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSupplierinvnoNull() As Boolean
            Return Me.IsNull(Me.tableVIEWPURCHASEREGISTERSUMMARY.SupplierinvnoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSupplierinvnoNull()
            Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.SupplierinvnoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOVERALLDISCOUNTNull() As Boolean
            Return Me.IsNull(Me.tableVIEWPURCHASEREGISTERSUMMARY.OVERALLDISCOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOVERALLDISCOUNTNull()
            Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.OVERALLDISCOUNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTAXAMOUNTNull() As Boolean
            Return Me.IsNull(Me.tableVIEWPURCHASEREGISTERSUMMARY.TAXAMOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTAXAMOUNTNull()
            Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.TAXAMOUNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTOREDESCNull() As Boolean
            Return Me.IsNull(Me.tableVIEWPURCHASEREGISTERSUMMARY.STOREDESCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTOREDESCNull()
            Me(Me.tableVIEWPURCHASEREGISTERSUMMARY.STOREDESCColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class Inv_view_Pending_IndentRow
        Inherits Global.System.Data.DataRow
        
        Private tableInv_view_Pending_Indent As Inv_view_Pending_IndentDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableInv_view_Pending_Indent = CType(Me.Table,Inv_view_Pending_IndentDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Indent_no() As String
            Get
                Return CType(Me(Me.tableInv_view_Pending_Indent.Indent_noColumn),String)
            End Get
            Set
                Me(Me.tableInv_view_Pending_Indent.Indent_noColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property indent_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableInv_view_Pending_Indent.indent_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'indent_date' in table 'Inv_view_Pending_Indent' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInv_view_Pending_Indent.indent_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property storelocationname() As String
            Get
                Try 
                    Return CType(Me(Me.tableInv_view_Pending_Indent.storelocationnameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'storelocationname' in table 'Inv_view_Pending_Indent' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableInv_view_Pending_Indent.storelocationnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property itemcode() As String
            Get
                Try 
                    Return CType(Me(Me.tableInv_view_Pending_Indent.itemcodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'itemcode' in table 'Inv_view_Pending_Indent' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInv_view_Pending_Indent.itemcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property itemname() As String
            Get
                Try 
                    Return CType(Me(Me.tableInv_view_Pending_Indent.itemnameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'itemname' in table 'Inv_view_Pending_Indent' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInv_view_Pending_Indent.itemnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property qty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableInv_view_Pending_Indent.qtyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'qty' in table 'Inv_view_Pending_Indent' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInv_view_Pending_Indent.qtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property amount() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableInv_view_Pending_Indent.amountColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'amount' in table 'Inv_view_Pending_Indent' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInv_view_Pending_Indent.amountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property void() As String
            Get
                Try 
                    Return CType(Me(Me.tableInv_view_Pending_Indent.voidColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'void' in table 'Inv_view_Pending_Indent' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInv_view_Pending_Indent.voidColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isindent_dateNull() As Boolean
            Return Me.IsNull(Me.tableInv_view_Pending_Indent.indent_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setindent_dateNull()
            Me(Me.tableInv_view_Pending_Indent.indent_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsstorelocationnameNull() As Boolean
            Return Me.IsNull(Me.tableInv_view_Pending_Indent.storelocationnameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetstorelocationnameNull()
            Me(Me.tableInv_view_Pending_Indent.storelocationnameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsitemcodeNull() As Boolean
            Return Me.IsNull(Me.tableInv_view_Pending_Indent.itemcodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetitemcodeNull()
            Me(Me.tableInv_view_Pending_Indent.itemcodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsitemnameNull() As Boolean
            Return Me.IsNull(Me.tableInv_view_Pending_Indent.itemnameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetitemnameNull()
            Me(Me.tableInv_view_Pending_Indent.itemnameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsqtyNull() As Boolean
            Return Me.IsNull(Me.tableInv_view_Pending_Indent.qtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetqtyNull()
            Me(Me.tableInv_view_Pending_Indent.qtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsamountNull() As Boolean
            Return Me.IsNull(Me.tableInv_view_Pending_Indent.amountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetamountNull()
            Me(Me.tableInv_view_Pending_Indent.amountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsvoidNull() As Boolean
            Return Me.IsNull(Me.tableInv_view_Pending_Indent.voidColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetvoidNull()
            Me(Me.tableInv_view_Pending_Indent.voidColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ISSUEDETAILSRow
        Inherits Global.System.Data.DataRow
        
        Private tableISSUEDETAILS As ISSUEDETAILSDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableISSUEDETAILS = CType(Me.Table,ISSUEDETAILSDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ITEMCODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableISSUEDETAILS.ITEMCODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ITEMCODE' in table 'ISSUEDETAILS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableISSUEDETAILS.ITEMCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ITEMNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableISSUEDETAILS.ITEMNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ITEMNAME' in table 'ISSUEDETAILS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableISSUEDETAILS.ITEMNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LOCATIONNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableISSUEDETAILS.LOCATIONNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LOCATIONNAME' in table 'ISSUEDETAILS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableISSUEDETAILS.LOCATIONNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UOM() As String
            Get
                Try 
                    Return CType(Me(Me.tableISSUEDETAILS.UOMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UOM' in table 'ISSUEDETAILS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableISSUEDETAILS.UOMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QTY() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableISSUEDETAILS.QTYColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QTY' in table 'ISSUEDETAILS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableISSUEDETAILS.QTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RATE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableISSUEDETAILS.RATEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RATE' in table 'ISSUEDETAILS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableISSUEDETAILS.RATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AMOUNT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableISSUEDETAILS.AMOUNTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AMOUNT' in table 'ISSUEDETAILS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableISSUEDETAILS.AMOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VOID() As String
            Get
                Try 
                    Return CType(Me(Me.tableISSUEDETAILS.VOIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VOID' in table 'ISSUEDETAILS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableISSUEDETAILS.VOIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GROUPDESC() As String
            Get
                Try 
                    Return CType(Me(Me.tableISSUEDETAILS.GROUPDESCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GROUPDESC' in table 'ISSUEDETAILS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableISSUEDETAILS.GROUPDESCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DOCDETAILS() As String
            Get
                Try 
                    Return CType(Me(Me.tableISSUEDETAILS.DOCDETAILSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DOCDETAILS' in table 'ISSUEDETAILS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableISSUEDETAILS.DOCDETAILSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DOCDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableISSUEDETAILS.DOCDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DOCDATE' in table 'ISSUEDETAILS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableISSUEDETAILS.DOCDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsITEMCODENull() As Boolean
            Return Me.IsNull(Me.tableISSUEDETAILS.ITEMCODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetITEMCODENull()
            Me(Me.tableISSUEDETAILS.ITEMCODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsITEMNAMENull() As Boolean
            Return Me.IsNull(Me.tableISSUEDETAILS.ITEMNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetITEMNAMENull()
            Me(Me.tableISSUEDETAILS.ITEMNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLOCATIONNAMENull() As Boolean
            Return Me.IsNull(Me.tableISSUEDETAILS.LOCATIONNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLOCATIONNAMENull()
            Me(Me.tableISSUEDETAILS.LOCATIONNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUOMNull() As Boolean
            Return Me.IsNull(Me.tableISSUEDETAILS.UOMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUOMNull()
            Me(Me.tableISSUEDETAILS.UOMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQTYNull() As Boolean
            Return Me.IsNull(Me.tableISSUEDETAILS.QTYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQTYNull()
            Me(Me.tableISSUEDETAILS.QTYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRATENull() As Boolean
            Return Me.IsNull(Me.tableISSUEDETAILS.RATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRATENull()
            Me(Me.tableISSUEDETAILS.RATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAMOUNTNull() As Boolean
            Return Me.IsNull(Me.tableISSUEDETAILS.AMOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAMOUNTNull()
            Me(Me.tableISSUEDETAILS.AMOUNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVOIDNull() As Boolean
            Return Me.IsNull(Me.tableISSUEDETAILS.VOIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVOIDNull()
            Me(Me.tableISSUEDETAILS.VOIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGROUPDESCNull() As Boolean
            Return Me.IsNull(Me.tableISSUEDETAILS.GROUPDESCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGROUPDESCNull()
            Me(Me.tableISSUEDETAILS.GROUPDESCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDOCDETAILSNull() As Boolean
            Return Me.IsNull(Me.tableISSUEDETAILS.DOCDETAILSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDOCDETAILSNull()
            Me(Me.tableISSUEDETAILS.DOCDETAILSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDOCDATENull() As Boolean
            Return Me.IsNull(Me.tableISSUEDETAILS.DOCDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDOCDATENull()
            Me(Me.tableISSUEDETAILS.DOCDATEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class issuesummaryRow
        Inherits Global.System.Data.DataRow
        
        Private tableissuesummary As issuesummaryDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableissuesummary = CType(Me.Table,issuesummaryDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Autoid() As Decimal
            Get
                Return CType(Me(Me.tableissuesummary.AutoidColumn),Decimal)
            End Get
            Set
                Me(Me.tableissuesummary.AutoidColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Itemcode() As String
            Get
                Try 
                    Return CType(Me(Me.tableissuesummary.ItemcodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Itemcode' in table 'issuesummary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableissuesummary.ItemcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Itemdesc() As String
            Get
                Try 
                    Return CType(Me(Me.tableissuesummary.ItemdescColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Itemdesc' in table 'issuesummary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableissuesummary.ItemdescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Uom() As String
            Get
                Try 
                    Return CType(Me(Me.tableissuesummary.UomColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Uom' in table 'issuesummary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableissuesummary.UomColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Issueqty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableissuesummary.IssueqtyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Issueqty' in table 'issuesummary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableissuesummary.IssueqtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Issuerate() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableissuesummary.IssuerateColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Issuerate' in table 'issuesummary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableissuesummary.IssuerateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Issueamount() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableissuesummary.IssueamountColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Issueamount' in table 'issuesummary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableissuesummary.IssueamountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GROUPNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableissuesummary.GROUPNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GROUPNAME' in table 'issuesummary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableissuesummary.GROUPNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsItemcodeNull() As Boolean
            Return Me.IsNull(Me.tableissuesummary.ItemcodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetItemcodeNull()
            Me(Me.tableissuesummary.ItemcodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsItemdescNull() As Boolean
            Return Me.IsNull(Me.tableissuesummary.ItemdescColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetItemdescNull()
            Me(Me.tableissuesummary.ItemdescColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUomNull() As Boolean
            Return Me.IsNull(Me.tableissuesummary.UomColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUomNull()
            Me(Me.tableissuesummary.UomColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIssueqtyNull() As Boolean
            Return Me.IsNull(Me.tableissuesummary.IssueqtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIssueqtyNull()
            Me(Me.tableissuesummary.IssueqtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIssuerateNull() As Boolean
            Return Me.IsNull(Me.tableissuesummary.IssuerateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIssuerateNull()
            Me(Me.tableissuesummary.IssuerateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIssueamountNull() As Boolean
            Return Me.IsNull(Me.tableissuesummary.IssueamountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIssueamountNull()
            Me(Me.tableissuesummary.IssueamountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGROUPNAMENull() As Boolean
            Return Me.IsNull(Me.tableissuesummary.GROUPNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGROUPNAMENull()
            Me(Me.tableissuesummary.GROUPNAMEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class INV_VIEW_INPUTTAXRow
        Inherits Global.System.Data.DataRow
        
        Private tableINV_VIEW_INPUTTAX As INV_VIEW_INPUTTAXDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableINV_VIEW_INPUTTAX = CType(Me.Table,INV_VIEW_INPUTTAXDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GRNDETAILS() As String
            Get
                Try 
                    Return CType(Me(Me.tableINV_VIEW_INPUTTAX.GRNDETAILSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GRNDETAILS' in table 'INV_VIEW_INPUTTAX' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINV_VIEW_INPUTTAX.GRNDETAILSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GRNDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableINV_VIEW_INPUTTAX.GRNDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GRNDATE' in table 'INV_VIEW_INPUTTAX' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINV_VIEW_INPUTTAX.GRNDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BILLDETAILS() As String
            Get
                Try 
                    Return CType(Me(Me.tableINV_VIEW_INPUTTAX.BILLDETAILSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BILLDETAILS' in table 'INV_VIEW_INPUTTAX' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINV_VIEW_INPUTTAX.BILLDETAILSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BILLDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableINV_VIEW_INPUTTAX.BILLDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BILLDATE' in table 'INV_VIEW_INPUTTAX' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINV_VIEW_INPUTTAX.BILLDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CRCODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableINV_VIEW_INPUTTAX.CRCODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CRCODE' in table 'INV_VIEW_INPUTTAX' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINV_VIEW_INPUTTAX.CRCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CRNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableINV_VIEW_INPUTTAX.CRNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CRNAME' in table 'INV_VIEW_INPUTTAX' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINV_VIEW_INPUTTAX.CRNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DRCODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableINV_VIEW_INPUTTAX.DRCODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DRCODE' in table 'INV_VIEW_INPUTTAX' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINV_VIEW_INPUTTAX.DRCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DRNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableINV_VIEW_INPUTTAX.DRNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DRNAME' in table 'INV_VIEW_INPUTTAX' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINV_VIEW_INPUTTAX.DRNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ITEMCODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableINV_VIEW_INPUTTAX.ITEMCODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ITEMCODE' in table 'INV_VIEW_INPUTTAX' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINV_VIEW_INPUTTAX.ITEMCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ITEMNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableINV_VIEW_INPUTTAX.ITEMNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ITEMNAME' in table 'INV_VIEW_INPUTTAX' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINV_VIEW_INPUTTAX.ITEMNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BILLAMOUNT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINV_VIEW_INPUTTAX.BILLAMOUNTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BILLAMOUNT' in table 'INV_VIEW_INPUTTAX' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINV_VIEW_INPUTTAX.BILLAMOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TPER() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINV_VIEW_INPUTTAX.TPERColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TPER' in table 'INV_VIEW_INPUTTAX' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINV_VIEW_INPUTTAX.TPERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TAMT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINV_VIEW_INPUTTAX.TAMTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TAMT' in table 'INV_VIEW_INPUTTAX' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINV_VIEW_INPUTTAX.TAMTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TOTALAMOUNT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINV_VIEW_INPUTTAX.TOTALAMOUNTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOTALAMOUNT' in table 'INV_VIEW_INPUTTAX' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINV_VIEW_INPUTTAX.TOTALAMOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGRNDETAILSNull() As Boolean
            Return Me.IsNull(Me.tableINV_VIEW_INPUTTAX.GRNDETAILSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGRNDETAILSNull()
            Me(Me.tableINV_VIEW_INPUTTAX.GRNDETAILSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGRNDATENull() As Boolean
            Return Me.IsNull(Me.tableINV_VIEW_INPUTTAX.GRNDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGRNDATENull()
            Me(Me.tableINV_VIEW_INPUTTAX.GRNDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBILLDETAILSNull() As Boolean
            Return Me.IsNull(Me.tableINV_VIEW_INPUTTAX.BILLDETAILSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBILLDETAILSNull()
            Me(Me.tableINV_VIEW_INPUTTAX.BILLDETAILSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBILLDATENull() As Boolean
            Return Me.IsNull(Me.tableINV_VIEW_INPUTTAX.BILLDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBILLDATENull()
            Me(Me.tableINV_VIEW_INPUTTAX.BILLDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCRCODENull() As Boolean
            Return Me.IsNull(Me.tableINV_VIEW_INPUTTAX.CRCODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCRCODENull()
            Me(Me.tableINV_VIEW_INPUTTAX.CRCODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCRNAMENull() As Boolean
            Return Me.IsNull(Me.tableINV_VIEW_INPUTTAX.CRNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCRNAMENull()
            Me(Me.tableINV_VIEW_INPUTTAX.CRNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDRCODENull() As Boolean
            Return Me.IsNull(Me.tableINV_VIEW_INPUTTAX.DRCODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDRCODENull()
            Me(Me.tableINV_VIEW_INPUTTAX.DRCODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDRNAMENull() As Boolean
            Return Me.IsNull(Me.tableINV_VIEW_INPUTTAX.DRNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDRNAMENull()
            Me(Me.tableINV_VIEW_INPUTTAX.DRNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsITEMCODENull() As Boolean
            Return Me.IsNull(Me.tableINV_VIEW_INPUTTAX.ITEMCODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetITEMCODENull()
            Me(Me.tableINV_VIEW_INPUTTAX.ITEMCODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsITEMNAMENull() As Boolean
            Return Me.IsNull(Me.tableINV_VIEW_INPUTTAX.ITEMNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetITEMNAMENull()
            Me(Me.tableINV_VIEW_INPUTTAX.ITEMNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBILLAMOUNTNull() As Boolean
            Return Me.IsNull(Me.tableINV_VIEW_INPUTTAX.BILLAMOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBILLAMOUNTNull()
            Me(Me.tableINV_VIEW_INPUTTAX.BILLAMOUNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTPERNull() As Boolean
            Return Me.IsNull(Me.tableINV_VIEW_INPUTTAX.TPERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTPERNull()
            Me(Me.tableINV_VIEW_INPUTTAX.TPERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTAMTNull() As Boolean
            Return Me.IsNull(Me.tableINV_VIEW_INPUTTAX.TAMTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTAMTNull()
            Me(Me.tableINV_VIEW_INPUTTAX.TAMTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTOTALAMOUNTNull() As Boolean
            Return Me.IsNull(Me.tableINV_VIEW_INPUTTAX.TOTALAMOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTOTALAMOUNTNull()
            Me(Me.tableINV_VIEW_INPUTTAX.TOTALAMOUNTColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class STOCKISSUEDETAILRow
        Inherits Global.System.Data.DataRow
        
        Private tableSTOCKISSUEDETAIL As STOCKISSUEDETAILDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSTOCKISSUEDETAIL = CType(Me.Table,STOCKISSUEDETAILDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Autoid() As Decimal
            Get
                Return CType(Me(Me.tableSTOCKISSUEDETAIL.AutoidColumn),Decimal)
            End Get
            Set
                Me(Me.tableSTOCKISSUEDETAIL.AutoidColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Docno() As String
            Get
                Return CType(Me(Me.tableSTOCKISSUEDETAIL.DocnoColumn),String)
            End Get
            Set
                Me(Me.tableSTOCKISSUEDETAIL.DocnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Docdetails() As String
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKISSUEDETAIL.DocdetailsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Docdetails' in table 'STOCKISSUEDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKISSUEDETAIL.DocdetailsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Docdate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKISSUEDETAIL.DocdateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Docdate' in table 'STOCKISSUEDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKISSUEDETAIL.DocdateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IndentNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKISSUEDETAIL.IndentNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IndentNo' in table 'STOCKISSUEDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKISSUEDETAIL.IndentNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IndentDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKISSUEDETAIL.IndentDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IndentDate' in table 'STOCKISSUEDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKISSUEDETAIL.IndentDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Storelocationcode() As String
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKISSUEDETAIL.StorelocationcodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Storelocationcode' in table 'STOCKISSUEDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKISSUEDETAIL.StorelocationcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Storelocationname() As String
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKISSUEDETAIL.StorelocationnameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Storelocationname' in table 'STOCKISSUEDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKISSUEDETAIL.StorelocationnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Opstorelocationcode() As String
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKISSUEDETAIL.OpstorelocationcodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Opstorelocationcode' in table 'STOCKISSUEDETAIL' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKISSUEDETAIL.OpstorelocationcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Opstorelocationname() As String
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKISSUEDETAIL.OpstorelocationnameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Opstorelocationname' in table 'STOCKISSUEDETAIL' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKISSUEDETAIL.OpstorelocationnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Itemcode() As String
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKISSUEDETAIL.ItemcodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Itemcode' in table 'STOCKISSUEDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKISSUEDETAIL.ItemcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Itemname() As String
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKISSUEDETAIL.ItemnameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Itemname' in table 'STOCKISSUEDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKISSUEDETAIL.ItemnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Uom() As String
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKISSUEDETAIL.UomColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Uom' in table 'STOCKISSUEDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKISSUEDETAIL.UomColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Qty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKISSUEDETAIL.QtyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Qty' in table 'STOCKISSUEDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKISSUEDETAIL.QtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Rate() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKISSUEDETAIL.RateColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Rate' in table 'STOCKISSUEDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKISSUEDETAIL.RateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Amount() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKISSUEDETAIL.AmountColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Amount' in table 'STOCKISSUEDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKISSUEDETAIL.AmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Dblamt() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKISSUEDETAIL.DblamtColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Dblamt' in table 'STOCKISSUEDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKISSUEDETAIL.DblamtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Dblconv() As String
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKISSUEDETAIL.DblconvColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Dblconv' in table 'STOCKISSUEDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKISSUEDETAIL.DblconvColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Highratio() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKISSUEDETAIL.HighratioColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Highratio' in table 'STOCKISSUEDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKISSUEDETAIL.HighratioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Groupcode() As String
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKISSUEDETAIL.GroupcodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Groupcode' in table 'STOCKISSUEDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKISSUEDETAIL.GroupcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Subgroupcode() As String
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKISSUEDETAIL.SubgroupcodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Subgroupcode' in table 'STOCKISSUEDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKISSUEDETAIL.SubgroupcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Void() As String
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKISSUEDETAIL.VoidColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Void' in table 'STOCKISSUEDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKISSUEDETAIL.VoidColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Avgqty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKISSUEDETAIL.AvgqtyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Avgqty' in table 'STOCKISSUEDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKISSUEDETAIL.AvgqtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Avgrate() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKISSUEDETAIL.AvgrateColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Avgrate' in table 'STOCKISSUEDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKISSUEDETAIL.AvgrateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Adduser() As String
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKISSUEDETAIL.AdduserColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Adduser' in table 'STOCKISSUEDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKISSUEDETAIL.AdduserColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Adddatetime() As Date
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKISSUEDETAIL.AdddatetimeColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Adddatetime' in table 'STOCKISSUEDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKISSUEDETAIL.AdddatetimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Updateuser() As String
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKISSUEDETAIL.UpdateuserColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Updateuser' in table 'STOCKISSUEDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKISSUEDETAIL.UpdateuserColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Updatetime() As Date
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKISSUEDETAIL.UpdatetimeColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Updatetime' in table 'STOCKISSUEDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKISSUEDETAIL.UpdatetimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDocdetailsNull() As Boolean
            Return Me.IsNull(Me.tableSTOCKISSUEDETAIL.DocdetailsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDocdetailsNull()
            Me(Me.tableSTOCKISSUEDETAIL.DocdetailsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDocdateNull() As Boolean
            Return Me.IsNull(Me.tableSTOCKISSUEDETAIL.DocdateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDocdateNull()
            Me(Me.tableSTOCKISSUEDETAIL.DocdateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIndentNoNull() As Boolean
            Return Me.IsNull(Me.tableSTOCKISSUEDETAIL.IndentNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIndentNoNull()
            Me(Me.tableSTOCKISSUEDETAIL.IndentNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIndentDateNull() As Boolean
            Return Me.IsNull(Me.tableSTOCKISSUEDETAIL.IndentDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIndentDateNull()
            Me(Me.tableSTOCKISSUEDETAIL.IndentDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsStorelocationcodeNull() As Boolean
            Return Me.IsNull(Me.tableSTOCKISSUEDETAIL.StorelocationcodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetStorelocationcodeNull()
            Me(Me.tableSTOCKISSUEDETAIL.StorelocationcodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsStorelocationnameNull() As Boolean
            Return Me.IsNull(Me.tableSTOCKISSUEDETAIL.StorelocationnameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetStorelocationnameNull()
            Me(Me.tableSTOCKISSUEDETAIL.StorelocationnameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOpstorelocationcodeNull() As Boolean
            Return Me.IsNull(Me.tableSTOCKISSUEDETAIL.OpstorelocationcodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOpstorelocationcodeNull()
            Me(Me.tableSTOCKISSUEDETAIL.OpstorelocationcodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOpstorelocationnameNull() As Boolean
            Return Me.IsNull(Me.tableSTOCKISSUEDETAIL.OpstorelocationnameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOpstorelocationnameNull()
            Me(Me.tableSTOCKISSUEDETAIL.OpstorelocationnameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsItemcodeNull() As Boolean
            Return Me.IsNull(Me.tableSTOCKISSUEDETAIL.ItemcodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetItemcodeNull()
            Me(Me.tableSTOCKISSUEDETAIL.ItemcodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsItemnameNull() As Boolean
            Return Me.IsNull(Me.tableSTOCKISSUEDETAIL.ItemnameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetItemnameNull()
            Me(Me.tableSTOCKISSUEDETAIL.ItemnameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUomNull() As Boolean
            Return Me.IsNull(Me.tableSTOCKISSUEDETAIL.UomColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUomNull()
            Me(Me.tableSTOCKISSUEDETAIL.UomColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQtyNull() As Boolean
            Return Me.IsNull(Me.tableSTOCKISSUEDETAIL.QtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQtyNull()
            Me(Me.tableSTOCKISSUEDETAIL.QtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRateNull() As Boolean
            Return Me.IsNull(Me.tableSTOCKISSUEDETAIL.RateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRateNull()
            Me(Me.tableSTOCKISSUEDETAIL.RateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAmountNull() As Boolean
            Return Me.IsNull(Me.tableSTOCKISSUEDETAIL.AmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAmountNull()
            Me(Me.tableSTOCKISSUEDETAIL.AmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDblamtNull() As Boolean
            Return Me.IsNull(Me.tableSTOCKISSUEDETAIL.DblamtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDblamtNull()
            Me(Me.tableSTOCKISSUEDETAIL.DblamtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDblconvNull() As Boolean
            Return Me.IsNull(Me.tableSTOCKISSUEDETAIL.DblconvColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDblconvNull()
            Me(Me.tableSTOCKISSUEDETAIL.DblconvColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHighratioNull() As Boolean
            Return Me.IsNull(Me.tableSTOCKISSUEDETAIL.HighratioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHighratioNull()
            Me(Me.tableSTOCKISSUEDETAIL.HighratioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGroupcodeNull() As Boolean
            Return Me.IsNull(Me.tableSTOCKISSUEDETAIL.GroupcodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGroupcodeNull()
            Me(Me.tableSTOCKISSUEDETAIL.GroupcodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSubgroupcodeNull() As Boolean
            Return Me.IsNull(Me.tableSTOCKISSUEDETAIL.SubgroupcodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSubgroupcodeNull()
            Me(Me.tableSTOCKISSUEDETAIL.SubgroupcodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVoidNull() As Boolean
            Return Me.IsNull(Me.tableSTOCKISSUEDETAIL.VoidColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVoidNull()
            Me(Me.tableSTOCKISSUEDETAIL.VoidColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAvgqtyNull() As Boolean
            Return Me.IsNull(Me.tableSTOCKISSUEDETAIL.AvgqtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAvgqtyNull()
            Me(Me.tableSTOCKISSUEDETAIL.AvgqtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAvgrateNull() As Boolean
            Return Me.IsNull(Me.tableSTOCKISSUEDETAIL.AvgrateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAvgrateNull()
            Me(Me.tableSTOCKISSUEDETAIL.AvgrateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAdduserNull() As Boolean
            Return Me.IsNull(Me.tableSTOCKISSUEDETAIL.AdduserColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAdduserNull()
            Me(Me.tableSTOCKISSUEDETAIL.AdduserColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAdddatetimeNull() As Boolean
            Return Me.IsNull(Me.tableSTOCKISSUEDETAIL.AdddatetimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAdddatetimeNull()
            Me(Me.tableSTOCKISSUEDETAIL.AdddatetimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUpdateuserNull() As Boolean
            Return Me.IsNull(Me.tableSTOCKISSUEDETAIL.UpdateuserColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUpdateuserNull()
            Me(Me.tableSTOCKISSUEDETAIL.UpdateuserColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUpdatetimeNull() As Boolean
            Return Me.IsNull(Me.tableSTOCKISSUEDETAIL.UpdatetimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUpdatetimeNull()
            Me(Me.tableSTOCKISSUEDETAIL.UpdatetimeColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class STOCKSUMMARYRow
        Inherits Global.System.Data.DataRow
        
        Private tableSTOCKSUMMARY As STOCKSUMMARYDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSTOCKSUMMARY = CType(Me.Table,STOCKSUMMARYDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Autoid() As Decimal
            Get
                Return CType(Me(Me.tableSTOCKSUMMARY.AutoidColumn),Decimal)
            End Get
            Set
                Me(Me.tableSTOCKSUMMARY.AutoidColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Itemcode() As String
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKSUMMARY.ItemcodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Itemcode' in table 'STOCKSUMMARY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKSUMMARY.ItemcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Itemname() As String
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKSUMMARY.ItemnameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Itemname' in table 'STOCKSUMMARY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKSUMMARY.ItemnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Uom() As String
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKSUMMARY.UomColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Uom' in table 'STOCKSUMMARY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKSUMMARY.UomColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Valuation() As String
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKSUMMARY.ValuationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Valuation' in table 'STOCKSUMMARY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKSUMMARY.ValuationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Opqty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKSUMMARY.OpqtyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Opqty' in table 'STOCKSUMMARY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKSUMMARY.OpqtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Oprate() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKSUMMARY.OprateColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Oprate' in table 'STOCKSUMMARY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKSUMMARY.OprateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Opval() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKSUMMARY.OpvalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Opval' in table 'STOCKSUMMARY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKSUMMARY.OpvalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Rcvqty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKSUMMARY.RcvqtyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Rcvqty' in table 'STOCKSUMMARY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKSUMMARY.RcvqtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Rcvrate() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKSUMMARY.RcvrateColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Rcvrate' in table 'STOCKSUMMARY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKSUMMARY.RcvrateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Rcvval() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKSUMMARY.RcvvalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Rcvval' in table 'STOCKSUMMARY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKSUMMARY.RcvvalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Issqty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKSUMMARY.IssqtyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Issqty' in table 'STOCKSUMMARY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKSUMMARY.IssqtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Issrate() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKSUMMARY.IssrateColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Issrate' in table 'STOCKSUMMARY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKSUMMARY.IssrateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Issval() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKSUMMARY.IssvalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Issval' in table 'STOCKSUMMARY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKSUMMARY.IssvalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Clsqty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKSUMMARY.ClsqtyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Clsqty' in table 'STOCKSUMMARY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKSUMMARY.ClsqtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Clsrate() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKSUMMARY.ClsrateColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Clsrate' in table 'STOCKSUMMARY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKSUMMARY.ClsrateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Clsval() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKSUMMARY.ClsvalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Clsval' in table 'STOCKSUMMARY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKSUMMARY.ClsvalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STORECODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKSUMMARY.STORECODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STORECODE' in table 'STOCKSUMMARY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKSUMMARY.STORECODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GROUPCODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKSUMMARY.GROUPCODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GROUPCODE' in table 'STOCKSUMMARY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKSUMMARY.GROUPCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GROUPNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKSUMMARY.GROUPNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GROUPNAME' in table 'STOCKSUMMARY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKSUMMARY.GROUPNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SUBGROUPCODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKSUMMARY.SUBGROUPCODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUBGROUPCODE' in table 'STOCKSUMMARY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKSUMMARY.SUBGROUPCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SUBGROUPNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKSUMMARY.SUBGROUPNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUBGROUPNAME' in table 'STOCKSUMMARY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKSUMMARY.SUBGROUPNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property pegsqty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKSUMMARY.pegsqtyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pegsqty' in table 'STOCKSUMMARY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKSUMMARY.pegsqtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property pegs() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKSUMMARY.pegsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pegs' in table 'STOCKSUMMARY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKSUMMARY.pegsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RCVQTY1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKSUMMARY.RCVQTY1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RCVQTY1' in table 'STOCKSUMMARY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKSUMMARY.RCVQTY1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RCVRATE1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKSUMMARY.RCVRATE1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RCVRATE1' in table 'STOCKSUMMARY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKSUMMARY.RCVRATE1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RCVVAL1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKSUMMARY.RCVVAL1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RCVVAL1' in table 'STOCKSUMMARY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKSUMMARY.RCVVAL1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RCVQTY2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKSUMMARY.RCVQTY2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RCVQTY2' in table 'STOCKSUMMARY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKSUMMARY.RCVQTY2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RCVRATE2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKSUMMARY.RCVRATE2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RCVRATE2' in table 'STOCKSUMMARY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKSUMMARY.RCVRATE2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RCVVAL2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKSUMMARY.RCVVAL2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RCVVAL2' in table 'STOCKSUMMARY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKSUMMARY.RCVVAL2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RCVQTY3() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKSUMMARY.RCVQTY3Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RCVQTY3' in table 'STOCKSUMMARY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKSUMMARY.RCVQTY3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RCVRATE3() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKSUMMARY.RCVRATE3Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RCVRATE3' in table 'STOCKSUMMARY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKSUMMARY.RCVRATE3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RCVVAL3() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKSUMMARY.RCVVAL3Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RCVVAL3' in table 'STOCKSUMMARY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKSUMMARY.RCVVAL3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ISSQTY1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKSUMMARY.ISSQTY1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ISSQTY1' in table 'STOCKSUMMARY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKSUMMARY.ISSQTY1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ISSRATE1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKSUMMARY.ISSRATE1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ISSRATE1' in table 'STOCKSUMMARY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKSUMMARY.ISSRATE1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ISSVAL1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKSUMMARY.ISSVAL1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ISSVAL1' in table 'STOCKSUMMARY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKSUMMARY.ISSVAL1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ISSQTY2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKSUMMARY.ISSQTY2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ISSQTY2' in table 'STOCKSUMMARY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKSUMMARY.ISSQTY2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ISSRATE2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKSUMMARY.ISSRATE2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ISSRATE2' in table 'STOCKSUMMARY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKSUMMARY.ISSRATE2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ISSVAL2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKSUMMARY.ISSVAL2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ISSVAL2' in table 'STOCKSUMMARY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKSUMMARY.ISSVAL2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ISSQTY3() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKSUMMARY.ISSQTY3Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ISSQTY3' in table 'STOCKSUMMARY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKSUMMARY.ISSQTY3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ISSRATE3() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKSUMMARY.ISSRATE3Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ISSRATE3' in table 'STOCKSUMMARY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKSUMMARY.ISSRATE3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ISSVAL3() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKSUMMARY.ISSVAL3Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ISSVAL3' in table 'STOCKSUMMARY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKSUMMARY.ISSVAL3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DISPQTY() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKSUMMARY.DISPQTYColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DISPQTY' in table 'STOCKSUMMARY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKSUMMARY.DISPQTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DISPUOM() As String
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKSUMMARY.DISPUOMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DISPUOM' in table 'STOCKSUMMARY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKSUMMARY.DISPUOMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property opdispqty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKSUMMARY.opdispqtyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'opdispqty' in table 'STOCKSUMMARY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKSUMMARY.opdispqtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ISDISPQTY() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKSUMMARY.ISDISPQTYColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ISDISPQTY' in table 'STOCKSUMMARY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKSUMMARY.ISDISPQTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsItemcodeNull() As Boolean
            Return Me.IsNull(Me.tableSTOCKSUMMARY.ItemcodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetItemcodeNull()
            Me(Me.tableSTOCKSUMMARY.ItemcodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsItemnameNull() As Boolean
            Return Me.IsNull(Me.tableSTOCKSUMMARY.ItemnameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetItemnameNull()
            Me(Me.tableSTOCKSUMMARY.ItemnameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUomNull() As Boolean
            Return Me.IsNull(Me.tableSTOCKSUMMARY.UomColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUomNull()
            Me(Me.tableSTOCKSUMMARY.UomColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsValuationNull() As Boolean
            Return Me.IsNull(Me.tableSTOCKSUMMARY.ValuationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetValuationNull()
            Me(Me.tableSTOCKSUMMARY.ValuationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOpqtyNull() As Boolean
            Return Me.IsNull(Me.tableSTOCKSUMMARY.OpqtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOpqtyNull()
            Me(Me.tableSTOCKSUMMARY.OpqtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOprateNull() As Boolean
            Return Me.IsNull(Me.tableSTOCKSUMMARY.OprateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOprateNull()
            Me(Me.tableSTOCKSUMMARY.OprateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOpvalNull() As Boolean
            Return Me.IsNull(Me.tableSTOCKSUMMARY.OpvalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOpvalNull()
            Me(Me.tableSTOCKSUMMARY.OpvalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRcvqtyNull() As Boolean
            Return Me.IsNull(Me.tableSTOCKSUMMARY.RcvqtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRcvqtyNull()
            Me(Me.tableSTOCKSUMMARY.RcvqtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRcvrateNull() As Boolean
            Return Me.IsNull(Me.tableSTOCKSUMMARY.RcvrateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRcvrateNull()
            Me(Me.tableSTOCKSUMMARY.RcvrateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRcvvalNull() As Boolean
            Return Me.IsNull(Me.tableSTOCKSUMMARY.RcvvalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRcvvalNull()
            Me(Me.tableSTOCKSUMMARY.RcvvalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIssqtyNull() As Boolean
            Return Me.IsNull(Me.tableSTOCKSUMMARY.IssqtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIssqtyNull()
            Me(Me.tableSTOCKSUMMARY.IssqtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIssrateNull() As Boolean
            Return Me.IsNull(Me.tableSTOCKSUMMARY.IssrateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIssrateNull()
            Me(Me.tableSTOCKSUMMARY.IssrateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIssvalNull() As Boolean
            Return Me.IsNull(Me.tableSTOCKSUMMARY.IssvalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIssvalNull()
            Me(Me.tableSTOCKSUMMARY.IssvalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsClsqtyNull() As Boolean
            Return Me.IsNull(Me.tableSTOCKSUMMARY.ClsqtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetClsqtyNull()
            Me(Me.tableSTOCKSUMMARY.ClsqtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsClsrateNull() As Boolean
            Return Me.IsNull(Me.tableSTOCKSUMMARY.ClsrateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetClsrateNull()
            Me(Me.tableSTOCKSUMMARY.ClsrateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsClsvalNull() As Boolean
            Return Me.IsNull(Me.tableSTOCKSUMMARY.ClsvalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetClsvalNull()
            Me(Me.tableSTOCKSUMMARY.ClsvalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTORECODENull() As Boolean
            Return Me.IsNull(Me.tableSTOCKSUMMARY.STORECODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTORECODENull()
            Me(Me.tableSTOCKSUMMARY.STORECODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGROUPCODENull() As Boolean
            Return Me.IsNull(Me.tableSTOCKSUMMARY.GROUPCODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGROUPCODENull()
            Me(Me.tableSTOCKSUMMARY.GROUPCODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGROUPNAMENull() As Boolean
            Return Me.IsNull(Me.tableSTOCKSUMMARY.GROUPNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGROUPNAMENull()
            Me(Me.tableSTOCKSUMMARY.GROUPNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSUBGROUPCODENull() As Boolean
            Return Me.IsNull(Me.tableSTOCKSUMMARY.SUBGROUPCODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSUBGROUPCODENull()
            Me(Me.tableSTOCKSUMMARY.SUBGROUPCODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSUBGROUPNAMENull() As Boolean
            Return Me.IsNull(Me.tableSTOCKSUMMARY.SUBGROUPNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSUBGROUPNAMENull()
            Me(Me.tableSTOCKSUMMARY.SUBGROUPNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IspegsqtyNull() As Boolean
            Return Me.IsNull(Me.tableSTOCKSUMMARY.pegsqtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetpegsqtyNull()
            Me(Me.tableSTOCKSUMMARY.pegsqtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IspegsNull() As Boolean
            Return Me.IsNull(Me.tableSTOCKSUMMARY.pegsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetpegsNull()
            Me(Me.tableSTOCKSUMMARY.pegsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRCVQTY1Null() As Boolean
            Return Me.IsNull(Me.tableSTOCKSUMMARY.RCVQTY1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRCVQTY1Null()
            Me(Me.tableSTOCKSUMMARY.RCVQTY1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRCVRATE1Null() As Boolean
            Return Me.IsNull(Me.tableSTOCKSUMMARY.RCVRATE1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRCVRATE1Null()
            Me(Me.tableSTOCKSUMMARY.RCVRATE1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRCVVAL1Null() As Boolean
            Return Me.IsNull(Me.tableSTOCKSUMMARY.RCVVAL1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRCVVAL1Null()
            Me(Me.tableSTOCKSUMMARY.RCVVAL1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRCVQTY2Null() As Boolean
            Return Me.IsNull(Me.tableSTOCKSUMMARY.RCVQTY2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRCVQTY2Null()
            Me(Me.tableSTOCKSUMMARY.RCVQTY2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRCVRATE2Null() As Boolean
            Return Me.IsNull(Me.tableSTOCKSUMMARY.RCVRATE2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRCVRATE2Null()
            Me(Me.tableSTOCKSUMMARY.RCVRATE2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRCVVAL2Null() As Boolean
            Return Me.IsNull(Me.tableSTOCKSUMMARY.RCVVAL2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRCVVAL2Null()
            Me(Me.tableSTOCKSUMMARY.RCVVAL2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRCVQTY3Null() As Boolean
            Return Me.IsNull(Me.tableSTOCKSUMMARY.RCVQTY3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRCVQTY3Null()
            Me(Me.tableSTOCKSUMMARY.RCVQTY3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRCVRATE3Null() As Boolean
            Return Me.IsNull(Me.tableSTOCKSUMMARY.RCVRATE3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRCVRATE3Null()
            Me(Me.tableSTOCKSUMMARY.RCVRATE3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRCVVAL3Null() As Boolean
            Return Me.IsNull(Me.tableSTOCKSUMMARY.RCVVAL3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRCVVAL3Null()
            Me(Me.tableSTOCKSUMMARY.RCVVAL3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsISSQTY1Null() As Boolean
            Return Me.IsNull(Me.tableSTOCKSUMMARY.ISSQTY1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetISSQTY1Null()
            Me(Me.tableSTOCKSUMMARY.ISSQTY1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsISSRATE1Null() As Boolean
            Return Me.IsNull(Me.tableSTOCKSUMMARY.ISSRATE1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetISSRATE1Null()
            Me(Me.tableSTOCKSUMMARY.ISSRATE1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsISSVAL1Null() As Boolean
            Return Me.IsNull(Me.tableSTOCKSUMMARY.ISSVAL1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetISSVAL1Null()
            Me(Me.tableSTOCKSUMMARY.ISSVAL1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsISSQTY2Null() As Boolean
            Return Me.IsNull(Me.tableSTOCKSUMMARY.ISSQTY2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetISSQTY2Null()
            Me(Me.tableSTOCKSUMMARY.ISSQTY2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsISSRATE2Null() As Boolean
            Return Me.IsNull(Me.tableSTOCKSUMMARY.ISSRATE2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetISSRATE2Null()
            Me(Me.tableSTOCKSUMMARY.ISSRATE2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsISSVAL2Null() As Boolean
            Return Me.IsNull(Me.tableSTOCKSUMMARY.ISSVAL2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetISSVAL2Null()
            Me(Me.tableSTOCKSUMMARY.ISSVAL2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsISSQTY3Null() As Boolean
            Return Me.IsNull(Me.tableSTOCKSUMMARY.ISSQTY3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetISSQTY3Null()
            Me(Me.tableSTOCKSUMMARY.ISSQTY3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsISSRATE3Null() As Boolean
            Return Me.IsNull(Me.tableSTOCKSUMMARY.ISSRATE3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetISSRATE3Null()
            Me(Me.tableSTOCKSUMMARY.ISSRATE3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsISSVAL3Null() As Boolean
            Return Me.IsNull(Me.tableSTOCKSUMMARY.ISSVAL3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetISSVAL3Null()
            Me(Me.tableSTOCKSUMMARY.ISSVAL3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDISPQTYNull() As Boolean
            Return Me.IsNull(Me.tableSTOCKSUMMARY.DISPQTYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDISPQTYNull()
            Me(Me.tableSTOCKSUMMARY.DISPQTYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDISPUOMNull() As Boolean
            Return Me.IsNull(Me.tableSTOCKSUMMARY.DISPUOMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDISPUOMNull()
            Me(Me.tableSTOCKSUMMARY.DISPUOMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsopdispqtyNull() As Boolean
            Return Me.IsNull(Me.tableSTOCKSUMMARY.opdispqtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetopdispqtyNull()
            Me(Me.tableSTOCKSUMMARY.opdispqtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsISDISPQTYNull() As Boolean
            Return Me.IsNull(Me.tableSTOCKSUMMARY.ISDISPQTYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetISDISPQTYNull()
            Me(Me.tableSTOCKSUMMARY.ISDISPQTYColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ISSUEREGISTERRow
        Inherits Global.System.Data.DataRow
        
        Private tableISSUEREGISTER As ISSUEREGISTERDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableISSUEREGISTER = CType(Me.Table,ISSUEREGISTERDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INDENTNO() As String
            Get
                Try 
                    Return CType(Me(Me.tableISSUEREGISTER.INDENTNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INDENTNO' in table 'ISSUEREGISTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableISSUEREGISTER.INDENTNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LOCATIONNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableISSUEREGISTER.LOCATIONNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LOCATIONNAME' in table 'ISSUEREGISTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableISSUEREGISTER.LOCATIONNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DOCDETAILS() As String
            Get
                Try 
                    Return CType(Me(Me.tableISSUEREGISTER.DOCDETAILSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DOCDETAILS' in table 'ISSUEREGISTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableISSUEREGISTER.DOCDETAILSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DOCDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableISSUEREGISTER.DOCDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DOCDATE' in table 'ISSUEREGISTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableISSUEREGISTER.DOCDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GROUPDESC() As String
            Get
                Try 
                    Return CType(Me(Me.tableISSUEREGISTER.GROUPDESCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GROUPDESC' in table 'ISSUEREGISTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableISSUEREGISTER.GROUPDESCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UOM() As String
            Get
                Try 
                    Return CType(Me(Me.tableISSUEREGISTER.UOMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UOM' in table 'ISSUEREGISTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableISSUEREGISTER.UOMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QTY() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableISSUEREGISTER.QTYColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QTY' in table 'ISSUEREGISTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableISSUEREGISTER.QTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RATE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableISSUEREGISTER.RATEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RATE' in table 'ISSUEREGISTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableISSUEREGISTER.RATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AMOUNT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableISSUEREGISTER.AMOUNTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AMOUNT' in table 'ISSUEREGISTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableISSUEREGISTER.AMOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ITEMCODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableISSUEREGISTER.ITEMCODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ITEMCODE' in table 'ISSUEREGISTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableISSUEREGISTER.ITEMCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ITEMNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableISSUEREGISTER.ITEMNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ITEMNAME' in table 'ISSUEREGISTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableISSUEREGISTER.ITEMNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DBLAMT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableISSUEREGISTER.DBLAMTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DBLAMT' in table 'ISSUEREGISTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableISSUEREGISTER.DBLAMTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CONVVALUE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableISSUEREGISTER.CONVVALUEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONVVALUE' in table 'ISSUEREGISTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableISSUEREGISTER.CONVVALUEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CONV() As String
            Get
                Try 
                    Return CType(Me(Me.tableISSUEREGISTER.CONVColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONV' in table 'ISSUEREGISTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableISSUEREGISTER.CONVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FROMSTORENAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableISSUEREGISTER.FROMSTORENAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FROMSTORENAME' in table 'ISSUEREGISTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableISSUEREGISTER.FROMSTORENAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINDENTNONull() As Boolean
            Return Me.IsNull(Me.tableISSUEREGISTER.INDENTNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINDENTNONull()
            Me(Me.tableISSUEREGISTER.INDENTNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLOCATIONNAMENull() As Boolean
            Return Me.IsNull(Me.tableISSUEREGISTER.LOCATIONNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLOCATIONNAMENull()
            Me(Me.tableISSUEREGISTER.LOCATIONNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDOCDETAILSNull() As Boolean
            Return Me.IsNull(Me.tableISSUEREGISTER.DOCDETAILSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDOCDETAILSNull()
            Me(Me.tableISSUEREGISTER.DOCDETAILSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDOCDATENull() As Boolean
            Return Me.IsNull(Me.tableISSUEREGISTER.DOCDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDOCDATENull()
            Me(Me.tableISSUEREGISTER.DOCDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGROUPDESCNull() As Boolean
            Return Me.IsNull(Me.tableISSUEREGISTER.GROUPDESCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGROUPDESCNull()
            Me(Me.tableISSUEREGISTER.GROUPDESCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUOMNull() As Boolean
            Return Me.IsNull(Me.tableISSUEREGISTER.UOMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUOMNull()
            Me(Me.tableISSUEREGISTER.UOMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQTYNull() As Boolean
            Return Me.IsNull(Me.tableISSUEREGISTER.QTYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQTYNull()
            Me(Me.tableISSUEREGISTER.QTYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRATENull() As Boolean
            Return Me.IsNull(Me.tableISSUEREGISTER.RATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRATENull()
            Me(Me.tableISSUEREGISTER.RATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAMOUNTNull() As Boolean
            Return Me.IsNull(Me.tableISSUEREGISTER.AMOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAMOUNTNull()
            Me(Me.tableISSUEREGISTER.AMOUNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsITEMCODENull() As Boolean
            Return Me.IsNull(Me.tableISSUEREGISTER.ITEMCODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetITEMCODENull()
            Me(Me.tableISSUEREGISTER.ITEMCODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsITEMNAMENull() As Boolean
            Return Me.IsNull(Me.tableISSUEREGISTER.ITEMNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetITEMNAMENull()
            Me(Me.tableISSUEREGISTER.ITEMNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDBLAMTNull() As Boolean
            Return Me.IsNull(Me.tableISSUEREGISTER.DBLAMTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDBLAMTNull()
            Me(Me.tableISSUEREGISTER.DBLAMTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCONVVALUENull() As Boolean
            Return Me.IsNull(Me.tableISSUEREGISTER.CONVVALUEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCONVVALUENull()
            Me(Me.tableISSUEREGISTER.CONVVALUEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCONVNull() As Boolean
            Return Me.IsNull(Me.tableISSUEREGISTER.CONVColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCONVNull()
            Me(Me.tableISSUEREGISTER.CONVColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFROMSTORENAMENull() As Boolean
            Return Me.IsNull(Me.tableISSUEREGISTER.FROMSTORENAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFROMSTORENAMENull()
            Me(Me.tableISSUEREGISTER.FROMSTORENAMEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class VIEWSTOCKADJUSTMENTRow
        Inherits Global.System.Data.DataRow
        
        Private tableVIEWSTOCKADJUSTMENT As VIEWSTOCKADJUSTMENTDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVIEWSTOCKADJUSTMENT = CType(Me.Table,VIEWSTOCKADJUSTMENTDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STORELOCATIONDESC() As String
            Get
                Return CType(Me(Me.tableVIEWSTOCKADJUSTMENT.STORELOCATIONDESCColumn),String)
            End Get
            Set
                Me(Me.tableVIEWSTOCKADJUSTMENT.STORELOCATIONDESCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DOCDETAILS() As String
            Get
                Return CType(Me(Me.tableVIEWSTOCKADJUSTMENT.DOCDETAILSColumn),String)
            End Get
            Set
                Me(Me.tableVIEWSTOCKADJUSTMENT.DOCDETAILSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DOCDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEWSTOCKADJUSTMENT.DOCDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DOCDATE' in table 'VIEWSTOCKADJUSTMENT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEWSTOCKADJUSTMENT.DOCDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ITEMCODE() As String
            Get
                Return CType(Me(Me.tableVIEWSTOCKADJUSTMENT.ITEMCODEColumn),String)
            End Get
            Set
                Me(Me.tableVIEWSTOCKADJUSTMENT.ITEMCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ITEMNAME() As String
            Get
                Return CType(Me(Me.tableVIEWSTOCKADJUSTMENT.ITEMNAMEColumn),String)
            End Get
            Set
                Me(Me.tableVIEWSTOCKADJUSTMENT.ITEMNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UOM() As String
            Get
                Return CType(Me(Me.tableVIEWSTOCKADJUSTMENT.UOMColumn),String)
            End Get
            Set
                Me(Me.tableVIEWSTOCKADJUSTMENT.UOMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STOCKINHAND() As Decimal
            Get
                Return CType(Me(Me.tableVIEWSTOCKADJUSTMENT.STOCKINHANDColumn),Decimal)
            End Get
            Set
                Me(Me.tableVIEWSTOCKADJUSTMENT.STOCKINHANDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PHYSICALSTOCK() As Decimal
            Get
                Return CType(Me(Me.tableVIEWSTOCKADJUSTMENT.PHYSICALSTOCKColumn),Decimal)
            End Get
            Set
                Me(Me.tableVIEWSTOCKADJUSTMENT.PHYSICALSTOCKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ADJUSTEDSTOCK() As Decimal
            Get
                Return CType(Me(Me.tableVIEWSTOCKADJUSTMENT.ADJUSTEDSTOCKColumn),Decimal)
            End Get
            Set
                Me(Me.tableVIEWSTOCKADJUSTMENT.ADJUSTEDSTOCKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RATE() As Decimal
            Get
                Return CType(Me(Me.tableVIEWSTOCKADJUSTMENT.RATEColumn),Decimal)
            End Get
            Set
                Me(Me.tableVIEWSTOCKADJUSTMENT.RATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AMOUNT() As Decimal
            Get
                Return CType(Me(Me.tableVIEWSTOCKADJUSTMENT.AMOUNTColumn),Decimal)
            End Get
            Set
                Me(Me.tableVIEWSTOCKADJUSTMENT.AMOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDOCDATENull() As Boolean
            Return Me.IsNull(Me.tableVIEWSTOCKADJUSTMENT.DOCDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDOCDATENull()
            Me(Me.tableVIEWSTOCKADJUSTMENT.DOCDATEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class VIEWSTOCKREGISTERRow
        Inherits Global.System.Data.DataRow
        
        Private tableVIEWSTOCKREGISTER As VIEWSTOCKREGISTERDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVIEWSTOCKREGISTER = CType(Me.Table,VIEWSTOCKREGISTERDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FROMSTOREDESC() As String
            Get
                Return CType(Me(Me.tableVIEWSTOCKREGISTER.FROMSTOREDESCColumn),String)
            End Get
            Set
                Me(Me.tableVIEWSTOCKREGISTER.FROMSTOREDESCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TOSTOREDESC() As String
            Get
                Return CType(Me(Me.tableVIEWSTOCKREGISTER.TOSTOREDESCColumn),String)
            End Get
            Set
                Me(Me.tableVIEWSTOCKREGISTER.TOSTOREDESCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DOCTYPE() As String
            Get
                Return CType(Me(Me.tableVIEWSTOCKREGISTER.DOCTYPEColumn),String)
            End Get
            Set
                Me(Me.tableVIEWSTOCKREGISTER.DOCTYPEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CHALLENNO() As String
            Get
                Return CType(Me(Me.tableVIEWSTOCKREGISTER.CHALLENNOColumn),String)
            End Get
            Set
                Me(Me.tableVIEWSTOCKREGISTER.CHALLENNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CHALLENDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEWSTOCKREGISTER.CHALLENDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CHALLENDATE' in table 'VIEWSTOCKREGISTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEWSTOCKREGISTER.CHALLENDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DOCDETAILS() As String
            Get
                Return CType(Me(Me.tableVIEWSTOCKREGISTER.DOCDETAILSColumn),String)
            End Get
            Set
                Me(Me.tableVIEWSTOCKREGISTER.DOCDETAILSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DOCDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEWSTOCKREGISTER.DOCDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DOCDATE' in table 'VIEWSTOCKREGISTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEWSTOCKREGISTER.DOCDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ITEMCODE() As String
            Get
                Return CType(Me(Me.tableVIEWSTOCKREGISTER.ITEMCODEColumn),String)
            End Get
            Set
                Me(Me.tableVIEWSTOCKREGISTER.ITEMCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ITEMNAME() As String
            Get
                Return CType(Me(Me.tableVIEWSTOCKREGISTER.ITEMNAMEColumn),String)
            End Get
            Set
                Me(Me.tableVIEWSTOCKREGISTER.ITEMNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UOM() As String
            Get
                Return CType(Me(Me.tableVIEWSTOCKREGISTER.UOMColumn),String)
            End Get
            Set
                Me(Me.tableVIEWSTOCKREGISTER.UOMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QTY() As Decimal
            Get
                Return CType(Me(Me.tableVIEWSTOCKREGISTER.QTYColumn),Decimal)
            End Get
            Set
                Me(Me.tableVIEWSTOCKREGISTER.QTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RATE() As Decimal
            Get
                Return CType(Me(Me.tableVIEWSTOCKREGISTER.RATEColumn),Decimal)
            End Get
            Set
                Me(Me.tableVIEWSTOCKREGISTER.RATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AMOUNT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVIEWSTOCKREGISTER.AMOUNTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AMOUNT' in table 'VIEWSTOCKREGISTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEWSTOCKREGISTER.AMOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCHALLENDATENull() As Boolean
            Return Me.IsNull(Me.tableVIEWSTOCKREGISTER.CHALLENDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCHALLENDATENull()
            Me(Me.tableVIEWSTOCKREGISTER.CHALLENDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDOCDATENull() As Boolean
            Return Me.IsNull(Me.tableVIEWSTOCKREGISTER.DOCDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDOCDATENull()
            Me(Me.tableVIEWSTOCKREGISTER.DOCDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAMOUNTNull() As Boolean
            Return Me.IsNull(Me.tableVIEWSTOCKREGISTER.AMOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAMOUNTNull()
            Me(Me.tableVIEWSTOCKREGISTER.AMOUNTColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class Inv_view_Pending_PurRow
        Inherits Global.System.Data.DataRow
        
        Private tableInv_view_Pending_Pur As Inv_view_Pending_PurDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableInv_view_Pending_Pur = CType(Me.Table,Inv_view_Pending_PurDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property pono() As String
            Get
                Try 
                    Return CType(Me(Me.tableInv_view_Pending_Pur.ponoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pono' in table 'Inv_view_Pending_Pur' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInv_view_Pending_Pur.ponoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property podate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableInv_view_Pending_Pur.podateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'podate' in table 'Inv_view_Pending_Pur' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInv_view_Pending_Pur.podateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property podepartment() As String
            Get
                Try 
                    Return CType(Me(Me.tableInv_view_Pending_Pur.podepartmentColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'podepartment' in table 'Inv_view_Pending_Pur' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInv_view_Pending_Pur.podepartmentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property povendorcode() As String
            Get
                Try 
                    Return CType(Me(Me.tableInv_view_Pending_Pur.povendorcodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'povendorcode' in table 'Inv_view_Pending_Pur' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInv_view_Pending_Pur.povendorcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property itemcode() As String
            Get
                Try 
                    Return CType(Me(Me.tableInv_view_Pending_Pur.itemcodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'itemcode' in table 'Inv_view_Pending_Pur' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInv_view_Pending_Pur.itemcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property quantity() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableInv_view_Pending_Pur.quantityColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'quantity' in table 'Inv_view_Pending_Pur' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInv_view_Pending_Pur.quantityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property rate() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableInv_view_Pending_Pur.rateColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'rate' in table 'Inv_view_Pending_Pur' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInv_view_Pending_Pur.rateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property amount() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableInv_view_Pending_Pur.amountColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'amount' in table 'Inv_view_Pending_Pur' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInv_view_Pending_Pur.amountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property vatamt() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableInv_view_Pending_Pur.vatamtColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'vatamt' in table 'Inv_view_Pending_Pur' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInv_view_Pending_Pur.vatamtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property discamt() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableInv_view_Pending_Pur.discamtColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'discamt' in table 'Inv_view_Pending_Pur' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInv_view_Pending_Pur.discamtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsponoNull() As Boolean
            Return Me.IsNull(Me.tableInv_view_Pending_Pur.ponoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetponoNull()
            Me(Me.tableInv_view_Pending_Pur.ponoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IspodateNull() As Boolean
            Return Me.IsNull(Me.tableInv_view_Pending_Pur.podateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetpodateNull()
            Me(Me.tableInv_view_Pending_Pur.podateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IspodepartmentNull() As Boolean
            Return Me.IsNull(Me.tableInv_view_Pending_Pur.podepartmentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetpodepartmentNull()
            Me(Me.tableInv_view_Pending_Pur.podepartmentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IspovendorcodeNull() As Boolean
            Return Me.IsNull(Me.tableInv_view_Pending_Pur.povendorcodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetpovendorcodeNull()
            Me(Me.tableInv_view_Pending_Pur.povendorcodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsitemcodeNull() As Boolean
            Return Me.IsNull(Me.tableInv_view_Pending_Pur.itemcodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetitemcodeNull()
            Me(Me.tableInv_view_Pending_Pur.itemcodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsquantityNull() As Boolean
            Return Me.IsNull(Me.tableInv_view_Pending_Pur.quantityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetquantityNull()
            Me(Me.tableInv_view_Pending_Pur.quantityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsrateNull() As Boolean
            Return Me.IsNull(Me.tableInv_view_Pending_Pur.rateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetrateNull()
            Me(Me.tableInv_view_Pending_Pur.rateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsamountNull() As Boolean
            Return Me.IsNull(Me.tableInv_view_Pending_Pur.amountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetamountNull()
            Me(Me.tableInv_view_Pending_Pur.amountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsvatamtNull() As Boolean
            Return Me.IsNull(Me.tableInv_view_Pending_Pur.vatamtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetvatamtNull()
            Me(Me.tableInv_view_Pending_Pur.vatamtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdiscamtNull() As Boolean
            Return Me.IsNull(Me.tableInv_view_Pending_Pur.discamtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdiscamtNull()
            Me(Me.tableInv_view_Pending_Pur.discamtColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class INVENTORYITEMMASTERRow
        Inherits Global.System.Data.DataRow
        
        Private tableINVENTORYITEMMASTER As INVENTORYITEMMASTERDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableINVENTORYITEMMASTER = CType(Me.Table,INVENTORYITEMMASTERDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property itemcode() As String
            Get
                Return CType(Me(Me.tableINVENTORYITEMMASTER.itemcodeColumn),String)
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.itemcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property itemname() As String
            Get
                Return CType(Me(Me.tableINVENTORYITEMMASTER.itemnameColumn),String)
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.itemnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property _alias() As String
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.aliasColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'alias' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.aliasColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property groupcode() As String
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.groupcodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'groupcode' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.groupcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property groupname() As String
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.groupnameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'groupname' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.groupnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property subgroupcode() As String
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.subgroupcodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'subgroupcode' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.subgroupcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property subgroupname() As String
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.subgroupnameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'subgroupname' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.subgroupnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property subsubgroupcode() As String
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.subsubgroupcodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'subsubgroupcode' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.subsubgroupcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property subsubgroupname() As String
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.subsubgroupnameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'subsubgroupname' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.subsubgroupnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property reorderlevel() As Double
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.reorderlevelColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'reorderlevel' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.reorderlevelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property minqty() As Double
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.minqtyColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'minqty' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.minqtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property maxqty() As Double
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.maxqtyColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'maxqty' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.maxqtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property valuation() As String
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.valuationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'valuation' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.valuationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property purchaserate() As Double
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.purchaserateColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'purchaserate' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.purchaserateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property salerate() As Double
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.salerateColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'salerate' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.salerateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property stockuom() As String
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.stockuomColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'stockuom' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.stockuomColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property receiveuom() As String
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.receiveuomColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'receiveuom' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.receiveuomColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property saleuom() As String
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.saleuomColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'saleuom' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.saleuomColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property leadtime() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.leadtimeColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'leadtime' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.leadtimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property doubleuom() As String
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.doubleuomColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'doubleuom' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.doubleuomColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property opstock() As Double
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.opstockColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'opstock' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.opstockColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property opvalue() As Double
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.opvalueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'opvalue' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.opvalueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property convvalue() As Double
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.convvalueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'convvalue' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.convvalueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Freeze() As String
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.FreezeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Freeze' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.FreezeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TypeCode() As String
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.TypeCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TypeCode' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.TypeCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Adduser() As String
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.AdduserColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Adduser' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.AdduserColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Adddate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.AdddateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Adddate' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.AdddateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STORECODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.STORECODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STORECODE' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.STORECODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property closingqty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.closingqtyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'closingqty' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.closingqtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property closingval() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.closingvalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'closingval' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.closingvalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property rcptqty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.rcptqtyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'rcptqty' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.rcptqtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property rcptval() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.rcptvalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'rcptval' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.rcptvalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property issueqty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.issueqtyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'issueqty' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.issueqtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property issueval() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.issuevalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'issueval' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.issuevalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property abc() As String
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.abcColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'abc' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.abcColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property fsm() As String
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.fsmColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'fsm' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.fsmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property prefix() As String
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.prefixColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'prefix' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.prefixColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property wefdate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.wefdateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'wefdate' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.wefdateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property stkoption() As String
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.stkoptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'stkoption' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.stkoptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property binlocation() As String
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.binlocationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'binlocation' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.binlocationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property category() As String
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.categoryColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'category' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.categoryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property selectopt() As String
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.selectoptColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'selectopt' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.selectoptColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STARTDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.STARTDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STARTDATE' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.STARTDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PEGS() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.PEGSColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PEGS' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.PEGSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ml() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.mlColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ml' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.mlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PEGSRATE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.PEGSRATEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PEGSRATE' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.PEGSRATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OPT() As String
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.OPTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OPT' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.OPTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property aprdrqty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.aprdrqtyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'aprdrqty' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.aprdrqtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property aprdrval() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.aprdrvalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'aprdrval' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.aprdrvalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property aprcrqty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.aprcrqtyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'aprcrqty' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.aprcrqtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property aprcrval() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.aprcrvalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'aprcrval' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.aprcrvalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property maydrqty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.maydrqtyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'maydrqty' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.maydrqtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property maydrval() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.maydrvalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'maydrval' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.maydrvalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property maycrqty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.maycrqtyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'maycrqty' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.maycrqtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property maycrval() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.maycrvalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'maycrval' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.maycrvalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property jundrqty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.jundrqtyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'jundrqty' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.jundrqtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property jundrval() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.jundrvalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'jundrval' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.jundrvalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property juncrqty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.juncrqtyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'juncrqty' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.juncrqtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property juncrval() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.juncrvalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'juncrval' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.juncrvalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property juldrqty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.juldrqtyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'juldrqty' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.juldrqtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property juldrval() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.juldrvalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'juldrval' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.juldrvalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property julcrqty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.julcrqtyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'julcrqty' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.julcrqtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property julcrval() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.julcrvalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'julcrval' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.julcrvalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property augdrqty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.augdrqtyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'augdrqty' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.augdrqtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property augdrval() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.augdrvalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'augdrval' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.augdrvalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property augcrqty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.augcrqtyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'augcrqty' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.augcrqtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property augcrval() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.augcrvalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'augcrval' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.augcrvalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property sepdrqty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.sepdrqtyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sepdrqty' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.sepdrqtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property sepdrval() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.sepdrvalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sepdrval' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.sepdrvalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property sepcrqty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.sepcrqtyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sepcrqty' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.sepcrqtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property sepcrval() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.sepcrvalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sepcrval' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.sepcrvalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property octdrqty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.octdrqtyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'octdrqty' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.octdrqtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property octdrval() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.octdrvalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'octdrval' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.octdrvalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property octcrqty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.octcrqtyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'octcrqty' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.octcrqtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property octcrval() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.octcrvalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'octcrval' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.octcrvalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property novcrqty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.novcrqtyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'novcrqty' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.novcrqtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property novcrval() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.novcrvalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'novcrval' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.novcrvalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property novdrqty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.novdrqtyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'novdrqty' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.novdrqtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property novdrval() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.novdrvalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'novdrval' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.novdrvalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property decdrqty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.decdrqtyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'decdrqty' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.decdrqtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property decdrval() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.decdrvalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'decdrval' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.decdrvalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property deccrqty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.deccrqtyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'deccrqty' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.deccrqtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property deccrval() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.deccrvalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'deccrval' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.deccrvalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property jandrqty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.jandrqtyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'jandrqty' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.jandrqtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property jandrval() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.jandrvalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'jandrval' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.jandrvalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property jancrqty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.jancrqtyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'jancrqty' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.jancrqtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property jancrval() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.jancrvalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'jancrval' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.jancrvalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property febdrqty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.febdrqtyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'febdrqty' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.febdrqtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property febdrval() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.febdrvalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'febdrval' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.febdrvalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property febcrqty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.febcrqtyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'febcrqty' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.febcrqtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property febcrval() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.febcrvalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'febcrval' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.febcrvalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property mardrqty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.mardrqtyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'mardrqty' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.mardrqtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property mardrval() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.mardrvalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'mardrval' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.mardrvalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property marcrqty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.marcrqtyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'marcrqty' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.marcrqtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property marcrval() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.marcrvalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'marcrval' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.marcrvalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property clstock() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.clstockColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'clstock' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.clstockColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property clvalue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINVENTORYITEMMASTER.clvalueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'clvalue' in table 'INVENTORYITEMMASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVENTORYITEMMASTER.clvalueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Is_aliasNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.aliasColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Set_aliasNull()
            Me(Me.tableINVENTORYITEMMASTER.aliasColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsgroupcodeNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.groupcodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetgroupcodeNull()
            Me(Me.tableINVENTORYITEMMASTER.groupcodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsgroupnameNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.groupnameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetgroupnameNull()
            Me(Me.tableINVENTORYITEMMASTER.groupnameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IssubgroupcodeNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.subgroupcodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetsubgroupcodeNull()
            Me(Me.tableINVENTORYITEMMASTER.subgroupcodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IssubgroupnameNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.subgroupnameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetsubgroupnameNull()
            Me(Me.tableINVENTORYITEMMASTER.subgroupnameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IssubsubgroupcodeNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.subsubgroupcodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetsubsubgroupcodeNull()
            Me(Me.tableINVENTORYITEMMASTER.subsubgroupcodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IssubsubgroupnameNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.subsubgroupnameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetsubsubgroupnameNull()
            Me(Me.tableINVENTORYITEMMASTER.subsubgroupnameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsreorderlevelNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.reorderlevelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetreorderlevelNull()
            Me(Me.tableINVENTORYITEMMASTER.reorderlevelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsminqtyNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.minqtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetminqtyNull()
            Me(Me.tableINVENTORYITEMMASTER.minqtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsmaxqtyNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.maxqtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetmaxqtyNull()
            Me(Me.tableINVENTORYITEMMASTER.maxqtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsvaluationNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.valuationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetvaluationNull()
            Me(Me.tableINVENTORYITEMMASTER.valuationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IspurchaserateNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.purchaserateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetpurchaserateNull()
            Me(Me.tableINVENTORYITEMMASTER.purchaserateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IssalerateNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.salerateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetsalerateNull()
            Me(Me.tableINVENTORYITEMMASTER.salerateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsstockuomNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.stockuomColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetstockuomNull()
            Me(Me.tableINVENTORYITEMMASTER.stockuomColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsreceiveuomNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.receiveuomColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetreceiveuomNull()
            Me(Me.tableINVENTORYITEMMASTER.receiveuomColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IssaleuomNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.saleuomColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetsaleuomNull()
            Me(Me.tableINVENTORYITEMMASTER.saleuomColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsleadtimeNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.leadtimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetleadtimeNull()
            Me(Me.tableINVENTORYITEMMASTER.leadtimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdoubleuomNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.doubleuomColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdoubleuomNull()
            Me(Me.tableINVENTORYITEMMASTER.doubleuomColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsopstockNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.opstockColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetopstockNull()
            Me(Me.tableINVENTORYITEMMASTER.opstockColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsopvalueNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.opvalueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetopvalueNull()
            Me(Me.tableINVENTORYITEMMASTER.opvalueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsconvvalueNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.convvalueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetconvvalueNull()
            Me(Me.tableINVENTORYITEMMASTER.convvalueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFreezeNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.FreezeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFreezeNull()
            Me(Me.tableINVENTORYITEMMASTER.FreezeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTypeCodeNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.TypeCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTypeCodeNull()
            Me(Me.tableINVENTORYITEMMASTER.TypeCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAdduserNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.AdduserColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAdduserNull()
            Me(Me.tableINVENTORYITEMMASTER.AdduserColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAdddateNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.AdddateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAdddateNull()
            Me(Me.tableINVENTORYITEMMASTER.AdddateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTORECODENull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.STORECODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTORECODENull()
            Me(Me.tableINVENTORYITEMMASTER.STORECODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsclosingqtyNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.closingqtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetclosingqtyNull()
            Me(Me.tableINVENTORYITEMMASTER.closingqtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsclosingvalNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.closingvalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetclosingvalNull()
            Me(Me.tableINVENTORYITEMMASTER.closingvalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsrcptqtyNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.rcptqtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetrcptqtyNull()
            Me(Me.tableINVENTORYITEMMASTER.rcptqtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsrcptvalNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.rcptvalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetrcptvalNull()
            Me(Me.tableINVENTORYITEMMASTER.rcptvalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsissueqtyNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.issueqtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetissueqtyNull()
            Me(Me.tableINVENTORYITEMMASTER.issueqtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsissuevalNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.issuevalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetissuevalNull()
            Me(Me.tableINVENTORYITEMMASTER.issuevalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsabcNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.abcColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetabcNull()
            Me(Me.tableINVENTORYITEMMASTER.abcColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsfsmNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.fsmColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetfsmNull()
            Me(Me.tableINVENTORYITEMMASTER.fsmColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsprefixNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.prefixColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetprefixNull()
            Me(Me.tableINVENTORYITEMMASTER.prefixColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IswefdateNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.wefdateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetwefdateNull()
            Me(Me.tableINVENTORYITEMMASTER.wefdateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsstkoptionNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.stkoptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetstkoptionNull()
            Me(Me.tableINVENTORYITEMMASTER.stkoptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsbinlocationNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.binlocationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetbinlocationNull()
            Me(Me.tableINVENTORYITEMMASTER.binlocationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscategoryNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.categoryColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcategoryNull()
            Me(Me.tableINVENTORYITEMMASTER.categoryColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsselectoptNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.selectoptColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetselectoptNull()
            Me(Me.tableINVENTORYITEMMASTER.selectoptColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTARTDATENull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.STARTDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTARTDATENull()
            Me(Me.tableINVENTORYITEMMASTER.STARTDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPEGSNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.PEGSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPEGSNull()
            Me(Me.tableINVENTORYITEMMASTER.PEGSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsmlNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.mlColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetmlNull()
            Me(Me.tableINVENTORYITEMMASTER.mlColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPEGSRATENull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.PEGSRATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPEGSRATENull()
            Me(Me.tableINVENTORYITEMMASTER.PEGSRATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOPTNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.OPTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOPTNull()
            Me(Me.tableINVENTORYITEMMASTER.OPTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsaprdrqtyNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.aprdrqtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetaprdrqtyNull()
            Me(Me.tableINVENTORYITEMMASTER.aprdrqtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsaprdrvalNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.aprdrvalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetaprdrvalNull()
            Me(Me.tableINVENTORYITEMMASTER.aprdrvalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsaprcrqtyNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.aprcrqtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetaprcrqtyNull()
            Me(Me.tableINVENTORYITEMMASTER.aprcrqtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsaprcrvalNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.aprcrvalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetaprcrvalNull()
            Me(Me.tableINVENTORYITEMMASTER.aprcrvalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsmaydrqtyNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.maydrqtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetmaydrqtyNull()
            Me(Me.tableINVENTORYITEMMASTER.maydrqtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsmaydrvalNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.maydrvalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetmaydrvalNull()
            Me(Me.tableINVENTORYITEMMASTER.maydrvalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsmaycrqtyNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.maycrqtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetmaycrqtyNull()
            Me(Me.tableINVENTORYITEMMASTER.maycrqtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsmaycrvalNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.maycrvalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetmaycrvalNull()
            Me(Me.tableINVENTORYITEMMASTER.maycrvalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsjundrqtyNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.jundrqtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetjundrqtyNull()
            Me(Me.tableINVENTORYITEMMASTER.jundrqtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsjundrvalNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.jundrvalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetjundrvalNull()
            Me(Me.tableINVENTORYITEMMASTER.jundrvalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsjuncrqtyNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.juncrqtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetjuncrqtyNull()
            Me(Me.tableINVENTORYITEMMASTER.juncrqtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsjuncrvalNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.juncrvalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetjuncrvalNull()
            Me(Me.tableINVENTORYITEMMASTER.juncrvalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsjuldrqtyNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.juldrqtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetjuldrqtyNull()
            Me(Me.tableINVENTORYITEMMASTER.juldrqtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsjuldrvalNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.juldrvalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetjuldrvalNull()
            Me(Me.tableINVENTORYITEMMASTER.juldrvalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsjulcrqtyNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.julcrqtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetjulcrqtyNull()
            Me(Me.tableINVENTORYITEMMASTER.julcrqtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsjulcrvalNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.julcrvalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetjulcrvalNull()
            Me(Me.tableINVENTORYITEMMASTER.julcrvalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsaugdrqtyNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.augdrqtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetaugdrqtyNull()
            Me(Me.tableINVENTORYITEMMASTER.augdrqtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsaugdrvalNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.augdrvalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetaugdrvalNull()
            Me(Me.tableINVENTORYITEMMASTER.augdrvalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsaugcrqtyNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.augcrqtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetaugcrqtyNull()
            Me(Me.tableINVENTORYITEMMASTER.augcrqtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsaugcrvalNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.augcrvalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetaugcrvalNull()
            Me(Me.tableINVENTORYITEMMASTER.augcrvalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IssepdrqtyNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.sepdrqtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetsepdrqtyNull()
            Me(Me.tableINVENTORYITEMMASTER.sepdrqtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IssepdrvalNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.sepdrvalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetsepdrvalNull()
            Me(Me.tableINVENTORYITEMMASTER.sepdrvalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IssepcrqtyNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.sepcrqtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetsepcrqtyNull()
            Me(Me.tableINVENTORYITEMMASTER.sepcrqtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IssepcrvalNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.sepcrvalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetsepcrvalNull()
            Me(Me.tableINVENTORYITEMMASTER.sepcrvalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsoctdrqtyNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.octdrqtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetoctdrqtyNull()
            Me(Me.tableINVENTORYITEMMASTER.octdrqtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsoctdrvalNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.octdrvalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetoctdrvalNull()
            Me(Me.tableINVENTORYITEMMASTER.octdrvalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsoctcrqtyNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.octcrqtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetoctcrqtyNull()
            Me(Me.tableINVENTORYITEMMASTER.octcrqtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsoctcrvalNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.octcrvalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetoctcrvalNull()
            Me(Me.tableINVENTORYITEMMASTER.octcrvalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsnovcrqtyNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.novcrqtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetnovcrqtyNull()
            Me(Me.tableINVENTORYITEMMASTER.novcrqtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsnovcrvalNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.novcrvalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetnovcrvalNull()
            Me(Me.tableINVENTORYITEMMASTER.novcrvalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsnovdrqtyNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.novdrqtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetnovdrqtyNull()
            Me(Me.tableINVENTORYITEMMASTER.novdrqtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsnovdrvalNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.novdrvalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetnovdrvalNull()
            Me(Me.tableINVENTORYITEMMASTER.novdrvalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdecdrqtyNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.decdrqtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdecdrqtyNull()
            Me(Me.tableINVENTORYITEMMASTER.decdrqtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdecdrvalNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.decdrvalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdecdrvalNull()
            Me(Me.tableINVENTORYITEMMASTER.decdrvalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdeccrqtyNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.deccrqtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdeccrqtyNull()
            Me(Me.tableINVENTORYITEMMASTER.deccrqtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdeccrvalNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.deccrvalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdeccrvalNull()
            Me(Me.tableINVENTORYITEMMASTER.deccrvalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsjandrqtyNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.jandrqtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetjandrqtyNull()
            Me(Me.tableINVENTORYITEMMASTER.jandrqtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsjandrvalNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.jandrvalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetjandrvalNull()
            Me(Me.tableINVENTORYITEMMASTER.jandrvalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsjancrqtyNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.jancrqtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetjancrqtyNull()
            Me(Me.tableINVENTORYITEMMASTER.jancrqtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsjancrvalNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.jancrvalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetjancrvalNull()
            Me(Me.tableINVENTORYITEMMASTER.jancrvalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsfebdrqtyNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.febdrqtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetfebdrqtyNull()
            Me(Me.tableINVENTORYITEMMASTER.febdrqtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsfebdrvalNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.febdrvalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetfebdrvalNull()
            Me(Me.tableINVENTORYITEMMASTER.febdrvalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsfebcrqtyNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.febcrqtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetfebcrqtyNull()
            Me(Me.tableINVENTORYITEMMASTER.febcrqtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsfebcrvalNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.febcrvalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetfebcrvalNull()
            Me(Me.tableINVENTORYITEMMASTER.febcrvalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsmardrqtyNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.mardrqtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetmardrqtyNull()
            Me(Me.tableINVENTORYITEMMASTER.mardrqtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsmardrvalNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.mardrvalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetmardrvalNull()
            Me(Me.tableINVENTORYITEMMASTER.mardrvalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsmarcrqtyNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.marcrqtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetmarcrqtyNull()
            Me(Me.tableINVENTORYITEMMASTER.marcrqtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsmarcrvalNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.marcrvalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetmarcrvalNull()
            Me(Me.tableINVENTORYITEMMASTER.marcrvalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsclstockNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.clstockColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetclstockNull()
            Me(Me.tableINVENTORYITEMMASTER.clstockColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsclvalueNull() As Boolean
            Return Me.IsNull(Me.tableINVENTORYITEMMASTER.clvalueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetclvalueNull()
            Me(Me.tableINVENTORYITEMMASTER.clvalueColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class PO_VIEW_VENDORMASTERRow
        Inherits Global.System.Data.DataRow
        
        Private tablePO_VIEW_VENDORMASTER As PO_VIEW_VENDORMASTERDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePO_VIEW_VENDORMASTER = CType(Me.Table,PO_VIEW_VENDORMASTERDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property vendorcode() As String
            Get
                Return CType(Me(Me.tablePO_VIEW_VENDORMASTER.vendorcodeColumn),String)
            End Get
            Set
                Me(Me.tablePO_VIEW_VENDORMASTER.vendorcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property vendorname() As String
            Get
                Return CType(Me(Me.tablePO_VIEW_VENDORMASTER.vendornameColumn),String)
            End Get
            Set
                Me(Me.tablePO_VIEW_VENDORMASTER.vendornameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property address() As String
            Get
                Return CType(Me(Me.tablePO_VIEW_VENDORMASTER.addressColumn),String)
            End Get
            Set
                Me(Me.tablePO_VIEW_VENDORMASTER.addressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property city() As String
            Get
                Return CType(Me(Me.tablePO_VIEW_VENDORMASTER.cityColumn),String)
            End Get
            Set
                Me(Me.tablePO_VIEW_VENDORMASTER.cityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property state() As String
            Get
                Return CType(Me(Me.tablePO_VIEW_VENDORMASTER.stateColumn),String)
            End Get
            Set
                Me(Me.tablePO_VIEW_VENDORMASTER.stateColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class INV_PENDING_PURCHASERow
        Inherits Global.System.Data.DataRow
        
        Private tableINV_PENDING_PURCHASE As INV_PENDING_PURCHASEDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableINV_PENDING_PURCHASE = CType(Me.Table,INV_PENDING_PURCHASEDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property pono() As String
            Get
                Try 
                    Return CType(Me(Me.tableINV_PENDING_PURCHASE.ponoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pono' in table 'INV_PENDING_PURCHASE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINV_PENDING_PURCHASE.ponoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property podate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableINV_PENDING_PURCHASE.podateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'podate' in table 'INV_PENDING_PURCHASE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINV_PENDING_PURCHASE.podateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property podepartment() As String
            Get
                Try 
                    Return CType(Me(Me.tableINV_PENDING_PURCHASE.podepartmentColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'podepartment' in table 'INV_PENDING_PURCHASE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINV_PENDING_PURCHASE.podepartmentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property povendorcode() As String
            Get
                Try 
                    Return CType(Me(Me.tableINV_PENDING_PURCHASE.povendorcodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'povendorcode' in table 'INV_PENDING_PURCHASE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINV_PENDING_PURCHASE.povendorcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property itemcode() As String
            Get
                Try 
                    Return CType(Me(Me.tableINV_PENDING_PURCHASE.itemcodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'itemcode' in table 'INV_PENDING_PURCHASE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINV_PENDING_PURCHASE.itemcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ITEMNAME() As String
            Get
                Return CType(Me(Me.tableINV_PENDING_PURCHASE.ITEMNAMEColumn),String)
            End Get
            Set
                Me(Me.tableINV_PENDING_PURCHASE.ITEMNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property quantity() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINV_PENDING_PURCHASE.quantityColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'quantity' in table 'INV_PENDING_PURCHASE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINV_PENDING_PURCHASE.quantityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property rate() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINV_PENDING_PURCHASE.rateColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'rate' in table 'INV_PENDING_PURCHASE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINV_PENDING_PURCHASE.rateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property amount() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINV_PENDING_PURCHASE.amountColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'amount' in table 'INV_PENDING_PURCHASE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINV_PENDING_PURCHASE.amountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property vatamt() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINV_PENDING_PURCHASE.vatamtColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'vatamt' in table 'INV_PENDING_PURCHASE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINV_PENDING_PURCHASE.vatamtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property discamt() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINV_PENDING_PURCHASE.discamtColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'discamt' in table 'INV_PENDING_PURCHASE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINV_PENDING_PURCHASE.discamtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VENDORNAME() As String
            Get
                Return CType(Me(Me.tableINV_PENDING_PURCHASE.VENDORNAMEColumn),String)
            End Get
            Set
                Me(Me.tableINV_PENDING_PURCHASE.VENDORNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsponoNull() As Boolean
            Return Me.IsNull(Me.tableINV_PENDING_PURCHASE.ponoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetponoNull()
            Me(Me.tableINV_PENDING_PURCHASE.ponoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IspodateNull() As Boolean
            Return Me.IsNull(Me.tableINV_PENDING_PURCHASE.podateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetpodateNull()
            Me(Me.tableINV_PENDING_PURCHASE.podateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IspodepartmentNull() As Boolean
            Return Me.IsNull(Me.tableINV_PENDING_PURCHASE.podepartmentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetpodepartmentNull()
            Me(Me.tableINV_PENDING_PURCHASE.podepartmentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IspovendorcodeNull() As Boolean
            Return Me.IsNull(Me.tableINV_PENDING_PURCHASE.povendorcodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetpovendorcodeNull()
            Me(Me.tableINV_PENDING_PURCHASE.povendorcodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsitemcodeNull() As Boolean
            Return Me.IsNull(Me.tableINV_PENDING_PURCHASE.itemcodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetitemcodeNull()
            Me(Me.tableINV_PENDING_PURCHASE.itemcodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsquantityNull() As Boolean
            Return Me.IsNull(Me.tableINV_PENDING_PURCHASE.quantityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetquantityNull()
            Me(Me.tableINV_PENDING_PURCHASE.quantityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsrateNull() As Boolean
            Return Me.IsNull(Me.tableINV_PENDING_PURCHASE.rateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetrateNull()
            Me(Me.tableINV_PENDING_PURCHASE.rateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsamountNull() As Boolean
            Return Me.IsNull(Me.tableINV_PENDING_PURCHASE.amountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetamountNull()
            Me(Me.tableINV_PENDING_PURCHASE.amountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsvatamtNull() As Boolean
            Return Me.IsNull(Me.tableINV_PENDING_PURCHASE.vatamtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetvatamtNull()
            Me(Me.tableINV_PENDING_PURCHASE.vatamtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdiscamtNull() As Boolean
            Return Me.IsNull(Me.tableINV_PENDING_PURCHASE.discamtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdiscamtNull()
            Me(Me.tableINV_PENDING_PURCHASE.discamtColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class VIEW_FOCREPORTRow
        Inherits Global.System.Data.DataRow
        
        Private tableVIEW_FOCREPORT As VIEW_FOCREPORTDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVIEW_FOCREPORT = CType(Me.Table,VIEW_FOCREPORTDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COMPANYCODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_FOCREPORT.COMPANYCODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COMPANYCODE' in table 'VIEW_FOCREPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_FOCREPORT.COMPANYCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COMPANYNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_FOCREPORT.COMPANYNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COMPANYNAME' in table 'VIEW_FOCREPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_FOCREPORT.COMPANYNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GRNDETAILS() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_FOCREPORT.GRNDETAILSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GRNDETAILS' in table 'VIEW_FOCREPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_FOCREPORT.GRNDETAILSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GRNDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_FOCREPORT.GRNDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GRNDATE' in table 'VIEW_FOCREPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_FOCREPORT.GRNDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ITEMCODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_FOCREPORT.ITEMCODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ITEMCODE' in table 'VIEW_FOCREPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_FOCREPORT.ITEMCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ITEMNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_FOCREPORT.ITEMNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ITEMNAME' in table 'VIEW_FOCREPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_FOCREPORT.ITEMNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QTY() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_FOCREPORT.QTYColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QTY' in table 'VIEW_FOCREPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_FOCREPORT.QTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RATE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_FOCREPORT.RATEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RATE' in table 'VIEW_FOCREPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_FOCREPORT.RATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VALUE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_FOCREPORT.VALUEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VALUE' in table 'VIEW_FOCREPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_FOCREPORT.VALUEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FOCFLAG() As String
            Get
                Return CType(Me(Me.tableVIEW_FOCREPORT.FOCFLAGColumn),String)
            End Get
            Set
                Me(Me.tableVIEW_FOCREPORT.FOCFLAGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOMPANYCODENull() As Boolean
            Return Me.IsNull(Me.tableVIEW_FOCREPORT.COMPANYCODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOMPANYCODENull()
            Me(Me.tableVIEW_FOCREPORT.COMPANYCODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOMPANYNAMENull() As Boolean
            Return Me.IsNull(Me.tableVIEW_FOCREPORT.COMPANYNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOMPANYNAMENull()
            Me(Me.tableVIEW_FOCREPORT.COMPANYNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGRNDETAILSNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_FOCREPORT.GRNDETAILSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGRNDETAILSNull()
            Me(Me.tableVIEW_FOCREPORT.GRNDETAILSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGRNDATENull() As Boolean
            Return Me.IsNull(Me.tableVIEW_FOCREPORT.GRNDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGRNDATENull()
            Me(Me.tableVIEW_FOCREPORT.GRNDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsITEMCODENull() As Boolean
            Return Me.IsNull(Me.tableVIEW_FOCREPORT.ITEMCODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetITEMCODENull()
            Me(Me.tableVIEW_FOCREPORT.ITEMCODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsITEMNAMENull() As Boolean
            Return Me.IsNull(Me.tableVIEW_FOCREPORT.ITEMNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetITEMNAMENull()
            Me(Me.tableVIEW_FOCREPORT.ITEMNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQTYNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_FOCREPORT.QTYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQTYNull()
            Me(Me.tableVIEW_FOCREPORT.QTYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRATENull() As Boolean
            Return Me.IsNull(Me.tableVIEW_FOCREPORT.RATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRATENull()
            Me(Me.tableVIEW_FOCREPORT.RATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVALUENull() As Boolean
            Return Me.IsNull(Me.tableVIEW_FOCREPORT.VALUEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVALUENull()
            Me(Me.tableVIEW_FOCREPORT.VALUEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class Inv_ExiseRptRow
        Inherits Global.System.Data.DataRow
        
        Private tableInv_ExiseRpt As Inv_ExiseRptDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableInv_ExiseRpt = CType(Me.Table,Inv_ExiseRptDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GROUPNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableInv_ExiseRpt.GROUPNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GROUPNAME' in table 'Inv_ExiseRpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInv_ExiseRpt.GROUPNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SUBGROUPNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableInv_ExiseRpt.SUBGROUPNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUBGROUPNAME' in table 'Inv_ExiseRpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInv_ExiseRpt.SUBGROUPNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OPqty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableInv_ExiseRpt.OPqtyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OPqty' in table 'Inv_ExiseRpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInv_ExiseRpt.OPqtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property recQty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableInv_ExiseRpt.recQtyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'recQty' in table 'Inv_ExiseRpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInv_ExiseRpt.recQtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Total() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableInv_ExiseRpt.TotalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Total' in table 'Inv_ExiseRpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInv_ExiseRpt.TotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Sales() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableInv_ExiseRpt.SalesColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sales' in table 'Inv_ExiseRpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInv_ExiseRpt.SalesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ISSUE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableInv_ExiseRpt.ISSUEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ISSUE' in table 'Inv_ExiseRpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInv_ExiseRpt.ISSUEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Closing() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableInv_ExiseRpt.ClosingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Closing' in table 'Inv_ExiseRpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInv_ExiseRpt.ClosingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property priority() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableInv_ExiseRpt.priorityColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'priority' in table 'Inv_ExiseRpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableInv_ExiseRpt.priorityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGROUPNAMENull() As Boolean
            Return Me.IsNull(Me.tableInv_ExiseRpt.GROUPNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGROUPNAMENull()
            Me(Me.tableInv_ExiseRpt.GROUPNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSUBGROUPNAMENull() As Boolean
            Return Me.IsNull(Me.tableInv_ExiseRpt.SUBGROUPNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSUBGROUPNAMENull()
            Me(Me.tableInv_ExiseRpt.SUBGROUPNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOPqtyNull() As Boolean
            Return Me.IsNull(Me.tableInv_ExiseRpt.OPqtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOPqtyNull()
            Me(Me.tableInv_ExiseRpt.OPqtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsrecQtyNull() As Boolean
            Return Me.IsNull(Me.tableInv_ExiseRpt.recQtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetrecQtyNull()
            Me(Me.tableInv_ExiseRpt.recQtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotalNull() As Boolean
            Return Me.IsNull(Me.tableInv_ExiseRpt.TotalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotalNull()
            Me(Me.tableInv_ExiseRpt.TotalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSalesNull() As Boolean
            Return Me.IsNull(Me.tableInv_ExiseRpt.SalesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSalesNull()
            Me(Me.tableInv_ExiseRpt.SalesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsISSUENull() As Boolean
            Return Me.IsNull(Me.tableInv_ExiseRpt.ISSUEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetISSUENull()
            Me(Me.tableInv_ExiseRpt.ISSUEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsClosingNull() As Boolean
            Return Me.IsNull(Me.tableInv_ExiseRpt.ClosingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetClosingNull()
            Me(Me.tableInv_ExiseRpt.ClosingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IspriorityNull() As Boolean
            Return Me.IsNull(Me.tableInv_ExiseRpt.priorityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetpriorityNull()
            Me(Me.tableInv_ExiseRpt.priorityColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class VIEWPURCHASEREGISTERSUMMARYRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As VIEWPURCHASEREGISTERSUMMARYRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As VIEWPURCHASEREGISTERSUMMARYRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As VIEWPURCHASEREGISTERSUMMARYRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class Inv_view_Pending_IndentRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Inv_view_Pending_IndentRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As Inv_view_Pending_IndentRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As Inv_view_Pending_IndentRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class ISSUEDETAILSRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ISSUEDETAILSRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As ISSUEDETAILSRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As ISSUEDETAILSRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class issuesummaryRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As issuesummaryRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As issuesummaryRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As issuesummaryRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class INV_VIEW_INPUTTAXRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As INV_VIEW_INPUTTAXRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As INV_VIEW_INPUTTAXRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As INV_VIEW_INPUTTAXRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class STOCKISSUEDETAILRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As STOCKISSUEDETAILRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As STOCKISSUEDETAILRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As STOCKISSUEDETAILRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class STOCKSUMMARYRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As STOCKSUMMARYRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As STOCKSUMMARYRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As STOCKSUMMARYRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class ISSUEREGISTERRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ISSUEREGISTERRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As ISSUEREGISTERRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As ISSUEREGISTERRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class VIEWSTOCKADJUSTMENTRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As VIEWSTOCKADJUSTMENTRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As VIEWSTOCKADJUSTMENTRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As VIEWSTOCKADJUSTMENTRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class VIEWSTOCKREGISTERRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As VIEWSTOCKREGISTERRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As VIEWSTOCKREGISTERRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As VIEWSTOCKREGISTERRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class Inv_view_Pending_PurRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Inv_view_Pending_PurRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As Inv_view_Pending_PurRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As Inv_view_Pending_PurRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class INVENTORYITEMMASTERRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As INVENTORYITEMMASTERRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As INVENTORYITEMMASTERRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As INVENTORYITEMMASTERRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class PO_VIEW_VENDORMASTERRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As PO_VIEW_VENDORMASTERRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As PO_VIEW_VENDORMASTERRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As PO_VIEW_VENDORMASTERRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class INV_PENDING_PURCHASERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As INV_PENDING_PURCHASERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As INV_PENDING_PURCHASERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As INV_PENDING_PURCHASERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class VIEW_FOCREPORTRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As VIEW_FOCREPORTRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As VIEW_FOCREPORTRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As VIEW_FOCREPORTRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class Inv_ExiseRptRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Inv_ExiseRptRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As Inv_ExiseRptRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As Inv_ExiseRptRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace Dataset1TableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class VIEWPURCHASEREGISTERSUMMARYTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "VIEWPURCHASEREGISTERSUMMARY"
            tableMapping.ColumnMappings.Add("GRNDETAILS", "GRNDETAILS")
            tableMapping.ColumnMappings.Add("GRNDATE", "GRNDATE")
            tableMapping.ColumnMappings.Add("SUPPLIERCODE", "SUPPLIERCODE")
            tableMapping.ColumnMappings.Add("SUPPLIERNAME", "SUPPLIERNAME")
            tableMapping.ColumnMappings.Add("GLACCOUNTCODE", "GLACCOUNTCODE")
            tableMapping.ColumnMappings.Add("GLACCOUNTNAME", "GLACCOUNTNAME")
            tableMapping.ColumnMappings.Add("TOTALAMOUNT", "TOTALAMOUNT")
            tableMapping.ColumnMappings.Add("VATAMOUNT", "VATAMOUNT")
            tableMapping.ColumnMappings.Add("SURCHARGEAMT", "SURCHARGEAMT")
            tableMapping.ColumnMappings.Add("DISCOUNTAMOUNT", "DISCOUNTAMOUNT")
            tableMapping.ColumnMappings.Add("BILLAMOUNT", "BILLAMOUNT")
            tableMapping.ColumnMappings.Add("ITEMCODE", "ITEMCODE")
            tableMapping.ColumnMappings.Add("ITEMNAME", "ITEMNAME")
            tableMapping.ColumnMappings.Add("UOM", "UOM")
            tableMapping.ColumnMappings.Add("QTY", "QTY")
            tableMapping.ColumnMappings.Add("RATE", "RATE")
            tableMapping.ColumnMappings.Add("DISCOUNT", "DISCOUNT")
            tableMapping.ColumnMappings.Add("SGSTAMT", "SGSTAMT")
            tableMapping.ColumnMappings.Add("CGSTAMT", "CGSTAMT")
            tableMapping.ColumnMappings.Add("IGSTAMT", "IGSTAMT")
            tableMapping.ColumnMappings.Add("PODATE", "PODATE")
            tableMapping.ColumnMappings.Add("AMOUNT", "AMOUNT")
            tableMapping.ColumnMappings.Add("OTHCHARGE", "OTHCHARGE")
            tableMapping.ColumnMappings.Add("adddate", "adddate")
            tableMapping.ColumnMappings.Add("AVOUCHERNO", "AVOUCHERNO")
            tableMapping.ColumnMappings.Add("AVOUCHERDATE", "AVOUCHERDATE")
            tableMapping.ColumnMappings.Add("ADJUSTEDAMOUNT", "ADJUSTEDAMOUNT")
            tableMapping.ColumnMappings.Add("POSTING", "POSTING")
            tableMapping.ColumnMappings.Add("PONO", "PONO")
            tableMapping.ColumnMappings.Add("Supplierinvno", "Supplierinvno")
            tableMapping.ColumnMappings.Add("OVERALLDISCOUNT", "OVERALLDISCOUNT")
            tableMapping.ColumnMappings.Add("TAXAMOUNT", "TAXAMOUNT")
            tableMapping.ColumnMappings.Add("STOREDESC", "STOREDESC")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Inventory.My.MySettings.Default.CSC2122ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT GRNDETAILS, GRNDATE, SUPPLIERCODE, SUPPLIERNAME, GLACCOUNTCODE, GLACCOUNTN"& _ 
                "AME, TOTALAMOUNT, VATAMOUNT, SURCHARGEAMT, DISCOUNTAMOUNT, BILLAMOUNT, ITEMCODE,"& _ 
                " ITEMNAME, UOM, QTY, RATE, DISCOUNT, SGSTAMT, CGSTAMT, IGSTAMT, PODATE, AMOUNT, "& _ 
                "OTHCHARGE, adddate, AVOUCHERNO, AVOUCHERDATE, ADJUSTEDAMOUNT, POSTING, PONO, Sup"& _ 
                "plierinvno, OVERALLDISCOUNT, TAXAMOUNT, STOREDESC FROM dbo.VIEWPURCHASEREGISTERS"& _ 
                "UMMARY"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As Dataset1.VIEWPURCHASEREGISTERSUMMARYDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As Dataset1.VIEWPURCHASEREGISTERSUMMARYDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As Dataset1.VIEWPURCHASEREGISTERSUMMARYDataTable = New Dataset1.VIEWPURCHASEREGISTERSUMMARYDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
End Namespace
